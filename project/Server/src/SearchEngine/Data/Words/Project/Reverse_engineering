Reverse engineering This article has multiple issues Please help improve it or discuss these issues on the talk page Learn how and when to remove these template messages This article includes a list of references but its sources remain unclear because it has insufficient inline citations Please help to improve this article by introducing more precise citations January 2018 Learn how and when to remove this template message This articles lead section does not adequately summarize key points of its contents Please consider expanding the lead to provide an accessible overview of all important aspects of the article Please discuss this issue on the articles talk page January 2018 Learn how and when to remove this template message Reverse engineering also called back engineering is the process by which a manmade object is deconstructed to reveal its designs architecture or to extract knowledge from the object similar to scientific research the only difference being that scientific research is about a natural phenomenon 1 3 Reverse engineering is applicable in the fields of mechanical engineering electronic engineering software engineering chemical engineering 2 and systems biology 3 Contents 1 Overview 2 Common situations 21 Reverse engineering of machines 22 Reverse engineering of software 221 Binary software 2211 Binary software techniques 222 Software classification 23 Source code 24 Reverse engineering of protocols 25 Reverse engineering of integrated circuitssmart cards 26 Reverse engineering for military applications 27 Overlap with patent law 3 Legality 31 United States 32 European Union 4 See also 5 References 6 Further reading Overview edit There are many reasons for performing reverse engineering in various fields Reverse engineering has its origins in the analysis of hardware for commercial or military advantage 4 13 However the reverse engineering process as such is not concerned with creating a copy or changing the artifact in some way it is only an analysis in order to deduce design features from products with little or no additional knowledge about the procedures involved in their original production 4 15 In some cases the goal of the reverse engineering process can simply be a redocumentation of legacy systems 4 15 5 Even when the reverseengineered product is that of a competitor the goal may not be to copy them but to perform competitor analysis 6 Reverse engineering may also be used to create interoperable products and despite some narrowly tailored United States and European Union legislation the legality of using specific reverse engineering techniques for this purpose has been hotly contested in courts worldwide for more than two decades 7 Software reverse engineering can help to improve the understanding of the underlying source code for the maintenance and improvement of the software relevant information can be extracted in order to make a decision for software development and graphical representations of the code can provide alternate views regarding the source code which can help to detect and fix a software bug or vulnerability Frequently as some software develops its design information and improvements are often lost over time but this lost information can usually be recovered with reverse engineering This process can also help to cut down the time required to understand the source code reducing the overall cost of the software development 8 Reverse engineering can also help to detect and eliminate a malicious code written to the software with better code detectors Reversing a source code can be used to find alternate uses of the source code such as to detect unauthorized replication of the source code where it wasnt intended to be used or to reveal how a competitors product was built 1 This process is commonly used for cracking software and media to remove their copy protection 1 7 or to create a possibly improved copy or even a knockoff which is usually the goal of a competitor or a hacker 1 8 Malware developers often use reverse engineering techniques to find vulnerabilities in an operating system OS in order build a computer virus that can exploit the system vulnerabilities 1 5 Reverse engineering is also being used in cryptanalysis in order to find vulnerabilities in substitution cipher symmetrickey algorithm or publickey cryptography 1 6 In addition to these purposes there are other uses to reverse engineering Interfacing Reverse engineering can be used when a system is required to interface to another system and how both systems would negotiate is to be established Such requirements typically exist for interoperability Military or commercial espionage Learning about an enemys or competitors latest research by stealing or capturing a prototype and dismantling it which may result in development of a similar product or a better countermeasure against it Obsolescence Integrated circuits are often designed on proprietary systems and built on production lines which become obsolete in only a few years When systems using these parts can no longer be maintained since the parts are no longer made the only way to incorporate the functionality into new technology is to reverse engineer the existing chip and then redesign it using newer tools using the understanding gained as a guide Another obsolescence originated problem which can be solved by reverse engineering is the need to support maintenance and supply for continuous operation existing legacy devices which are no longer supported by their original equipment manufacturer OEM This problem is particularly critical in military operations Product security analysis To examine how a product works by determining the specifications of its components and estimate costs identifying potential patent infringement Also part of product security analysis is acquiring sensitive data by disassembling and analysing the design of a system component 9 Another intent may be to remove copy protection or circumvention of access restrictions Competitive technical intelligence Understand what ones competitor is actually doing versus what they say they are doing Saving money When one finds out what a piece of electronics is capable of it can spare a user from purchase of a separate product Repurposing When obsolete objects are reused in a different but useful manner Common situations edit Reverse engineering of machines edit As computeraided design CAD has become more popular reverse engineering has become a viable method to create a 3D virtual model of an existing physical part for use in 3D CAD CAM CAE or other software 10 The reverseengineering process involves measuring an object and then reconstructing it as a 3D model The physical object can be measured using 3D scanning technologies like CMMs laser scanners structured light digitizers or Industrial CT Scanning computed tomography The measured data alone usually represented as a point cloud lacks topological information and design intent The former may be recovered by converting the point cloud to a triangularfaced mesh Reverse engineering aims to go beyond producing such a mesh and to recover the design intent in terms of simple analytical surfaces where appropriate planes cylinders etc as well as possibly NURBS surfaces to produce a boundaryrepresentation CAD model Recovery of such a model allows a design to be modified to meet new requirements a manufacturing plan to be generated etc Hybrid Modelling is a commonly used term when NURBS and Parametric modelling are implemented together Using a combination of geometric and freeform surfaces can provide a powerful method of 3D modelling Areas of freeform data can be combined with exact geometric surfaces to create a hybrid model A typical example of this would be the reverse engineering of a cylinder head which includes freeform cast features such as water jackets and high tolerance machined areas 11 Reverse engineering is also used by businesses to bring existing physical geometry into digital product development environments to make a digital 3D record of their own products or to assess competitors products It is used to analyse for instance how a product works what it does and what components it consists of estimate costs and identify potential patent infringement etc Value engineering is a related activity also used by businesses It involves deconstructing and analysing products but the objective is to find opportunities for cost cutting Reverse engineering of software edit In 1990 the Institute of Electrical and Electronics Engineers IEEE defined reverse engineering as the process of analyzing asubject system to identify the systems components and their interrelationships and to create representations of the system in another form or at a higherlevel of abstraction where the subject system is the end product of software development Reverse engineering is a process of examination only the software system under consideration is not modified which would make it reengineering or restructuring Reverse engineering can be performed from any stage of the product cycle not necessarily from the functional end product 8 There are two components in reverse engineering redocumentation and design recovery Redocumentation is the creation of new representation of the computer code so that it is easier to understand Meanwhile design recovery is the use of deduction or reasoning from general knowledge or personal experience of the product in order to fully understand the product functionality 8 It can also be seen as going backwards through the development cycle 12 In this model the output of the implementation phase in source code form is reverseengineered back to the analysis phase in an inversion of the traditional waterfall model Another term for this technique is program comprehension 5 The Working Conference on Reverse Engineering WCRE has been held yearly to explore and expand the techniques of reverse engineering 1 13 Computeraided software engineering CASE and automated code generation have contributed greatly in the field of reverse engineering 1 Software antitamper technology like obfuscation is used to deter both reverse engineering and reengineering of proprietary software and softwarepowered systems In practice two main types of reverse engineering emerge In the first case source code is already available for the software but higherlevel aspects of the program perhaps poorly documented or documented but no longer valid are discovered In the second case there is no source code available for the software and any efforts towards discovering one possible source code for the software are regarded as reverse engineering This second usage of the term is the one most people are familiar with Reverse engineering of software can make use of the clean room design technique to avoid copyright infringement On a related note black box testing in software engineering has a lot in common with reverse engineering The tester usually has the API but their goals are to find bugs and undocumented features by bashing the product from outside 14 Other purposes of reverse engineering include security auditing removal of copy protection cracking circumvention of access restrictions often present in consumer electronics customization of embedded systems such as engine management systems inhouse repairs or retrofits enabling of additional features on lowcost crippled hardware such as some graphics card chipsets or even mere satisfaction of curiosity Binary software edit Binary reverse engineering is performed if source code for a software is unavailable 1 This process is sometimes termed Reverse Code Engineering or RCE 15 As an example decompilation of binaries for the Java platform can be accomplished using Jad One famous case of reverse engineering was the first non IBM implementation of the PC BIOS which launched the historic IBM PC compatible industry that has been the overwhelmingly dominant computer hardware platform for many years Reverse engineering of software is protected in the US by the fair use exception in copyright law 16 The Samba software which allows systems that are not running Microsoft Windows systems to share files with systems that are is a classic example of software reverse engineering 17 since the Samba project had to reverseengineer unpublished information about how Windows file sharing worked so that nonWindows computers could emulate it The Wine project does the same thing for the Windows API and OpenOfficeorg is one party doing this for the Microsoft Office file formats The ReactOS project is even more ambitious in its goals as it strives to provide binary ABI and API compatibility with the current Windows OSes of the NT branch allowing software and drivers written for Windows to run on a cleanroom reverseengineered Free Software GPL counterpart WindowsSCOPE allows for reverseengineering the full contents of a Windows systems live memory including a binarylevel graphical reverse engineering of all running processes Another classic if not wellknown example is that in 1987 Bell Laboratories reverseengineered the Mac OS System 41 originally running on the Apple Macintosh SE so they could run it on RISC machines of their own 18 Binary software techniques edit Reverse engineering of software can be accomplished by various methodsThe three main groups of software reverse engineering are Analysis through observation of information exchange most prevalent in protocol reverse engineering which involves using bus analyzers and packet sniffers for example for accessing a computer bus or computer network connection and revealing the traffic data thereon Bus or network behavior can then be analyzed to produce a standalone implementation that mimics that behavior This is especially useful for reverse engineering device drivers Sometimes reverse engineering on embedded systems is greatly assisted by tools deliberately introduced by the manufacturer such as JTAG ports or other debugging means In Microsoft Windows lowlevel debuggers such as SoftICE are popular Disassembly using a disassembler meaning the raw machine language of the program is read and understood in its own terms only with the aid of machinelanguage mnemonics This works on any computer program but can take quite some time especially for someone not used to machine code The Interactive Disassembler is a particularly popular tool Decompilation using a decompiler a process that tries with varying results to recreate the source code in some highlevel language for a program only available in machine code or bytecode Software classification edit Software classification is the process of identifying similarities between different software binaries for example two different versions of the same binary used to detect code relations between software samples This task was traditionally done manually for several reasons such as patch analysis for vulnerability detection and copyright infringement but nowadays can be done somewhat automatically for large numbers of samples This method is being used mostly for long and thorough reverse engineering tasks complete analysis of a complex algorithm or big piece of software In general statistical classification is considered to be a hard problem and this is also true for software classification therefore there arent many solutionstools that handle this task well Source code edit A number of UML tools refer to the process of importing and analysing source code to generate UML diagrams as reverse engineering See List of UML tools Although UML is one approach to providing reverse engineering more recent advances in international standards activities have resulted in the development of the Knowledge Discovery Metamodel KDM This standard delivers an ontology for the intermediate or abstracted representation of programming language constructs and their interrelationships An Object Management Group standard on its way to becoming an ISO standard as well KDM has started to take hold in industry with the development of tools and analysis environments which can deliver the extraction and analysis of source binary and byte code For source code analysis KDMs granular standards architecture enables the extraction of software system flows data control call maps architectures and business layer knowledge rules terms process The standard enables the use of a common data format XMI enabling the correlation of the various layers of system knowledge for either detailed analysis eg root cause impact or derived analysis eg business process extraction Although efforts to represent language constructs can be neverending given the number of languages the continuous evolution of software languages and the development of new languages the standard does allow for the use of extensions to support the broad language set as well as evolution KDM is compatible with UML BPMN RDF and other standards enabling migration into other environments and thus leverage system knowledge for efforts such as software system transformation and enterprise business layer analysis Reverse engineering of protocols edit Protocols are sets of rules that describe message formats and how messages are exchanged ie the protocol statemachine Accordingly the problem of protocol reverseengineering can be partitioned into two subproblems message format and statemachine reverseengineering The message formats have traditionally been reverseengineered through a tedious manual process which involved analysis of how protocol implementations process messages but recent research proposed a number of automatic solutions 19 20 21 Typically these automatic approaches either group observed messages into clusters using various clustering analyses or emulate the protocol implementation tracing the message processing There has been less work on reverseengineering of statemachines of protocols In general the protocol statemachines can be learned either through a process of offline learning which passively observes communication and attempts to build the most general statemachine accepting all observed sequences of messages and online learning which allows interactive generation of probing sequences of messages and listening to responses to those probing sequences In general offline learning of small statemachines is known to be NPcomplete 22 while online learning can be done in polynomial time 23 An automatic offline approach has been demonstrated by Comparetti et al 21 and an online approach by Cho et al 24 Other components of typical protocols like encryption and hash functions can be reverseengineered automatically as well Typically the automatic approaches trace the execution of protocol implementations and try to detect buffers in memory holding unencrypted packets 25 Reverse engineering of integrated circuitssmart cards edit Reverse engineering is an invasive and destructive form of analyzing a smart card The attacker grinds away layer after layer of the smart card and takes pictures with an electron microscope With this technique it is possible to reveal the complete hardware and software part of the smart card The major problem for the attacker is to bring everything into the right order to find out how everything works The makers of the card try to hide keys and operations by mixing up memory positions for example bus scrambling 26 27 In some cases it is even possible to attach a probe to measure voltages while the smart card is still operational The makers of the card employ sensors to detect and prevent this attack 28 This attack is not very common because it requires a large investment in effort and special equipment that is generally only available to large chip manufacturers Furthermore the payoff from this attack is low since other security techniques are often employed such as shadow accounts It is uncertain at this time whether attacks against CHIPPIN cards to replicate encryption data and consequentially crack PINS would provide a cost effective attack on multifactor authentication Reverse engineering for military applications edit This section needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Reverse engineering news newspapers books scholar JSTOR July 2014 Learn how and when to remove this template message Reverse engineering is often used by people in order to copy other nations technologies devices or information that have been obtained by regular troops in the fields or by intelligence operations It was often used during the Second World War and the Cold War Wellknown examples from WWII and later include Jerry can British and American forces noticed that the Germans had gasoline cans with an excellent design They reverseengineered copies of those cans The cans were popularly known as Jerry cans Panzerschreck The Germans captured an American Bazooka during World War II and reverse engineered it to create the larger Panzerschreck Tupolev Tu4 In 1944 three American B29 bombers on missions over Japan were forced to land in the USSR The Soviets who did not have a similar strategic bomber decided to copy the B29 Within three years they had developed the Tu4 a nearperfect copy 29 SCR584 radar copied by USSR after the Second World War Known in the form a few modifications СЦР584 БинокльД V2 rocket Technical documents for the V2 and related technologies were captured by the Western Allies at the end of the war The American side focused their reverse engineering efforts via operation Paperclip which led to the development of the PGM11 Redstone rocket 30 The Soviet side used captured German engineers to reproduce technical documents and plans and work from captured hardware in order to make their clone of the rocket the R1 Thus began the postwar Soviet rocket program that led to the R7 and the beginning of the space race K13R3S missile NATO reporting name AA2 Atoll a Soviet reverseengineered copy of the AIM9 Sidewinder was made possible after a Taiwanese AIM9B hit a Chinese MiG17 without exploding in September 1958 31 The missile became lodged within the airframe and the pilot returned to base with what Russian scientists would describe as a university course in missile development BGM71 TOW Missile In May 1975 negotiations between Iran and Hughes Missile Systems on coproduction of the TOW and Maverick missiles stalled over disagreements in the pricing structure the subsequent 1979 revolution ending all plans for such coproduction Iran was later successful in reverseengineering the missile and are currently producing their own copy the Toophan China has reversed engineered many examples of Western and Russian hardware from fighter aircraft to missiles and HMMWV cars such as the MiG15 which became the J7 and the Su33 which became the J15 32 More recent analyses of Chinas military growth have pointed to the inherent limitations of reverse engineering for advanced weapon systems 33 During the Second World War Polish and British cryptographers studied captured German Enigma message encryption machines for weaknesses Their operation was then simulated on electromechanical devices called Bombes that tried all the possible scrambler settings of the Enigma machines to help break the coded messages sent by the Germans Also during the Second World War British scientists analyzed and defeated a series of increasingly sophisticated radio navigation systems being used by the German Luftwaffe to perform guided bombing missions at night The British countermeasures to this system were so effective that in some cases German aircraft were led by signals to land at RAF bases believing they were back in German territory Overlap with patent law edit Reverse engineering applies primarily to gaining understanding of a process or artifact where the manner of its construction use or internal processes is not made clear by its creator Patented items do not of themselves have to be reverseengineered to be studied since the essence of a patent is that the inventor provides detailed public disclosure themselves and in return receives legal protection of the invention involved However an item produced under one or more patents could also include other technology that is not patented and not disclosed Indeed one common motivation of reverse engineering is to determine whether a competitors product contains patent infringements or copyright infringements Legality edit United States edit In the United States even if an artifact or process is protected by trade secrets reverseengineering the artifact or process is often lawful as long as it has been legitimately obtained 34 Reverse engineering of computer software in the US often falls under both contract law as a breach of contract as well as any other relevant laws This is because most end user license agreements specifically prohibit it and US courts have ruled that if such terms are present they override the copyright law which expressly permits it see Bowers v Baystate Technologies 35 36 Sec 103f of the DMCA 17 USC 1201 f says that a person who is in legal possession of a program is permitted to reverseengineer and circumvent its protection if this is necessary in order to achieve interoperability a term broadly covering other devices and programs being able to interact with it make use of it and to use and transfer data to and from it in useful ways A limited exemption exists that allows the knowledge thus gained to be shared and used for interoperability purposes 37 European Union edit EU Directive 200924 on the legal protection of computer programs which superseded an earlier 1991 directive 38 governs reverse engineering in the European Union 39 40 See also edit Antikythera mechanism Benchmarking Bus analyzer Chonda Clone computing Clean room design CMM Code morphing Connectix Virtual Game Station Counterfeiting Cryptanalysis Decompile Deformulation Digital Millennium Copyright Act DMCA Dongle Forensic engineering Industrial CT scanning Interactive Disassembler Knowledge Discovery Metamodel Laser scanner List of production topics Listeroid Engines Logic analyzer Paycheck Product teardown Repurposing Retrodiction Sega v Accolade Software archaeology Software cracking Structured light digitizer Value engineering References edit a b c d e f g h i Eilam Eldad 2005 Reversing secrets of reverseengineering John Wiley Sons ISBN 9780764574818 CS1 maint uses authors parameter link mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Ken Thayer How Does Reverse Engineering Work globalspec IEEE Global Spec Retrieved 26 February 2018 Alejandro F Villaverde Julio R Banga 6 February 2014 Reverse engineering and identification in systems biology strategies perspectives and challenges Journal of the Royal Society Interface 11 91 20130505 doi 101098rsif20130505 PMC 3869153 PMID 24307566 a b c Chikofsky E J Cross J H II 1990 Reverse Engineering and Design Recovery A Taxonomy IEEE Software 7 1 1317 doi 1011095243044 a b A Survey of Reverse Engineering and Program Comprehension Michael L Nelson April 19 1996 ODU CS 551 Software Engineering Survey arXiv cs0503068v1 Vinesh Raja Kiran J Fernandes 2007 Reverse Engineering An Industrial Perspective Springer Science Business Media p3 ISBN 9781846288562 Jonathan Band Masanobu Katoh 2011 Interfaces on Trial 20 MIT Press p136 ISBN 9780262294461 a b c Chikofsky E J Cross J H January 1990 Reverse engineering and design recovery A taxonomy PDF IEEE Software 7 1317 doi 1011095243044 Internet Engineering Task Force RFC 2828 Internet Security Glossary Varady T Martin R Cox J 1997 Reverse engineering of geometric modelsan introduction ComputerAided Design 29 4 255268 doi 101016S0010448596000541 Reverse Engineering Warden R 1992 Software Reuse and Reverse Engineering in Practice London England Chapman Hall pp283305 Working Conference on Reverse Engineering WCRE unitrierde Computer Science bibliography Archived from the original on 14 March 2017 Retrieved 22 February 2018 Shahbaz Muzammil 2012 Reverse Engineering and Testing of BlackBox Software Components by Grammatical Inference techniques LAP LAMBERT Academic Publishing ISBN 9783659140730 Chuvakin Anton Cyrus Peikari January 2004 Security Warrior 1st ed OReilly Archived from the original on 20060522 Retrieved 20060525 Samuelson Pamela Scotchmer Suzanne 2002 The Law and Economics of Reverse Engineering Yale Law Journal 111 7 15751663 doi 102307797533 JSTOR 797533 Samba An Introduction 20011127 Retrieved 20090507 Lee Newton 2013 Counterterrorism and Cybersecurity Total Information Awareness 2nd Edition Springer ScienceBusiness Media p110 ISBN 9781461472049 W Cui J Kannan and H J Wang Discoverer Automatic protocol reverse engineering from network traces In Proceedings of 16th USENIX Security Symposium on USENIX Security Symposium pp 114 W Cui M Peinado K Chen H J Wang and L IrúnBriz Tupni Automatic reverse engineering of input formats In Proceedings of the 15th ACM Conference on Computer and Communications Security pp 391402 ACM Oct 2008 a b P M Comparetti G Wondracek C Kruegel and E Kirda Prospex Protocol specification extraction In Proceedings of the 2009 30th IEEE Symposium on Security and Privacy pp 110125 Washington 2009 IEEE Computer Society Gold E 1978 Complexity of automaton identification from given data Information and Control 37 3 302320 doi 101016S0019995878905624 D Angluin 1987 Learning regular sets from queries and counterexamples Information and Computation 75 2 87106 doi 1010160890540187900526 CY Cho D Babic R Shin and D Song Inference and Analysis of Formal Models of Botnet Command and Control Protocols 2010 ACM Conference on Computer and Communications Security Polyglot automatic extraction of protocol message format using dynamic binary analysis J Caballero H Yin Z Liang and D Song Proceedings of the 14th ACM conference on Computer and communications security p 317329 Wolfgang Rankl Wolfgang Effing Smart Card Handbook 2004 T Welz Smart cards as methods for payment 2008 Seminar ITSSecurity RuhrUniversität Bochum David C Musker Protecting Exploiting Intellectual Property in Electronics IBC Conferences 10 June 1998 Yeam Gordon and Vladimir Rigmant Tupolev Tu4 Soviet Superfortress Hinckley UK Midland 2002 Redstone rocket centennialofflightnet Retrieved 20100427 The Chinese Air Force Evolving Concepts Roles and Capabilities Center for the Study of Chinese Military Affairs US by National Defense University Press pg 277 Chandrashekar S R Nagappa L Sundaresan and N Ramani 2011 Technology Innovation in China A Case Study of Single Crystal Superalloy Development for Aircraft Turbine Blades R411 ISSSP National Institute of Advanced Studies Bangalore httpissspinwpcontentuploads201301TechnologyandInnovationinChinaAcaseStudyofSingleCrystal4pdf and Dillon Zhou China J15 Fighter Jet Chinese Officials Defend New Fighter As Chinese Original but Questions Remain Mic December 16 2012 httpsmiccomarticles20270chinaj15fighterjetchineseofficialsdefendnewfighter aschineseoriginalbutquestionsremain Andrea Gilli and Mauro Gilli Why China Has Not Caught Up Yet MilitaryTechnological Superiority and the Limits of Imitation Reverse Engineering and Cyber Espionage International Security 433 2019 141189 httpsdoiorg101162iseca00337 Trade Secrets 101 Feature Article March 2011 ASME Retrieved on 20131031 Baystate v Bowers Discussion Utsystemedu Retrieved on 20110529 Gross Grant 20030626 Contract case could hurt reverse engineering Developer World InfoWorld Retrieved on 20110529 The section states f Reverse Engineering 1 Notwithstanding the provisions of subsection a1A a person who has lawfully obtained the right to use a copy of a computer program may circumvent a technological measure that effectively controls access to a particular portion of that program for the sole purpose of identifying and analyzing those elements of the program that are necessary to achieve interoperability of an independently created computer program with other programs and that have not previously been readily available to the person engaging in the circumvention to the extent any such acts of identification and analysis do not constitute infringement under this title 2 Notwithstanding the provisions of subsections a2 and b a person may develop and employ technological means to circumvent a technological measure or to circumvent protection afforded by a technological measure in order to enable the identification and analysis under paragraph 1 or for the purpose of enabling interoperability of an independently created computer program with other programs if such means are necessary to achieve such interoperability to the extent that doing so does not constitute infringement under this title 3 The information acquired through the acts permitted under paragraph 1 and the means permitted under paragraph 2 may be made available to others if the person referred to in paragraph 1 or 2 as the case may be provides such information or means solely for the purpose of enabling interoperability of an independently created computer program with other programs and to the extent that doing so does not constitute infringement under this title or violate applicable law other than this section 4 For purposes of this subsection the term interoperability means the ability of computer programs to exchange information and of such programs mutually to use the information which has been exchanged Council Directive 91250EEC of 14 May 1991 on the legal protection of computer programs Eurlexeuropaeu Retrieved on 20110529 DIRECTIVE 200924EC OF THE EUROPEAN PARLIAMENT AND OF THE COUNCIL of 23 April 2009 on the legal protection of computer programs The directive states mwparseroutput templatequoteoverflowhiddenmargin1em 0padding0 40pxmwparseroutput templatequote templatequotecitelineheight15emtextalignleftpaddingleft16emmargintop0 The unauthorised reproduction translation adaptation or transformation of the form of the code in which a copy of a computer program has been made available constitutes an infringement of the exclusive rights of the author Nevertheless circumstances may exist when such a reproduction of the code and translation of its form are indispensable to obtain the necessary information to achieve the interoperability of an independently created program with other programs It has therefore to be considered that in these limited circumstances only performance of the acts of reproduction and translation by or on behalf of a person having a right to use a copy of the program is legitimate and compatible with fair practice and must therefore be deemed not to require the authorisation of the rightholder An objective of this exception is to make it possible to connect all components of a computer system including those of different manufacturers so that they can work together Such an exception to the authors exclusive rights may not be used in a way which prejudices the legitimate interests of the rightholder or which conflicts with a normal exploitation of the program Further reading edit Eilam Eldad 2005 Reversing Secrets of Reverse Engineering Wiley Publishing p595 ISBN 9780764574818 Elvidge Julia Using Reverse Engineering to Discover Patent Infringement Chipworks Sept 2010 Online httpwwwphotonicscomArticleaspxAID44063 Cipresso Teodoro 2009 Software Reverse Engineering Education SJSU Masters Thesis ProQuest UML Retrieved 20090822 Hausi A Müller and Holger M Kienle A Small Primer on Software Reverse Engineering Technical Report University of Victoria 17 pages March 2009 Online httpholgerkienlewikispacescomfileviewMKUVic09pdf Heines Henry Determining Infringement by XRay Diffraction Chemical Engineering Process Jan 1999 example of reverse engineering used to detect IP infringement Huang Andrew 2003 Hacking the Xbox An Introduction to Reverse Engineering No Starch Press ISBN 9781593270292 James Dick January 19 2006 Reverse Engineering Delivers Product Knowledge Aids Technology Spread Electronic Design Penton Media Inc Retrieved 20090203 Messler Robert 2013 Reverse Engineering Mechanisms Structures Systems Materials McGraw Hill ISBN 9780071825160 introduction to hardware teardowns including methodology goals Raja Vinesh Fernandes Kiran J 2008 Reverse Engineering An Industrial Perspective Springer p242 ISBN 9781846288555 Reverse Engineering for Beginners Samuelson Pamela and Scotchmer Suzanne The Law and Economics of Reverse Engineering 111 Yale LJ 1575 2002 Online httppeopleischoolberkeleyedupampapersle20reveng3pdf Schulman Andrew Brown Ralf D Maxey David Michels Raymond J Kyle Jim 1994 November 1993 Undocumented DOS A programmers guide to reserved MSDOS functions and data structures expanded to include MSDOS 6 Novell DOS and Windows 31 2 ed Reading Massachusetts Addison Wesley pp 229241 ISBN 020163287X xviii856vi pages 35floppy Errata 1 2 NB On general methodology of reverse engineering applied to massmarket software a program for exploring DOS disassembling DOS Schulman Andrew et al 1992 Undocumented Windows A Programmers Guide to Reserved Microsoft Windows API Functions Addison Wesley ISBN 9780201608342 pp59188 on general methodology of reverse engineering applied to massmarket software examining Windows executables disassembling Windows tools for exploring Windows Schulman Andrew Hiding in Plain Sight Using Reverse Engineering to Uncover Software Patent Infringement Intellectual Property Today Nov 2010 Online httpwwwiptodaycomissues201011hidinginplainsightusingreverseengineeringtouncoversoftwarepatentinfringementasp Schulman Andrew Open to Inspection Using Reverse Engineering to Uncover Software Prior Art New Matter Calif State Bar IP Section Summer 2011 Part 1 Fall 2011 Part 2 Online httpwwwSoftwareLitigationConsultingcom Thumm Mike 2007 Talking Tactics PDF IEEE 2007 Custom Integrated Circuits Conference CICC IEEE Inc Retrieved 20090203 v t e Engineering Civil Architectural Construction Environmental Earthquake Geotechnical Hydraulic Mining Structural Transportation Mechanical Acoustical Aerospace Automotive Marine Railway Thermal Electrical Computer Control Electromechanics Electronics Microwaves Power Radio Frequency Telecommunications Chemical Biochemical Biological Molecular Petroleum Process Reaction Interdisciplinary Agricultural Audio Biomedical Engineering mathematics Engineering mechanics Engineering physics Engineering science Fire Industrial Information Materials science Ceramics Metallurgy Polymer Mechatronics Military Nanotechnology Nuclear Optical Photonics Privacy Robotics Sanitary Security Software Systems Glossaries Engineering Aerospace engineering Civil engineering Electrical and electronics engineering Mechanical engineering Structural engineering List of engineering branches CategoryEngineering Engineering portal Authority control BNF cb124305693 data LCCN sh93004214