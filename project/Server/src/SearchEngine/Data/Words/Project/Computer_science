Computer science Computer sciences redirects here For the American corporation see Computer Sciences Corporation Study of the theoretical foundations of computation Not to be confused with computational science or software engineering Computer science deals with the theoretical foundations of computation and practical techniques for their application Computer science History Outline Glossary Category v t e Computer science sometimes called computation science is the study of processes that interact with data and that can be represented as data in the form of programs It enables the use of algorithms to manipulate store and communicate digital information A computer scientist studies the theory of computation and the practice of designing software systems 1 Its fields can be divided into theoretical and practical disciplines Computational complexity theory is highly abstract while computer graphics emphasizes realworld applications Programming language theory considers approaches to the description of computational processes while software engineering involves the use of programming languages and complex systems Humancomputer interaction considers the challenges in making computers useful usable and accessible mwparseroutput toclimit2 toclevel1 ulmwparseroutput toclimit3 toclevel2 ulmwparseroutput toclimit4 toclevel3 ulmwparseroutput toclimit5 toclevel4 ulmwparseroutput toclimit6 toclevel5 ulmwparseroutput toclimit7 toclevel6 uldisplaynone Contents 1 History 2 Etymology 3 Philosophy 4 Fields 41 Theoretical computer science 411 Data structures and algorithms 412 Theory of computation 413 Information and coding theory 414 Programming language theory 415 Formal methods 42 Computer systems 421 Computer architecture and computer engineering 422 Computer performance analysis 423 Concurrent parallel and distributed systems 424 Computer networks 425 Computer security and cryptography 426 Databases 43 Computer applications 431 Computer graphics and visualization 432 Humancomputer interaction 433 Scientific computing and simulation 434 Artificial intelligence 44 Software engineering 5 Discoveries 6 Programming paradigms 7 Academia 8 Education 81 Challenges 9 See also 10 Notes 11 References 12 Further reading 121 Overview 122 Selected literature 123 Articles 124 Curriculum and classification 13 External links 131 Bibliography and academic search engines 132 Professional organizations 133 Misc History edit Main article History of computer science History of computing Hardware Hardware before 1960 Hardware 1960s to present Software Software Unix Free software and opensource software Computer science Artificial intelligence Compiler construction Computer science Operating systems Programming languages Prominent pioneers Software engineering Modern concepts Generalpurpose CPUs Graphical user interface Internet Laptops Personal computers Video games World Wide Web By country Bulgaria Poland Romania Soviet Bloc Soviet Union Yugoslavia Timeline of computing before 1950 19501979 19801989 19901999 20002009 20102019 more timelines Glossary of computer science Category v t e Charles Babbage sometimes referred to as the father of computing 2 Ada Lovelace is often credited with publishing the first algorithm intended for processing on a computer 3 The earliest foundations of what would become computer science predate the invention of the modern digital computer Machines for calculating fixed numerical tasks such as the abacus have existed since antiquity aiding in computations such as multiplication and division Algorithms for performing computations have existed since antiquity even before the development of sophisticated computing equipment Wilhelm Schickard designed and constructed the first working mechanical calculator in 1623 4 In 1673 Gottfried Leibniz demonstrated a digital mechanical calculator called the Stepped Reckoner 5 He may be considered the first computer scientist and information theorist for among other reasons documenting the binary number system In 1820 Thomas de Colmar launched the mechanical calculator industry note 1 when he released his simplified arithmometer which was the first calculating machine strong enough and reliable enough to be used daily in an office environment Charles Babbage started the design of the first automatic mechanical calculator his Difference Engine in 1822 which eventually gave him the idea of the first programmable mechanical calculator his Analytical Engine 6 He started developing this machine in 1834 and in less than two years he had sketched out many of the salient features of the modern computer 7 A crucial step was the adoption of a punched card system derived from the Jacquard loom 7 making it infinitely programmable note 2 In 1843 during the translation of a French article on the Analytical Engine Ada Lovelace wrote in one of the many notes she included an algorithm to compute the Bernoulli numbers which is considered to be the first published algorithm ever specifically tailored for implementation on a computer 8 Around 1885 Herman Hollerith invented the tabulator which used punched cards to process statistical information eventually his company became part of IBM Following Babbage although unaware of his earlier work Percy Ludgate in 1909 published 9 the 2nd of the only two designs for mechanical analytical engines in history In 1937 one hundred years after Babbages impossible dream Howard Aiken convinced IBM which was making all kinds of punched card equipment and was also in the calculator business 10 to develop his giant programmable calculator the ASCCHarvard Mark I based on Babbages Analytical Engine which itself used cards and a central computing unit When the machine was finished some hailed it as Babbages dream come true 11 During the 1940s as new and more powerful computing machines such as the AtanasoffBerry computer and ENIAC were developed the term computer came to refer to the machines rather than their human predecessors 12 As it became clear that computers could be used for more than just mathematical calculations the field of computer science broadened to study computation in general In 1945 IBM founded the Watson Scientific Computing Laboratory at Columbia University in New York City The renovated fraternity house on Manhattans West Side was IBMs first laboratory devoted to pure science The lab is the forerunner of IBMs Research Division which today operates research facilities around the world 13 Ultimately the close relationship between IBM and the university was instrumental in the emergence of a new scientific discipline with Columbia offering one of the first academiccredit courses in computer science in 1946 14 Computer science began to be established as a distinct academic discipline in the 1950s and early 1960s 15 16 The worlds first computer science degree program the Cambridge Diploma in Computer Science began at the University of Cambridge Computer Laboratory in 1953 The first computer science department in the United States was formed at Purdue University in 1962 17 Since practical computers became available many applications of computing have become distinct areas of study in their own rights Although many initially believed it was impossible that computers themselves could actually be a scientific field of study in the late fifties it gradually became accepted among the greater academic population 18 19 It is the now wellknown IBM brand that formed part of the computer science revolution during this time IBM short for International Business Machines released the IBM 704 20 and later the IBM 709 21 computers which were widely used during the exploration period of such devices Still working with the IBM computer was frustrating if you had misplaced as much as one letter in one instruction the program would crash and you would have to start the whole process over again 18 During the late 1950s the computer science discipline was very much in its developmental stages and such issues were commonplace 19 The concept of a fieldeffect transistor was proposed by Julius Edgar Lilienfeld in 1925 John Bardeen and Walter Brattain while working under William Shockley at Bell Labs built the first working transistor the pointcontact transistor in 1947 22 23 In 1953 the University of Manchester built the first transistorized computer called the Transistor Computer 24 However early junction transistors were relatively bulky devices that were difficult to manufacture on a massproduction basis which limited them to a number of specialised applications 25 The metaloxidesilicon fieldeffect transistor MOSFET or MOS transistor was invented by Mohamed Atalla and Dawon Kahng at Bell Labs in 1959 26 27 It was the first truly compact transistor that could be miniaturised and massproduced for a wide range of uses 25 The MOSFET made it possible to build highdensity integrated circuit chips 28 29 leading to what is known as the computer revolution 30 or microcomputer revolution 31 Time has seen significant improvements in the usability and effectiveness of computing technology 32 Modern society has seen a significant shift in the users of computer technology from usage only by experts and professionals to a near ubiquitous user base Initially computers were quite costly and some degree of humanitarian aid was needed for efficient usein part from professional computer operators As computer adoption became more widespread and affordable less human assistance was needed for common usage See also History of computing and History of informatics Etymology edit See also Informatics Etymology Although first proposed in 1956 19 the term computer science appears in a 1959 article in Communications of the ACM 33 in which Louis Fein argues for the creation of a Graduate School in Computer Sciences analogous to the creation of Harvard Business School in 1921 34 justifying the name by arguing that like management science the subject is applied and interdisciplinary in nature while having the characteristics typical of an academic discipline 33 His efforts and those of others such as numerical analyst George Forsythe were rewarded universities went on to create such departments starting with Purdue in 1962 35 Despite its name a significant amount of computer science does not involve the study of computers themselves Because of this several alternative names have been proposed 36 Certain departments of major universities prefer the term computing science to emphasize precisely that difference Danish scientist Peter Naur suggested the term datalogy 37 to reflect the fact that the scientific discipline revolves around data and data treatment while not necessarily involving computers The first scientific institution to use the term was the Department of Datalogy at the University of Copenhagen founded in 1969 with Peter Naur being the first professor in datalogy The term is used mainly in the Scandinavian countries An alternative term also proposed by Naur is data science this is now used for a multidisciplinary field of data analysis including statistics and databases Also in the early days of computing a number of terms for the practitioners of the field of computing were suggested in the Communications of the ACM turingineer turologist flowchartsman applied metamathematician and applied epistemologist 38 Three months later in the same journal comptologist was suggested followed next year by hypologist 39 The term computics has also been suggested 40 In Europe terms derived from contracted translations of the expression automatic information eg informazione automatica in Italian or information and mathematics are often used eg informatique French Informatik German informatica Italian Dutch informática Spanish Portuguese informatika Slavic languages and Hungarian or pliroforiki πληροφορική which means informatics in Greek Similar words have also been adopted in the UK as in the School of Informatics of the University of Edinburgh 41 In the US however informatics is linked with applied computing or computing in the context of another domain 42 A folkloric quotation often attributed tobut almost certainly not first formulated by Edsger Dijkstra states that computer science is no more about computers than astronomy is about telescopes note 3 The design and deployment of computers and computer systems is generally considered the province of disciplines other than computer science For example the study of computer hardware is usually considered part of computer engineering while the study of commercial computer systems and their deployment is often called information technology or information systems However there has been much crossfertilization of ideas between the various computerrelated disciplines Computer science research also often intersects other disciplines such as philosophy cognitive science linguistics mathematics physics biology statistics and logic Computer science is considered by some to have a much closer relationship with mathematics than many scientific disciplines with some observers saying that computing is a mathematical science 15 Early computer science was strongly influenced by the work of mathematicians such as Kurt Gödel Alan Turing Rózsa Péter and Alonzo Church and there continues to be a useful interchange of ideas between the two fields in areas such as mathematical logic category theory domain theory and algebra 19 The relationship between Computer Science and Software Engineering is a contentious issue which is further muddied by disputes over what the term Software Engineering means and how computer science is defined 43 David Parnas taking a cue from the relationship between other engineering and science disciplines has claimed that the principal focus of computer science is studying the properties of computation in general while the principal focus of software engineering is the design of specific computations to achieve practical goals making the two separate but complementary disciplines 44 The academic political and funding aspects of computer science tend to depend on whether a department formed with a mathematical emphasis or with an engineering emphasis Computer science departments with a mathematics emphasis and with a numerical orientation consider alignment with computational science Both types of departments tend to make efforts to bridge the field educationally if not across all research Philosophy edit Main article Philosophy of computer science A number of computer scientists have argued for the distinction of three separate paradigms in computer science Peter Wegner argued that those paradigms are science technology and mathematics 45 Peter Denning s working group argued that they are theory abstraction modeling and design 46 Amnon H Eden described them as the rationalist paradigm which treats computer science as a branch of mathematics which is prevalent in theoretical computer science and mainly employs deductive reasoning the technocratic paradigm which might be found in engineering approaches most prominently in software engineering and the scientific paradigm which approaches computerrelated artifacts from the empirical perspective of natural sciences identifiable in some branches of artificial intelligence 47 Computer science focuses on methods involved in design specification programming verification implementation and testing of humanmade computing systems 48 Fields edit mwparseroutput templatequoteoverflowhiddenmargin1em 0padding0 40pxmwparseroutput templatequote templatequotecitelineheight15emtextalignleftpaddingleft16emmargintop0 Computer science is no more about computers than astronomy is about telescopes Michael Fellows Further information Outline of computer science As a discipline computer science spans a range of topics from theoretical studies of algorithms and the limits of computation to the practical issues of implementing computing systems in hardware and software 49 50 CSAB formerly called Computing Sciences Accreditation Boardwhich is made up of representatives of the Association for Computing Machinery ACM and the IEEE Computer Society IEEE CS 51 identifies four areas that it considers crucial to the discipline of computer science theory of computation algorithms and data structures programming methodology and languages and computer elements and architecture In addition to these four areas CSAB also identifies fields such as software engineering artificial intelligence computer networking and communication database systems parallel computation distributed computation humancomputer interaction computer graphics operating systems and numerical and symbolic computation as being important areas of computer science 49 Theoretical computer science edit Main article Theoretical computer science Theoretical Computer Science is mathematical and abstract in spirit but it derives its motivation from the practical and everyday computation Its aim is to understand the nature of computation and as a consequence of this understanding provide more efficient methodologies All studies related to mathematical logic and formal concepts and methods could be considered as theoretical computer science provided that the motivation is clearly drawn from the field of computing Data structures and algorithms edit Main articles Data structure and Algorithm Data structures and algorithms are the studies of commonly used computational methods and their computational efficiency O n 2 Analysis of algorithms Algorithms Data structures Combinatorial optimization Computational geometry Theory of computation edit Main article Theory of computation According to Peter Denning the fundamental question underlying computer science is What can be efficiently automated 15 Theory of computation is focused on answering fundamental questions about what can be computed and what amount of resources are required to perform those computations In an effort to answer the first question computability theory examines which computational problems are solvable on various theoretical models of computation The second question is addressed by computational complexity theory which studies the time and space costs associated with different approaches to solving a multitude of computational problems The famous P NP problem one of the Millennium Prize Problems 52 is an open problem in the theory of computation P NP GNITIRWTERCES Automata theory Computability theory Computational complexity theory Cryptography Quantum computing theory Information and coding theory edit Main articles Information theory and Coding theory Information theory is related to the quantification of information This was developed by Claude Shannon to find fundamental limits on signal processing operations such as compressing data and on reliably storing and communicating data 53 Coding theory is the study of the properties of codes systems for converting information from one form to another and their fitness for a specific application Codes are used for data compression cryptography error detection and correction and more recently also for network coding Codes are studied for the purpose of designing efficient and reliable data transmission methods 54 Programming language theory edit Main article Programming language theory Programming language theory is a branch of computer science that deals with the design implementation analysis characterization and classification of programming languages and their individual features It falls within the discipline of computer science both depending on and affecting mathematics software engineering and linguistics It is an active research area with numerous dedicated academic journals Γ x Int displaystyle Gamma vdash xtextInt Type theory Compiler design Programming languages Formal methods edit Main article Formal methods Formal methods are a particular kind of mathematically based technique for the specification development and verification of software and hardware systems 55 The use of formal methods for software and hardware design is motivated by the expectation that as in other engineering disciplines performing appropriate mathematical analysis can contribute to the reliability and robustness of a design They form an important theoretical underpinning for software engineering especially where safety or security is involved Formal methods are a useful adjunct to software testing since they help avoid errors and can also give a framework for testing For industrial use tool support is required However the high cost of using formal methods means that they are usually only used in the development of highintegrity and lifecritical systems where safety or security is of utmost importance Formal methods are best described as the application of a fairly broad variety of theoretical computer science fundamentals in particular logic calculi formal languages automata theory and program semantics but also type systems and algebraic data types to problems in software and hardware specification and verification Computer systems edit Computer architecture and computer engineering edit Main articles Computer architecture and Computer engineering Computer architecture or digital computer organization is the conceptual design and fundamental operational structure of a computer system It focuses largely on the way by which the central processing unit performs internally and accesses addresses in memory 56 The field often involves disciplines of computer engineering and electrical engineering selecting and interconnecting hardware components to create computers that meet functional performance and cost goals Digital logic Microarchitecture Multiprocessing Ubiquitous computing Systems architecture Operating systems Computer performance analysis edit Main articles Computer performance and Benchmark computing Computer performance analysis is the study of work flowing through computers with the general goals of improving throughput controlling response time using resources efficiently eliminating bottlenecks and predicting performance under anticipated peak loads 57 Benchmarks are used to compare the performance of systems carrying different chips andor system architectures 58 Concurrent parallel and distributed systems edit Main articles Concurrency computer science and Distributed computing Concurrency is a property of systems in which several computations are executing simultaneously and potentially interacting with each other 59 A number of mathematical models have been developed for general concurrent computation including Petri nets process calculi and the Parallel Random Access Machine model 60 When multiple computers are connected in a network while using concurrency this is known as a distributed system Computers within that distributed system have their own private memory and information can be exchanged to achieve common goals 61 Computer networks edit Main article Computer network This branch of computer science aims to manage networks between computers worldwide Computer security and cryptography edit Main articles Computer security and Cryptography Computer security is a branch of computer technology with an objective of protecting information from unauthorized access disruption or modification while maintaining the accessibility and usability of the system for its intended users Cryptography is the practice and study of hiding encryption and therefore deciphering decryption information Modern cryptography is largely related to computer science for many encryption and decryption algorithms are based on their computational complexity Databases edit Main article Database This article is missing information about a structured set of data held in a computer especially one that is accessible in various ways Please expand the article to include this information Further details may exist on the talk page September 2018 A database is intended to organize store and retrieve large amounts of data easily Digital databases are managed using database management systems to store create maintain and search data through database models and query languages Computer applications edit Computer graphics and visualization edit Main article Computer graphics computer science Computer graphics is the study of digital visual contents and involves the synthesis and manipulation of image data The study is connected to many other fields in computer science including computer vision image processing and computational geometry and is heavily applied in the fields of special effects and video games Humancomputer interaction edit Main article Humancomputer interaction Research that develops theories principles and guidelines for user interface designers so they can create satisfactory user experiences with desktop laptop and mobile devices Scientific computing and simulation edit Scientific computing or computational science is the field of study concerned with constructing mathematical models and quantitative analysis techniques and using computers to analyze and solve scientific problems A major usage of scientific computing is simulation of various processes including computational fluid dynamics physical electrical and electronic systems and circuits as well as societies and social situations notably war games along with their habitats among many others Modern computers enable optimization of such designs as complete aircraft Notable in electrical and electronic circuit design are SPICE 62 as well as software for physical realization of new or modified designs The latter includes essential design software for integrated circuits citation needed Numerical analysis Computational physics Computational chemistry Bioinformatics Artificial intelligence edit Main article Artificial intelligence Artificial intelligence AI aims to or is required to synthesize goalorientated processes such as problemsolving decisionmaking environmental adaptation learning and communication found in humans and animals From its origins in cybernetics and in the Dartmouth Conference 1956 artificial intelligence research has been necessarily crossdisciplinary drawing on areas of expertise such as applied mathematics symbolic logic semiotics electrical engineering philosophy of mind neurophysiology and social intelligence AI is associated in the popular mind with robotic development but the main field of practical application has been as an embedded component in areas of software development which require computational understanding The starting point in the late 1940s was Alan Turing s question Can computers think and the question remains effectively unanswered although the Turing test is still used to assess computer output on the scale of human intelligence But the automation of evaluative and predictive tasks has been increasingly successful as a substitute for human monitoring and intervention in domains of computer application involving complex realworld data Machine learning Computer vision Image processing Pattern recognition Data mining Evolutionary computation Knowledge representation and reasoning Natural language processing Robotics Software engineering edit Main article Software engineering See also Computer programming Software engineering is the study of designing implementing and modifying the software in order to ensure it is of high quality affordable maintainable and fast to build It is a systematic approach to software design involving the application of engineering practices to software Software engineering deals with the organizing and analyzing of softwareit doesnt just deal with the creation or manufacture of new software but its internal maintenance and arrangement Discoveries edit The philosopher of computing Bill Rapaport noted three Great Insights of Computer Science 63 Gottfried Wilhelm Leibniz s George Boole s Alan Turing s Claude Shannon s and Samuel Morse s insight there are only two objects that a computer has to deal with in order to represent anything note 4 All the information about any computable problem can be represented using only 0 and 1 or any other bistable pair that can flipflop between two easily distinguishable states such as onoff magnetizeddemagnetized highvoltagelowvoltage etc See also Digital physics Alan Turing s insight there are only five actions that a computer has to perform in order to do anything Every algorithm can be expressed in a language for a computer consisting of only five basic instructions 64 move left one location move right one location read symbol at current location print 0 at current location print 1 at current location See also Turing machine Corrado Böhm and Giuseppe Jacopini s insight there are only three ways of combining these actions into more complex ones that are needed in order for a computer to do anything 65 Only three rules are needed to combine any set of basic instructions into more complex ones sequence first do this then do that selection IF suchandsuch is the case THEN do this ELSE do that repetition WHILE suchandsuch is the case DO this Note that the three rules of Boehms and Jacopinis insight can be further simplified with the use of goto which means it is more elementary than structured programming See also Elementary function arithmetic Friedmans grand conjecture Programming paradigms edit Main article Programming paradigm Programming languages can be used to accomplish different tasks in different ways Common programming paradigms include Functional programming a style of building the structure and elements of computer programs that treat computation as the evaluation of mathematical functions and avoids state and mutable data It is a declarative programming paradigm which means programming is done with expressions or declarations instead of statements 66 Imperative programming a programming paradigm that uses statements that change a programs state 67 In much the same way that the imperative mood in natural languages expresses commands an imperative program consists of commands for the computer to perform Imperative programming focuses on describing how a program operates Objectoriented programming a programming paradigm based on the concept of objects which may contain data in the form of fields often known as attributes and code in the form of procedures often known as methods A feature of objects is that an objects procedures can access and often modify the data fields of the object with which they are associated Thus Objectoriented computer programs are made out of objects that interact with one another 68 Many languages offer support for multiple paradigms making the distinction more a matter of style than of technical capabilities 69 Academia edit Further information List of computer science conferences and CategoryComputer science journals Conferences are important events for computer science research During these conferences researchers from the public and private sectors present their recent work and meet Unlike in most other academic fields in computer science the prestige of conference papers is greater than that of journal publications 70 71 One proposed explanation for this is the quick development of this relatively new field requires rapid review and distribution of results a task better handled by conferences than by journals 72 Education edit Computer Science known by its near synonyms Computing Computer Studies Information Technology IT and Information and Computing Technology ICT has been taught in UK schools since the days of batch processing mark sensitive cards and paper tape but usually to a select few students 73 In 1981 the BBC produced a microcomputer and classroom network and Computer Studies became common for GCE O level students 1116yearold and Computer Science to A level students Its importance was recognised and it became a compulsory part of the National Curriculum for Key Stage 3 4 In September 2014 it became an entitlement for all pupils over the age of 4 74 In the US with 14000 school districts deciding the curriculum provision was fractured 75 According to a 2010 report by the Association for Computing Machinery ACM and Computer Science Teachers Association CSTA only 14 out of 50 states have adopted significant education standards for high school computer science 76 Israel New Zealand and South Korea have included computer science in their national secondary education curricula 77 78 and several others are following 79 Challenges edit In many countries there is a significant gender gap in computer science education In 2012 only 20 percent of computer science degrees in the United States were awarded to women 80 The gender gap is also a problem in other western countries 81 The gap is smaller or nonexistent in some parts of the world In 2011 women earned half of the computer science degrees in Malaysia 82 In 2001 55 percent of computer science graduates in Guyana were women 81 See also edit Main articles Glossary of computer science and Outline of computer science Information technology List of computer scientists List of computer science awards List of important publications in computer science List of pioneers in computer science List of unsolved problems in computer science List of terms relating to algorithms and data structures Digital Revolution Software engineering programming language Algorithmic trading Notes edit In 1851 The introduction of punched cards into the new engine was important not only as a more convenient form of control than the drums or because programs could now be of unlimited extent and could be stored and repeated without the danger of introducing errors in setting the machine by hand it was important also because it served to crystallize Babbages feeling that he had invented something really new something much more than a sophisticated calculating machine Bruce Collier 1970 See the entry Computer science on Wikiquote for the history of this quotation The word anything is written in quotation marks because there are things that computers cannot do One example is to answer the question if an arbitrary given computer program will eventually finish or run forever the Halting problem References edit WordNet Search31 Wordnetwebprincetonedu Retrieved May 14 2012 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput idlockfree amwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocklimited amwparseroutput idlockregistration amwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocksubscription amwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Charles Babbage Institute Who Was Charles Babbage cbiumnedu Retrieved December 28 2016 Ada Lovelace Babbage Engine Computer History Museum wwwcomputerhistoryorg Retrieved December 28 2016 Wilhelm Schickard Ein Computerpionier PDF in German Keates Fiona June 25 2012 A Brief History of Computing The Repository The Royal Society Science MuseumIntroduction to Babbage Archived from the original on September 8 2006 Retrieved September 24 2006 a b Anthony Hyman 1982 Charles Babbage pioneer of the computer A Selection and Adaptation From Adas Notes found in Ada The Enchantress of Numbers by Betty Alexandra Toole EdD Strawberry Press Mill Valley CA Archived from the original on February 10 2006 Retrieved May 4 2006 The John Gabriel Byrne Computer Science Collection In this sense Aiken needed IBM whose technology included the use of punched cards the accumulation of numerical data and the transfer of numerical data from one register to another Bernard Cohen p44 2000 Brian Randell p 187 1975 The Association for Computing Machinery ACM was founded in 1947 IBM Archives 1945 Ibmcom Retrieved March 19 2019 IBM100 The Origins of Computer Science Ibmcom September 15 1995 Retrieved March 19 2019 a b c Denning Peter J 2000 Computer Science The Discipline PDF Encyclopedia of Computer Science Archived from the original PDF on May 25 2006 Some EDSAC statistics University of Cambridge Retrieved November 19 2011 Computer science pioneer Samuel D Conte dies at 85 Purdue Computer Science July 1 2002 Retrieved December 12 2014 a b Levy Steven 1984 Hackers Heroes of the Computer Revolution Doubleday ISBN 9780385191951 a b c d Tedre Matti 2014 The Science of Computing Shaping a Discipline Taylor and Francis CRC Press IBM 704 Electronic Data Processing SystemCHM Revolution Computerhistoryorg Retrieved July 7 2013 IBM 709 a powerful new data processing system PDF Computer History Museum Archived from the original PDF on March 4 2016 Retrieved December 12 2014 Lee Thomas H 2003 The Design of CMOS RadioFrequency Integrated Circuits PDF Cambridge University Press ISBN 9781139643771 Puers Robert Baldi Livio Voorde Marcel Van de Nooten Sebastiaan E van 2017 Nanoelectronics Materials Devices Applications 2 Volumes John Wiley Sons p14 ISBN 9783527340538 Lavington Simon 1998 A History of Manchester Computers 2 ed Swindon The British Computer Society pp3435 a b Moskowitz Sanford L 2016 Advanced Materials Innovation Managing Global Technology in the 21st century John Wiley Sons pp165167 ISBN 9780470508923 1960 Metal Oxide Semiconductor MOS Transistor Demonstrated The Silicon Engine Computer History Museum Lojek Bo 2007 History of Semiconductor Engineering Springer Science Business Media pp3213 ISBN 9783540342588 Who Invented the Transistor Computer History Museum December 4 2013 Retrieved July 20 2019 Hittinger William C 1973 MetalOxideSemiconductor Technology Scientific American 229 2 4859 Bibcode 1973SciAm229b48H doi 101038scientificamerican087348 ISSN 00368733 JSTOR 24923169 Fossum Jerry G Trivedi Vishal P 2013 Fundamentals of UltraThinBody MOSFETs and FinFETs Cambridge University Press pvii ISBN 9781107434493 Malmstadt Howard V Enke Christie G Crouch Stanley R 1994 Making the Right Connections Microcomputers and Electronic Instrumentation American Chemical Society p389 ISBN 9780841228610 The relative simplicity and low power requirements of MOSFETs have fostered todays microcomputer revolution Timeline of Computer History Computer History Museum Retrieved November 24 2015 a b Louis Fine 1959 The Role of the University in Computers Data Processing and Related Fields Communications of the ACM 2 9 714 doi 101145368424368427 Stanford University Oral History Stanford University Retrieved May 30 2013 Donald Knuth 1972 George Forsythe and the Development of Computer Science Comms ACM Archived October 20 2013 at the Wayback Machine Matti Tedre 2006 The Development of Computer Science A Sociocultural Perspective PDF p260 Retrieved December 12 2014 Peter Naur 1966 The science of datalogy Communications of the ACM 9 7 485 doi 101145365719366510 Weiss EA Corley Henry PT Letters to the editor Communications of the ACM 1 4 6 doi 101145368796368802 Communications of the ACM 21p4 IEEE Computer 2812 p136 P MounierKuhn LInformatique en France de la seconde guerre mondiale au Plan Calcul Lémergence dune science Paris PUPS 2010 ch 3 4 Groth Dennis P March 13 2010 Why an Informatics Degree February 2010 Communications of the ACM Cacmacmorg Retrieved March 19 2019 Tedre M 2011 Computing as a Science A Survey of Competing Viewpoints Minds and Machines 21 3 361387 doi 101007s1102301192404 Parnas DL 1998 Software engineering programmes are not computer science programmes Annals of Software Engineering 6 1937 doi 101023A1018949113292 p 19 Rather than treat software engineering as a subfield of computer science I treat it as an element of the set Civil Engineering Mechanical Engineering Chemical Engineering Electrical Engineering Wegner P October 1315 1976 Research paradigms in computer scienceProceedings of the 2nd international Conference on Software Engineering San Francisco California United States IEEE Computer Society Press Los Alamitos CA Denning PJ Comer DE Gries D Mulder MC Tucker A Turner AJ Young PR January 1989 Computing as a discipline Communications of the ACM 32 923 doi 1011456323863239 Eden AH 2007 Three Paradigms of Computer Science PDF Minds and Machines 17 2 135167 CiteSeerX 10113047763 doi 101007s1102300790608 Archived from the original PDF on February 15 2016 Turner Raymond Angius Nicola Primiero Giuseppe Spring 2019 The Philosophy of Computer Science The Stanford Encyclopedia of Philosophy Edward N Zalta ed URL httpsplatostanfordeduarchivesspr2019entriescomputerscience a b Computer Science as a Profession Computing Sciences Accreditation Board May 28 1997 Archived from the original on June 17 2008 Retrieved May 23 2010 Committee on the Fundamentals of Computer Science Challenges and Opportunities National Research Council 2004 Computer Science Reflections on the Field Reflections from the Field National Academies Press ISBN 9780309093019 CSAB Leading Computer Education CSAB August 3 2011 Retrieved November 19 2011 Clay Mathematics Institute P NP Archived October 14 2013 at the Wayback Machine P Collins Graham October 14 2002 Claude E Shannon Founder of Information Theory Scientific American Retrieved December 12 2014 VanNam Huynh Vladik Kreinovich Songsak Sriboonchitta 2012 Uncertainty Analysis in Econometrics with Applications Springer Science Business Media p 63 ISBN 9783642354434 Phillip A Laplante 2010 Encyclopedia of Software Engineering ThreeVolume Set Print CRC Press p 309 ISBN 9781351249263 A Thisted Ronald April 7 1997 Computer Architecture PDF The University of Chicago Wescott Bob 2013 The Every Computer Performance Book Chapter 3 Useful laws CreateSpace ISBN 9781482657753 Lawrence A Tomei 2009 Lexicon of Online and Distance Learning RL Education p 29 ISBN 9781607092858 Jiacun Wang 2017 RealTime Embedded Systems Wiley p 12 ISBN 9781119420705 Gordana DodigCrnkovic Raffaela Giovagnoli 2013 Computing Nature Turing Centenary Perspective Springer Science Business Media p 247 ISBN 9783642372254 Simon Elias Bibri 2018 Smart Sustainable Cities of the Future The Untapped Potential of Big Data Analytics and ContextAware Computing for Advancing Sustainability Springer p 74 ISBN 9783319739816 Muhammad H Rashid 2016 SPICE for Power Electronics and Electric Power CRC Press p 6 ISBN 9781439860472 Rapaport William J September 20 2013 What Is Computation State University of New York at Buffalo B Jack Copeland 2012 Alan Turings Electronic Brain The Struggle to Build the ACE the Worlds Fastest Computer OUP Oxford p 107 ISBN 9780199609154 Charles W Herbert 2010 An Introduction to Programming Using Alice 22 Cengage Learning p 122 ISBN 0538478667 Md Rezaul Karim Sridhar Alla 2017 Scala and Spark for Big Data Analytics Explore the concepts of functional programming data streaming and machine learning Packt Publishing Ltd p 87 ISBN 9781783550500 Lex Sheehan 2017 Learning Functional Programming in Go Change the way you approach your applications using functional programming in Go Packt Publishing Ltd p 16 ISBN 9781787286047 Evelio Padilla 2015 Substation Automation Systems Design and Implementation Wiley p 245 ISBN 9781118987308 MultiParadigm Programming Language developermozillaorg Mozilla Foundation Archived from the original on August 21 2013 Meyer Bertrand April 2009 Viewpoint Research evaluation for computer science Communications of the ACM 25 4 3134 doi 10114514987651498780 Patterson David August 1999 Evaluating Computer Scientists and Engineers For Promotion and Tenure Computing Research Association Fortnow Lance August 2009 Viewpoint Time for Computer Science to Grow Up Communications of the ACM 52 8 3335 doi 10114515366161536631 Burns Judith April 3 2016 Computer science Alevel 1970s style Retrieved February 9 2019 Jones Michael October 1915 Developing a Computer Science Curriculum in England Exploring Approaches in the USA PDF Winston Churchill Memorial Trust Retrieved February 9 2019 Computer Science Not Just an Elective Anymore Education Week February 25 2014 Wilson Cameron Sudol Leigh Ann Stephenson Chris Stehlik Mark 2010 Running on Empty The Failure to Teach K12 Computer Science in the Digital Age PDF ACM A is for algorithm The Economist April 26 2014 Computing at School International comparisons PDF Retrieved July 20 2015 Adding Coding to the Curriculum The New York Times March 23 2014 Percentage of Bachelors degrees conferred to women by major 19702012 June 14 2014 Retrieved July 20 2015 a b James Justin IT gender gap Where are the female programmers TechRepublic what sic gender is science PDF Archived from the original PDF on September 24 2015 Retrieved July 20 2015 Further reading edit mwparseroutput refbeginfontsize90marginbottom05emmwparseroutput refbeginhangingindentsgtulliststyletypenonemarginleft0mwparseroutput refbeginhangingindentsgtulgtlimwparseroutput refbeginhangingindentsgtdlgtddmarginleft0paddingleft32emtextindent32emliststylenonemwparseroutput refbegin100fontsize100 Overview edit Tucker Allen B 2004 Computer Science Handbook 2nd ed Chapman and HallCRC ISBN 9781584883609 Within more than 70 chapters every one new or significantly revised one can find any kind of information and references about computer science one can imagine all in all there is absolute nothing about Computer Science that can not be found in the 25 kilogramencyclopaedia with its 110 survey articles Christoph Meinel Zentralblatt MATH van Leeuwen Jan 1994 Handbook of Theoretical Computer Science The MIT Press ISBN 9780262720205 this set is the most unique and possibly the most useful to the theoretical computer science community in support both of teaching and research The books can be used by anyone wanting simply to gain an understanding of one of these areas or by someone desiring to be in research in a topic or by instructors wishing to find timely information on a subject they are teaching outside their major areas of expertise Rocky Ross SIGACT News Ralston Anthony Reilly Edwin D Hemmendinger David 2000 Encyclopedia of Computer Science 4th ed Groves Dictionaries ISBN 9781561592487 Since 1976 this has been the definitive reference work on computer computing and computer science Alphabetically arranged and classified into broad subject areas the entries cover hardware computer systems information and data software the mathematics of computing theory of computation methodologies applications and computing milieu The editors have done a commendable job of blending historical perspective and practical reference information The encyclopedia remains essential for most public and academic library reference collections Joe Accardin Northeastern Illinois Univ Chicago Edwin D Reilly 2003 Milestones in Computer Science and Information Technology Greenwood Publishing Group ISBN 9781573565219 Selected literature edit Knuth Donald E 1996 Selected Papers on Computer Science CSLI Publications Cambridge University Press Collier Bruce 1990 The little engine that couldve The calculating machines of Charles Babbage Garland Publishing Inc ISBN 9780824000431 Cohen Bernard 2000 Howard Aiken Portrait of a computer pioneer The MIT press ISBN 9780262531795 Tedre Matti 2014 The Science of Computing Shaping a Discipline CRC Press Taylor Francis Randell Brian 1973 The origins of Digital computers Selected Papers SpringerVerlag ISBN 9783540061694 Covering a period from 1966 to 1993 its interest lies not only in the content of each of these papers still timely today but also in their being put together so that ideas expressed at different times complement each other nicely N Bernard Zentralblatt MATH Articles edit Peter J Denning Is computer science science Communications of the ACM April 2005 Peter J Denning Great principles in computing curricula Technical Symposium on Computer Science Education 2004 Research evaluation for computer science Informatics Europe report Shorter journal version Bertrand Meyer Christine Choppy Jan van Leeuwen and Jorgen Staunstrup Research evaluation for computer science in Communications of the ACM vol 52 no 4 pp3134 April 2009 Curriculum and classification edit Association for Computing Machinery 1998 ACM Computing Classification System 1998 Joint Task Force of Association for Computing Machinery ACM Association for Information Systems AIS and IEEE Computer Society IEEE CS Computing Curricula 2005 The Overview Report September 30 2005 Norman Gibbs Allen Tucker A model curriculum for a liberal arts degree in computer science Communications of the ACM Volume 29 Issue 3 March 1986 External links edit Wikibooks has a book on the topic of Informatics Practices for Class XI CBSE Computer science at Wikipedias sister projects Definitions from Wiktionary Media from Wikimedia Commons News from Wikinews Quotations from Wikiquote Texts from Wikisource Textbooks from Wikibooks Resources from Wikiversity Library resources about Computer science Resources in your library Resources in other libraries Computer science at Curlie Scholarly Societies in Computer Science What is Computer Science Best Papers Awards in Computer Science since 1996 Photographs of computer scientists by Bertrand Meyer EECSberkeleyedu Bibliography and academic search engines edit CiteSeer x article search engine digital library and repository for scientific and academic papers with a focus on computer and information science DBLP Computer Science Bibliography article computer science bibliography website hosted at Universität Trier in Germany The Collection of Computer Science Bibliographies article Professional organizations edit Association for Computing Machinery IEEE Computer Society Informatics Europe AAAI AAAS Computer Science Misc edit Computer ScienceStack Exchange a communityrun questionandanswer site for computer science What is computer science Is computer science science Computer Science Software Must be Considered as an Independent Discipline v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Realtime computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domainspecific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Opensource model Theory of computation Model of computation Formal language Automata theory Computability theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multitask learning Crossvalidation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing Ecommerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Outline WikiProject Commons v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspectoriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model VModel Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W Dijkstra Delores M Etter Martin Fowler Adele Goldstine Margaret Hamilton C A R Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons v t e Glossaries of science and engineering Aerospace engineering Agriculture Archaeology Architecture Artificial intelligence Astronomy Biology Botany Calculus Chemistry Civil engineering Clinical research Computer science Ecology Economics Electrical and electronics engineering Engineering Entomology Environmental science Genetics Geography Geology Machine vision Mathematics Mechanical engineering Medicine Meteorology Physics Probability and statistics Psychiatry Robotics Speciation Structural engineering Authority control BNE XX525961 BNF cb11932109b data GND 40268949 HDS 008272 LCCN sh89003285 