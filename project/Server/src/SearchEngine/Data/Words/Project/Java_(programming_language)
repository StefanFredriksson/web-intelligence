Java programming language This article is about a programming language For the software platform see Java software platform For the software package downloaded from javacom see Java Platform Standard Edition For other uses see Java disambiguation Not to be confused with JavaScript Objectoriented programming language Java Programming Language Paradigm Multiparadigm generic objectoriented classbased imperative reflective Designedby James Gosling Developer Sun Microsystems Firstappeared May23 1995 24 years ago 19950523 1 Stable release Java SE 13 September17 2019 3 months ago 20190917 Typing discipline Static strong safe nominative manifest Filename extensions java class jar Website oracle com java Major implementations Compilers OpenJDK javac sjavac GNU Compiler for Java GCJ Eclipse Compiler for Java ECJ Virtual machines OpenJDK JRE Oracle JRockit Azul Zing IBM J9 Excelsior JET Gluon VM Microsoft JVM Apache Harmony JIT compilers HotSpot GraalVM Azul Falcon LLVM Influenced by Ada 83 C 2 C 3 Eiffel 4 Mesa 5 Modula3 6 Oberon 7 ObjectiveC 8 UCSD Pascal 9 10 Object Pascal 11 Influenced Ada 2005 BeanShell C Chapel 12 Clojure ECMAScript Fantom Gambas 13 Groovy Hack 14 Haxe J Kotlin PHP Python Scala Seed7 Vala Java Programming at Wikibooks Java is a generalpurpose programming language that is classbased objectoriented and designed to have as few implementation dependencies as possible It is intended to let application developers write once run anywhere WORA 15 meaning that compiled Java code can run on all platforms that support Java without the need for recompilation 16 Java applications are typically compiled to bytecode that can run on any Java virtual machine JVM regardless of the underlying computer architecture The syntax of Java is similar to C and C but it has fewer lowlevel facilities than either of them As of 2019 update Java was one of the most popular programming languages in use according to GitHub 17 18 particularly for clientserver web applications with a reported 9 million developers 19 Java was originally developed by James Gosling at Sun Microsystems which has since been acquired by Oracle and released in 1995 as a core component of Sun Microsystems Java platform The original and reference implementation Java compilers virtual machines and class libraries were originally released by Sun under proprietary licenses As of May 2007 in compliance with the specifications of the Java Community Process Sun had relicensed most of its Java technologies under the GNU General Public License Meanwhile others have developed alternative implementations of these Sun technologies such as the GNU Compiler for Java bytecode compiler GNU Classpath standard libraries and IcedTea Web browser plugin for applets The latest versions are Java13 released in September 2019 and Java11 a currently supported longterm support LTS version released on September 25 2018 Oracle released for the legacy Java8LTS the last free public update in January 2019 for commercial use while it will otherwise still support Java8 with public updates for personal use up to at least December 2020 Oracle and others highly recommend uninstalling older versions of Java because of serious risks due to unresolved security issues 20 Since Java9 and 10 and 12 is no longer supported Oracle advises its users to immediately transition to the latest version currently Java 13 or an LTS release Contents 1 History 11 Principles 12 Versions 2 Editions 3 Execution system 31 Java JVM and Bytecode 311 Performance 32 NonJVM 33 Automatic memory management 4 Syntax 41 Hello world example 42 Example with methods 5 Special classes 51 Applet 52 Servlet 53 JavaServer Pages 54 Swing application 55 JavaFX application 56 Generics 6 Criticism 7 Class libraries 8 Documentation 9 Implementations 10 Use outside the Java platform 101 Android 1011 Controversy 11 See also 111 Comparison of Java with other languages 12 Notes 13 References 14 External links History edit See also Java software platform History Duke the Java mascot James Gosling the creator of Java in 2008 The TIOBE programming language popularity index graph from 2002 to 2018 Java is steadily on the top since mid2015 James Gosling Mike Sheridan and Patrick Naughton initiated the Java language project in June 1991 21 Java was originally designed for interactive television but it was too advanced for the digital cable television industry at the time 22 The language was initially called Oak after an oak tree that stood outside Goslings office Later the project went by the name Green and was finally renamed Java from Java coffee the coffee from Indonesia 23 Gosling designed Java with a C C style syntax that system and application programmers would find familiar 24 Sun Microsystems released the first public implementation as Java10 in 1996 25 It promised Write Once Run Anywhere WORA providing nocost runtimes on popular platforms Fairly secure and featuring configurable security it allowed network and fileaccess restrictions Major web browsers soon incorporated the ability to run Java applets within web pages and Java quickly became popular The Java10 compiler was rewritten in Java by Arthur van Hoff to comply strictly with the Java10 language specification 26 With the advent of Java2 released initially as J2SE12 in December 1998 1999 new versions had multiple configurations built for different types of platforms J2EE included technologies and APIs for enterprise applications typically run in server environments while J2ME featured APIs optimized for mobile applications The desktop version was renamed J2SE In 2006 for marketing purposes Sun renamed new J2 versions as Java EE Java ME and Java SE respectively In 1997 Sun Microsystems approached the ISOIEC JTC 1 standards body and later the Ecma International to formalize Java but it soon withdrew from the process 27 28 29 Java remains a de facto standard controlled through the Java Community Process 30 At one time Sun made most of its Java implementations available without charge despite their proprietary software status Sun generated revenue from Java through the selling of licenses for specialized products such as the Java Enterprise System On November 13 2006 Sun released much of its Java virtual machine JVM as free and opensource software FOSS under the terms of the GNU General Public License GPL On May 8 2007 Sun finished the process making all of its JVMs core code available under free software opensource distribution terms aside from a small portion of code to which Sun did not hold the copyright 31 Suns vicepresident Rich Green said that Suns ideal role with regard to Java was as an evangelist 32 Following Oracle Corporation s acquisition of Sun Microsystems in 200910 Oracle has described itself as the steward of Java technology with a relentless commitment to fostering a community of participation and transparency 33 This did not prevent Oracle from filing a lawsuit against Google shortly after that for using Java inside the Android SDK see the Android section Java software runs on everything from laptops to data centers game consoles to scientific supercomputers 34 On April 2 2010 James Gosling resigned from Oracle 35 In January 2016 Oracle announced that Java runtime environments based on JDK 9 will discontinue the browser plugin 36 Principles edit There were five primary goals in the creation of the Java language 16 It must be simple objectoriented and familiar It must be robust and secure It must be architectureneutral and portable It must execute with high performance It must be interpreted threaded and dynamic Versions edit Main article Java version history As of March2019 update Java8 is supported and both Java8 and 11 as Long Term Support LTS versions Major release versions of Java along with their release dates JDK 10 January 23 1996 37 JDK 11 February 19 1996 J2SE 12 December 8 1998 J2SE 13 May 8 2000 J2SE 14 February 6 2002 J2SE 50 September 30 2004 Java SE 6 December 11 2006 Java SE 7 July 28 2011 Java SE 8 March 18 2014 Java SE 9 September 21 2017 Java SE 10 March 20 2018 Java SE 11 September 25 2018 38 Java SE 12 March 19 2019 Java SE 13 September 17 2019 Editions edit This articles factual accuracy may be compromised due to outofdate information Please update this article to reflect recent events or newly available information July 2019 See also Free Java implementations Class library Java platform editions Java Card Micro Edition ME Standard Edition SE Enterprise Edition EE JavaFX bundled in JRE from 8 to 10 but separately for JavaFX 1x 2x and 11 PersonalJava Discontinued v t e Sun has defined and supports four editions of Java targeting different application environments and segmented many of its APIs so that they belong to one of the platforms The platforms are Java Card for smartcards 39 Java Platform Micro Edition Java ME targeting environments with limited resources 40 Java Platform Standard Edition Java SE targeting workstation environments 41 Java Platform Enterprise Edition Java EE targeting large distributed enterprise or Internet environments 42 The classes in the Java APIs are organized into separate groups called packages Each package contains a set of related interfaces classes and exceptions Refer to the separate platforms for a description of the packages available relevant to this section discuss Sun also provided an edition called Personal Java that has been superseded by later standardsbased Java ME configurationprofile pairings Execution system edit Java JVM and Bytecode edit Main articles Java software platform and Java virtual machine One design goal of Java is portability which means that programs written for the Java platform must run similarly on any combination of hardware and operating system with adequate run time supportThis is achieved by compiling the Java language code to an intermediate representation called Java bytecode instead of directly to architecturespecific machine code Java bytecode instructions are analogous to machine code but they are intended to be executed by a virtual machine VM written specifically for the host hardware End users commonly use a Java Runtime Environment JRE installed on their own machine for standalone Java applications or in a web browser for Java applets Standard libraries provide a generic way to access hostspecific features such as graphics threading and networking The use of universal bytecode makes porting simple However the overhead of interpreting bytecode into machine instructions made interpreted programs almost always run more slowly than native executables Justintime JIT compilers that compile bytecodes to machine code during runtime were introduced from an early stage Java itself is platformindependent and is adapted to the particular platform it is to run on by a Java virtual machine for it which translates the Java bytecode into the platforms machine language 43 Performance edit Main article Java performance Programs written in Java have a reputation for being slower and requiring more memory than those written in C 44 45 However Java programs execution speed improved significantly with the introduction of justintime compilation in 19971998 for Java11 46 the addition of language features supporting better code analysis such as inner classes the StringBuilder class optional assertions etc and optimizations in the Java virtual machine such as HotSpot becoming the default for Suns JVM in 2000 With Java15 the performance was improved with the addition of the javautilconcurrent package including lock free implementations of the ConcurrentMaps and other multicore collections and it was improved further with Java16 NonJVM edit Some platforms offer direct hardware support for Java there are micro controllers that can run Java bytecode in hardware instead of a software Java virtual machine 47 and some ARM based processors could have hardware support for executing Java bytecode through their Jazelle option though support has mostly been dropped in current implementations of ARM Automatic memory management edit Java uses an automatic garbage collector to manage memory in the object lifecycle The programmer determines when objects are created and the Java runtime is responsible for recovering the memory once objects are no longer in use Once no references to an object remain the unreachable memory becomes eligible to be freed automatically by the garbage collector Something similar to a memory leak may still occur if a programmers code holds a reference to an object that is no longer needed typically when objects that are no longer needed are stored in containers that are still in use If methods for a nonexistent object are called a null pointer exception is thrown 48 49 One of the ideas behind Javas automatic memory management model is that programmers can be spared the burden of having to perform manual memory management In some languages memory for the creation of objects is implicitly allocated on the stack or explicitly allocated and deallocated from the heap In the latter case the responsibility of managing memory resides with the programmer If the program does not deallocate an object a memory leak occurs If the program attempts to access or deallocate memory that has already been deallocated the result is undefined and difficult to predict and the program is likely to become unstable or crash This can be partially remedied by the use of smart pointers but these add overhead and complexity Note that garbage collection does not prevent logical memory leaks ie those where the memory is still referenced but never used Garbage collection may happen at any time Ideally it will occur when a program is idle It is guaranteed to be triggered if there is insufficient free memory on the heap to allocate a new object this can cause a program to stall momentarily Explicit memory management is not possible in Java Java does not support CC style pointer arithmetic where object addresses can be arithmetically manipulated eg by adding or subtracting an offset This allows the garbage collector to relocate referenced objects and ensures type safety and security As in C and some other objectoriented languages variables of Javas primitive data types are either stored directly in fields for objects or on the stack for methods rather than on the heap as is commonly true for nonprimitive data types but see escape analysis This was a conscious decision by Javas designers for performance reasons Java contains multiple types of garbage collectors By default HotSpot uses the parallel scavenge garbage collector 50 However there are also several other garbage collectors that can be used to manage the heap For 90 of applications in Java the Concurrent MarkSweep CMS garbage collector is sufficient 51 Oracle aims to replace CMS with the GarbageFirst Collector G1 52 Having solved the memory management problem does not relieve the programmer of the burden of handling properly other kind of resources like network or database connections file handles etc especially in the presence of exceptions Paradoxically the presence of a garbage collector has faded the necessity of having an explicit destructor method in the classes thus rendering the management of these other resources more difficult citation needed Syntax edit Main article Java syntax Dependency graph of the Java Core classes created with jdeps and Gephi The syntax of Java is largely influenced by C Unlike C which combines the syntax for structured generic and objectoriented programming Java was built almost exclusively as an objectoriented language 16 All code is written inside classes and every data item is an object with the exception of the primitive data types ie integers floatingpoint numbers boolean values and characters which are not objects for performance reasons Java reuses some popular aspects of C such as the printf method Unlike C Java does not support operator overloading 53 or multiple inheritance for classes though multiple inheritance is supported for interfaces 54 Java uses comments similar to those of C There are three different styles of comments a single line style marked with two slashes a multiple line style opened with and closed with and the Javadoc commenting style opened with and closed with The Javadoc style of commenting allows the user to run the Javadoc executable to create documentation for the program and can be read by some integrated development environments IDEs such as Eclipse to allow developers to access documentation within the IDE Hello world example edit The traditional Hello world program can be written in Java as 55 public class HelloWorldApp public static void main String args System out println Hello World Prints the string to the console Source files must be named after the public class they contain appending the suffix java for example HelloWorldAppjava It must first be compiled into bytecode using a Java compiler producing a file named HelloWorldAppclass Only then can it be executed or launched The Java source file may only contain one public class but it can contain multiple classes with a nonpublic access modifier and any number of public inner classes When the source file contains multiple classes it is necessary to make one class introduced by the class keyword public preceded by the public keyword and name the source file with that public class name A class that is not declared public may be stored in any java file The compiler will generate a class file for each class defined in the source file The name of the class file is the name of the class with class appended For class file generation anonymous classes are treated as if their name were the concatenation of the name of their enclosing class a and an integer The keyword public denotes that a method can be called from code in other classes or that a class may be used by classes outside the class hierarchy The class hierarchy is related to the name of the directory in which the java file is located This is called an access level modifier Other access level modifiers include the keywords private and protected The keyword static 17 in front of a method indicates a static method which is associated only with the class and not with any specific instance of that class Only static methods can be invoked without a reference to an object Static methods cannot access any class members that are not also static Methods that are not designated static are instance methods and require a specific instance of a class to operate The keyword void indicates that the main method does not return any value to the caller If a Java program is to exit with an error code it must call Systemexit explicitly The method name main is not a keyword in the Java language It is simply the name of the method the Java launcher calls to pass control to the program Java classes that run in managed environments such as applets and Enterprise JavaBeans do not use or need a main method A Java program may contain multiple classes that have main methods which means that the VM needs to be explicitly told which class to launch from The main method must accept an array of String objects By convention it is referenced as args although any other legal identifier name can be used Since Java5 the main method can also use variable arguments in the form of public static void mainString args allowing the main method to be invoked with an arbitrary number of String arguments The effect of this alternate declaration is semantically identical to the args parameter which is still an array of String objects but it allows an alternative syntax for creating and passing the array The Java launcher launches Java by loading a given class specified on the command line or as an attribute in a JAR and starting its public static void mainString method Standalone programs must declare this method explicitly The String args parameter is an array of String objects containing any arguments passed to the class The parameters to main are often passed by means of a command line Printing is part of a Java standard library The System class defines a public static field called out The out object is an instance of the PrintStream class and provides many methods for printing data to standard out including printlnString which also appends a new line to the passed string The string Hello World is automatically converted to a String object by the compiler Example with methods edit This is an example of a single line comment using two slashes This is an example of a multiple line comment using the slash and asterisk This type of comment can be used to hold a lot of information or deactivate code but it is very important to remember to close the comment package fibsandlies import javautilHashMap This is an example of a Javadoc comment Javadoc can compile documentation from this text Javadoc comments must immediately precede the class method or field being documented public class FibCalculator extends Fibonacci implements Calculator private static Map Integer Integer memoized new HashMap Integer Integer The main method written as follows is used by the JVM as a starting point for the program public static void main String args memoized put 1 1 memoized put 2 1 System out println fibonacci 12 Get the 12th Fibonacci number and print to console An example of a method written in Java wrapped in a class Given a nonnegative number FIBINDEX returns the Nth Fibonacci number where N equals FIBINDEX param fibIndex The index of the Fibonacci number return The Fibonacci number public static int fibonacci int fibIndex if memoized containsKey fibIndex return memoized get fibIndex else int answer fibonacci fibIndex 1 fibonacci fibIndex 2 memoized put fibIndex answer return answer Special classes edit This section needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Javaprogramming language news newspapers books scholar JSTOR May 2019 Learn how and when to remove this template message Applet edit Main article Java applet Java applets were programs that were embedded in other applications typically in a Web page displayed in a web browser The Java applet API is now deprecated since Java8 in 2017 56 Servlet edit Main article Java servlet Java servlet technology provides Web developers with a simple consistent mechanism for extending the functionality of a Web server and for accessing existing business systems Servlets are serverside Java EE components that generate responses typically HTML pages to requests typically HTTP requests from clients The Java servlet API has to some extent been superseded by two standard Java technologies for web services the Java API for RESTful Web Services JAXRS 20 useful for AJAX JSON and REST services and the Java API for XML Web Services JAXWS useful for SOAP Web Services JavaServer Pages edit Main article JavaServer Pages JavaServer Pages JSP are serverside Java EE components that generate responses typically HTML pages to HTTP requests from clients JSPs embed Java code in an HTML page by using the special delimiters and A JSP is compiled to a Java servlet a Java application in its own right the first time it is accessed After that the generated servlet creates the response Swing application edit Main article Swing Java Swing is a graphical user interface library for the Java SE platform It is possible to specify a different look and feel through the pluggable look and feel system of Swing Clones of Windows GTK and Motif are supplied by Sun Apple also provides an Aqua look and feel for macOS Where prior implementations of these looks and feels may have been considered lacking Swing in Java SE 6 addresses this problem by using more native GUI widget drawing routines of the underlying platforms JavaFX application edit Main article JavaFX JavaFX is a software platform for creating and delivering desktop applications as well as rich Internet applications RIAs that can run across a wide variety of devices JavaFX is intended to replace Swing as the standard GUI library for Java SE but both will be included for the foreseeable future JavaFX has support for desktop computers and web browsers on Microsoft Windows Linux and macOS JavaFX does not have support for native OS look and feels Generics edit Main article Generics in Java In 2004 generics were added to the Java language as part of J2SE 50 Prior to the introduction of generics each variable declaration had to be of a specific type For container classes for example this is a problem because there is no easy way to create a container that accepts only specific types of objects Either the container operates on all subtypes of a class or interface usually Object or a different container class has to be created for each contained class Generics allow compiletime type checking without having to create many container classes each containing almost identical code In addition to enabling more efficient code certain runtime exceptions are prevented from occurring by issuing compiletime errors If Java prevented all runtime type errors ClassCastException s from occurring it would be type safe In 2016 the type system of Java was proven unsound 57 Criticism edit Main article Criticism of Java Criticisms directed at Java include the implementation of generics 58 speed 59 the handling of unsigned numbers 60 the implementation of floatingpoint arithmetic 61 and a history of security vulnerabilities in the primary Java VM implementation HotSpot 62 Class libraries edit Main article Java Class Library The Java Class Library is the standard library developed to support application development in Java It is controlled by Sun Microsystems in cooperation with others through the Java Community Process program 63 Companies or individuals participating in this process can influence the design and development of the APIs This process has been a subject of controversy during the 2010s 64 The class library contains features such as The core libraries which include IONIO Networking Reflection Concurrency Generics ScriptingCompiler Functional programming Lambda Streaming Collection libraries that implement data structures such as lists dictionaries trees sets queues and doubleended queue or stacks 65 XML Processing Parsing Transforming Validating libraries Security 66 Internationalization and localization libraries 67 The integration libraries which allow the application writer to communicate with external systems These libraries include The Java Database Connectivity JDBC API for database access Java Naming and Directory Interface JNDI for lookup and discovery RMI and CORBA for distributed application development JMX for managing and monitoring applications User interface libraries which include The heavyweight or native Abstract Window Toolkit AWT which provides GUI components the means for laying out those components and the means for handling events from those components The lightweight Swing libraries which are built on AWT but provide nonnative implementations of the AWT widgetry APIs for audio capture processing and playback JavaFX A platform dependent implementation of the Java virtual machine that is the means by which the bytecodes of the Java libraries and third party applications are executed Plugins which enable applets to be run in web browsers Java Web Start which allows Java applications to be efficiently distributed to end users across the Internet Licensing and documentation Documentation edit Main article Javadoc Javadoc is a comprehensive documentation system created by Sun Microsystems used by many Java developers by whom It provides developers with an organized system for documenting their code Javadoc comments have an extra asterisk at the beginning ie the delimiters are and whereas the normal multiline comments in Java are set off with the delimiters and 68 Implementations edit See also Free Java implementations Oracle Corporation is the current owner of the official implementation of the Java SE platform following their acquisition of Sun Microsystems on January 27 2010 This implementation is based on the original implementation of Java by Sun The Oracle implementation is available for Microsoft Windows still works for XP while only later versions are currently officially supported macOS Linux and Solaris Because Java lacks any formal standardization recognized by Ecma International ISOIEC ANSI or other thirdparty standards organization the Oracle implementation is the de facto standard The Oracle implementation is packaged into two different distributions The Java Runtime Environment JRE which contains the parts of the Java SE platform required to run Java programs and is intended for end users and the Java Development Kit JDK which is intended for software developers and includes development tools such as the Java compiler Javadoc Jar and a debugger Oracle has also released GraalVM a high performance Java dynamic compiler and interpreter OpenJDK is another notable Java SE implementation that is licensed under the GNU GPL The implementation started when Sun began releasing the Java source code under the GPL As of Java SE 7 OpenJDK is the official Java reference implementation The goal of Java is to make all implementations of Java compatible Historically Suns trademark license for usage of the Java brand insists that all implementations be compatible This resulted in a legal dispute with Microsoft after Sun claimed that the Microsoft implementation did not support RMI or JNI and had added platformspecific features of their own Sun sued in 1997 and in 2001 won a settlement of US20million as well as a court order enforcing the terms of the license from Sun 69 As a result Microsoft no longer ships Java with Windows Platformindependent Java is essential to Java EE and an even more rigorous validation is required to certify an implementation This environment enables portable serverside applications Use outside the Java platform edit The Java programming language requires the presence of a software platform in order for compiled programs to be executed Oracle supplies the Java platform for use with Java The Android SDK is an alternative software platform used primarily for developing Android applications with its own GUI system Android edit The Android operating system makes extensive use of Javarelated technology The Java language is a key pillar in Android an open source mobile operating system Although Android built on the Linux kernel is written largely in C the Android SDK uses the Java language as the basis for Android applications but does not use any of its standard GUI SE ME or other established Java standards 70 The bytecode language supported by the Android SDK is incompatible with Java bytecode and runs on its own virtual machine optimized for lowmemory devices such as smartphones and tablet computers Depending on the Android version the bytecode is either interpreted by the Dalvik virtual machine or compiled into native code by the Android Runtime Android does not provide the full Java SE standard library although the Android SDK does include an independent implementation of a large subset of it It supports Java6 and some Java7 features offering an implementation compatible with the standard library Apache Harmony Controversy edit See also Oracle America Inc v Google Inc The use of Javarelated technology in Android led to a legal dispute between Oracle and Google On May 7 2012 a San Francisco jury found that if APIs could be copyrighted then Google had infringed Oracles copyrights by the use of Java in Android devices 71 District Judge William Haskell Alsup ruled on May 31 2012 that APIs cannot be copyrighted 72 but this was reversed by the United States Court of Appeals for the Federal Circuit in May 2014 73 On May 26 2016 the district court decided in favor of Google ruling the copyright infringement of the Java API in Android constitutes fair use 74 On March 2018 this ruling was overturned by the Appeals Court which sent down the case of determining the damages to federal court in San Francisco 75 Google filed a petition for writ of certiorari with the Supreme Court of the United States in January 2019 to challenge the two rulings that were made by the Appeals Court towards Oracles favor 76 See also edit Computer programming portal C C Dalvik used in old Android versions replaced by nonJIT Android Runtime Deterministic Parallel Java List of Java virtual machines List of Java APIs List of JVM languages Comparison of Java with other languages edit Comparison of C and Java Comparison of Java and C Notes edit Binstock Andrew May 20 2015 Javas 20 Years of Innovation Forbes Archived from the original on March 14 2016 Retrieved March 18 2016 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Chaudhary Harry H July 28 2014 Cracking The Java Programming Interview 2000 Java Interview QueAns Retrieved May 29 2016 Java50 added several new language features the enhanced for loop autoboxing varargs and annotations after they were introduced in the similar and competing C language 1 Archived March 19 2011 at the Wayback Machine 2 Archived January 7 2006 at the Wayback Machine Gosling James McGilton Henry May 1996 The Java Language Environment Archived from the original on May 6 2014 Retrieved May 6 2014 Gosling James Joy Bill Steele Guy Bracha Gilad The Java Language Specification 2nd Edition Archived from the original on August 5 2011 Retrieved February 8 2008 The AZ of Programming Languages Modula3 Computerworldcomau Archived from the original on January 5 2009 Retrieved June 9 2010 Niklaus Wirth stated on a number of public occasions eg in a lecture at the Polytechnic Museum Moscow in September 2005 several independent firsthand accounts in Russian exist eg one with an audio recording Filippova Elena September 22 2005 Niklaus Wirths lecture at the Polytechnic Museum in Moscow that the Sun Java design team licensed the Oberon compiler sources a number of years prior to the release of Java and examined it a relative compactness type safety garbage collection no multiple inheritance for classes all these key overall design features are shared by Java and Oberon Patrick Naughton cites ObjectiveC as a strong influence on the design of the Java programming language stating that notable direct derivatives include Java interfaces derived from ObjectiveCs protocol and primitive wrapper classes 3 Archived July 13 2011 at the Wayback Machine TechMetrix Research 1999 History of Java PDF Java Application Servers Report Archived from the original PDF on December 29 2010 The project went ahead under the name green and the language was based on an old model of UCSD Pascal which makes it possible to generate interpretive code A Conversation with James Gosling ACM Queue Queueacmorg August 31 2004 Archived from the original on July 16 2015 Retrieved June 9 2010 In the summer of 1996 Sun was designing the precursor to what is now the event model of the AWT and the JavaBeans component architecture Borland contributed greatly to this process We looked very carefully at Delphi Object Pascal and built a working prototype of bound method references in order to understand their interaction with the Java programming language and its APIs White Paper About Microsofts Delegates Chapel spec Acknowledgements PDF Cray Inc October 1 2015 Archived PDF from the original on February 5 2016 Retrieved January 14 2016 Gambas Documentation Introduction Gambas Website Archived from the original on October 9 2017 Retrieved October 9 2017 Facebook QA Hack brings static typing to PHP world InfoWorld March 26 2014 Archived from the original on February 13 2015 Retrieved January 11 2015 Write once run anywhere Computer Weekly May 2 2002 Retrieved July 27 2009 a b c 12 Design Goals of the Java Programming Language Oracle January 1 1999 Archived from the original on January 23 2013 Retrieved January 14 2013 a b McMillan Robert August 1 2013 Is Java Losing Its Mojo wiredcom Archived from the original on February 15 2017 Retrieved March 8 2017 Java is on the wane at least according to one outfit that keeps on eye on the everchanging world of computer programming languages For more than a decade it has dominated the TIOBE Programming Community Index and is back on top a snapshot of software developer enthusiasm that looks at things like internet search results to measure how much buzz different languages have But lately Java has been slipping Chan Rosalie January 22 2019 The 10 most popular programming languages according to the Facebook for programmers Business Insider Archived from the original on June 29 2019 Retrieved June 29 2019 JavaOne 2013 Review Java Takes on the Internet of Things wwworaclecom Archived from the original on April 19 2016 Retrieved June 19 2016 Why should I uninstall older versions of Java from my system Oracle Retrieved September 9 2016 Byous Jon c 1998 Java technology The early years Sun Developer Network Sun Microsystems Archived from the original on April 20 2005 Retrieved April 22 2005 Objectoriented programming The History of Java Technology Sun Developer Network c 1995 Archived from the original on February 10 2010 Retrieved April 30 2010 So why did they decide to call it Java Archived November 15 2013 at the Wayback Machine Kieron Murphy JavaWorldcom 100496 Kabutz Heinz Once Upon an Oak Archived April 13 2007 at the Wayback Machine Artima Retrieved April 29 2007 JAVASOFT SHIPS JAVA 10 Archived from the original on March 10 2007 Retrieved May 13 2018 Objectoriented Programming with Java Essentials and Applications Tata McGrawHill Education p34 JSG Java Study Group openstdorg Archived from the original on August 25 2006 Retrieved August 2 2006 Why Java Was Not Standardized Twice PDF Archived PDF from the original on January 13 2014 Retrieved June 3 2018 What is ECMAand why Microsoft cares Archived from the original on May 6 2014 Retrieved May 6 2014 Java Community Process website Jcporg May 24 2010 Archived from the original on August 8 2006 Retrieved June 9 2010 JAVAONE Sun The bulk of Java is open sourced GrnLightnet Archived from the original on May 27 2014 Retrieved May 26 2014 Suns Evolving Role as Java Evangelist OReilly Media Archived from the original on September 15 2010 Retrieved August 2 2009 Oracle and Java oraclecom Oracle Corporation Archived from the original on January 31 2010 Retrieved August 23 2010 Oracle has been a leading and substantive supporter of Java since its emergence in 1995 and takes on the new role as steward of Java technology with a relentless commitment to fostering a community of participation and transparency CS1 maint BOT originalurl status unknown link Learn About Java Technology Oracle Archived from the original on November 24 2011 Retrieved November 21 2011 Gosling James April 9 2010 Time to move on On a New Road Archived from the original on November 5 2010 Retrieved November 16 2011 CS1 maint BOT originalurl status unknown link Topic Dalibor Moving to a PluginFree Web Archived from the original on March 16 2016 Retrieved March 15 2016 JAVASOFT SHIPS JAVA 10 Archived from the original on March 10 2007 Retrieved February 5 2008 Chander Sharat Introducing Java SE 11 oraclecom Archived from the original on September 26 2018 Retrieved September 26 2018 Java Card Overview Oracle Technology Network Oracle Archived from the original on January 7 2015 Retrieved December 18 2014 Java Platform Micro Edition Java ME Oracle Technology Network Oracle Archived from the original on January 4 2015 Retrieved December 18 2014 Java SE Oracle Technology Network Oracle Archived from the original on December 24 2014 Retrieved December 18 2014 Java Platform Enterprise Edition Java EE Oracle Technology Network Oracle Archived from the original on December 17 2014 Retrieved December 18 2014 Is the JVM Java Virtual Machine platform dependent or platform independent What is the advantage of using the JVM and having Java be a translated language Programmer Interview Archived from the original on January 19 2015 Retrieved January 19 2015 Jelovic Dejan Why Java will always be slower than C Archived from the original on February 11 2008 Retrieved February 15 2008 Google Loop Recognition in CJavaGoScala PDF Retrieved July 12 2012 Symantecs JustInTime Java Compiler To Be Integrated into Sun JDK 11 Archived from the original on June 28 2010 Retrieved August 1 2009 Salcic Zoran Park Heejong Teich Jürgen Malik Avinash Nadeem Muhammad July 22 2017 NocHMP A Heterogeneous Multicore Processor for Embedded Systems Designed in SystemJ ACM Transactions on Design Automation of Electronic Systems 22 4 73 doi 1011453073416 ISSN 10844309 NullPointerException Oracle Archived from the original on May 6 2014 Retrieved May 6 2014 Exceptions in Java Artimacom Archived from the original on January 21 2009 Retrieved August 10 2010 Java HotSpot Virtual Machine Performance Enhancements Oraclecom Archived from the original on May 29 2017 Retrieved April 26 2017 Java HotSpot VM Options Oraclecom September 7 2010 Archived from the original on March 6 2011 Retrieved June 30 2012 GarbageFirst Collector docsoraclecom Archived from the original on March 9 2016 Retrieved March 15 2016 Operator Overloading C vs Java C for Java Developers Microsoft Archived from the original on January 7 2015 Retrieved December 10 2014 Multiple Inheritance of State Implementation and Type The Java Tutorials Oracle Archived from the original on November 9 2014 Retrieved December 10 2014 Lesson A Closer Look at the Hello World Application The Java Tutorials Getting Started Oracle Corporation Archived from the original on March 17 2011 Retrieved April 14 2011 Deprecated APIs Features and Options wwworaclecom Retrieved May 31 2019 Java and Scalas Type Systems are Unsound PDF Archived PDF from the original on November 28 2016 Retrieved February 20 2017 Arnold Ken Generics Considered Harmful javanet Archived from the original on October 10 2007 Retrieved September 10 2015 CS1 maint BOT originalurl status unknown link More comments to the original article available at earlier archive snapshots like Jelovic Dejan Why Java Will Always Be Slower than C wwwjeloviccom Archived from the original on February 11 2008 Retrieved October 17 2012 Owens Sean R Java and unsigned int unsigned short unsigned byte unsigned long etc Or rather the lack thereof Archived from the original on February 20 2009 Retrieved July 4 2011 Kahan William How Javas FloatingPoint Hurts Everyone Everywhere PDF Electrical Engineering Computer Science University of California at Berkeley Archived PDF from the original on September 5 2012 Retrieved June 4 2011 Have you checked the Java Archived from the original on September 21 2012 Retrieved December 23 2011 Cadenhead Rogers November 20 2017 Understanding How Java Programs Work retrieved March 26 2019 Woolf Nicky May 26 2016 Google wins sixyear legal battle with Oracle over Android code copyright The Guardian ISSN 02613077 Retrieved March 26 2019 Collections Framework Overview Java Documentation Oracle Archived from the original on December 31 2014 Retrieved December 18 2014 Java Security Overview Java Documentation Oracle Archived from the original on January 3 2015 Retrieved December 18 2014 Trail Internationalization The Java Tutorials Oracle Archived from the original on December 31 2014 Retrieved December 18 2014 How to Write Doc Comments for the Javadoc Tool Oracle Technology Network Oracle Archived from the original on December 18 2014 Retrieved December 18 2014 Niccolai James January 23 2001 Sun Microsoft settle Java lawsuit JavaWorld International Data Group Archived from the original on May 28 2008 Retrieved July 9 2008 van Gurp Jilles November 13 2007 Google Android Initial Impressions and Criticism Javalobby Retrieved March 7 2009 Frankly I dont understand why Google intends to ignore the vast amount of existing implementation out there It seems like a bad case of not invented here to me Ultimately this will slow adoption There are already too many Java platforms for the mobile world and this is yet another one Mullin Joe Google guilty of infringement in Oracle trial future legal headaches loom Law Disorder Ars Technica Archived from the original on May 8 2012 Retrieved May 8 2012 Mullin Joe May 31 2012 Google wins crucial API ruling Oracles case decimated Ars Technica Archived from the original on March 12 2017 Retrieved June 1 2012 Rosenblatt Seth May 9 2014 Court sides with Oracle over Android in Java patent appeal CNET Archived from the original on May 10 2014 Retrieved May 10 2014 Mullin Joe May 26 2016 Google beats OracleAndroid makes fair use of Java APIs Ars Technica Archived from the original on January 20 2017 Retrieved May 26 2016 Farivar Cyrus March 27 2018 Googles use of the Java API packages was not fair appeals court rules Ars Technica Retrieved August 6 2019 Lee Timothy April 23 2019 Google asks Supreme Court to overrule disastrous ruling on API copyrights Ars Technica Retrieved April 23 2019 References edit mwparseroutput refbeginfontsize90marginbottom05emmwparseroutput refbeginhangingindentsgtulliststyletypenonemarginleft0mwparseroutput refbeginhangingindentsgtulgtlimwparseroutput refbeginhangingindentsgtdlgtddmarginleft0paddingleft32emtextindent32emliststylenonemwparseroutput refbegin100fontsize100 Gosling James Joy Bill Steele Guy Bracha Gilad Buckley Alex 2014 The Java Language Specification PDF Java SE 8 ed Gosling James Joy Bill Steele Guy L Jr Bracha Gilad 2005 The Java Language Specification 3rd ed AddisonWesley ISBN 0321246780 Lindholm Tim Yellin Frank 1999 The Java Virtual Machine Specification 2nd ed AddisonWesley ISBN 0201432943 External links edit Java programming language at Wikipedias sister projects Definitions from Wiktionary Media from Wikimedia Commons News from Wikinews Quotations from Wikiquote Textbooks from Wikibooks Resources from Wikiversity Wikiversity has learning resources about Java Platform Enterprise EditionJava EE Tutorial v t e Java Platforms Java language JVM Micro Edition Standard Edition Enterprise Edition Java Card Android SDK Oracle technologies Squawk Java Development Kit OpenJDK Java virtual machine JavaFX Maxine VM Platform technologies Applets Servlets MIDlets JSP JSF Web Start JNLP Major thirdparty technologies Blackdown Eclipse GNU Classpath GWT Harmony Hibernate IcedTea Jazelle Spring Struts TopLink WildFly History Java version history Java Community Process Sun Microsystems Free Java implementations Major JVM languages BeanShell Clojure Groovy JRuby Jython Kotlin Processing Rhino Scala Community Conferences JavaOne Devoxx Organizations Apache Software Foundation Java Community Process Oracle Corporation Sun Microsystems Sun Microsystems Laboratories People James Gosling Arthur van Hoff Urs Hölzle Patrick Naughton Category Computer programming portal v t e Sun Microsystems acquired by Oracle Corp 2010 Hardware Sun1 Sun2 Sun3 Sun386i Sun4 SPARCstation Netra Ultra Enterprise Sun Blade Sun Fire SPARC Enterprise SPARC JavaStation Sun Ray Sun Modular Datacenter more Software SunOS Solaris NIS NFS ZFS SunView NeWS OpenWindows Java Desktop System Sun Studio Java StarOffice iPlanet Sun ONE Java Enterprise System Sun Secure Global Desktop MySQL Sun xVM GlassFish VirtualBox more Storage StorageTek Sun Open Storage QFS ZFS Highperformance computing Sun Cloud Sun Constellation System Sun Visualization System Sun Grid Engine Lustre Research Sun Labs picoJava Fortress Project Looking Glass Education SCPs BlueJ Community Common Development and Distribution License Java Community Process NetBeans OpenOfficeorg OpenSolaris OpenSPARC OpenJDK OSUM People Bill Joy Andy Bechtolsheim Scott McNealy Vinod Khosla List of notable employees v t e Oracle Corporation Corporate directors Jeffrey Berg H Raymond Bingham Michael Boskin Safra Catz Larry Ellison Héctor GarcíaMolina Joseph Grundfest Jeffrey O Henley Mark Hurd Jack F Kemp Donald L Lucas Naomi O Seligman Acquisitions list Sun PeopleSoft Hyperion Siebel BEA JD Edwards RightNow Virtual Iron TimesTen Sunopsis NetSuite Databases Oracle Database MySQL InnoDB Berkeley DB TimesTen Rdb Essbase Programming languages Java PLSQL IDEs JDeveloper Forms NetBeans Apex SQL Developer Developer Studio Middleware Fusion Middleware WebCenter SOA Suite WebLogic Server Coherence Tuxedo GlassFish Operating systems Oracle Linux Oracle Solaris Computer hardware Sun Fire SPARC TSeries Enterprise StorageTek Computer appliances Oracle Exadata Oracle Exalogic Big Data Appliance Education and recognition Oracle Certification Program Category v t e Programming languages Comparison Timeline History APL Assembly BASIC C C C COBOL Elixir Fortran Go Groovy Haskell Java JavaScript JS Julia Kotlin Lisp Lua MATLAB ObjectiveC OCaml Pascal Perl PHP Python R Ruby Rust Scala Shell Smalltalk Swift TypeScript Visual Basic NET VBNET more Category Lists Alphabetical Categorical Generational NonEnglishbased v t e Free and opensource software General Alternative terms for free software Comparison of opensource and closedsource software Comparison of sourcecodehosting facilities Free software Free software project directories Gratis versus libre Longterm support Opensource software Opensource software development Outline Software packages Audio Bioinformatics Codecs Collaboration Configuration management Device drivers Graphics Wireless Geophysics Health Mathematics Operating systems Programming languages Routing Statistics Television Video games Web applications Content management systems Ecommerce Word processors Android apps iOS apps Commercial Trademarked Formerly proprietary Formerly opensource Community Free software movement History Opensourcesoftware movement Organizations Events Licenses AFL Apache APSL Artistic Beerware Boost BSD CC0 CDDL EPL Free Software Foundation GNU GPL GNU LGPL ISC MIT MPL MsPL RL Python Python Software Foundation License Sleepycat Unlicense WTFPL zlib Types and standards Comparison of free and opensource software licenses Contributor License Agreement Copyleft Debian Free Software Guidelines Definition of Free Cultural Works Free license The Free Software Definition The Open Source Definition Opensource license Permissive software license Public domain Viral license Challenges Digital rights management Firmware security Hardware restrictions License proliferation Mozilla software rebranding Proprietary device drivers Proprietary firmware Proprietary software SCOLinux controversies Secure boot Software patents Software security Trusted Computing Related topics Forking GNU Manifesto Microsoft Open Specification Promise Opencore model Opensource hardware Shared Source Initiative Sourceavailable software The Cathedral and the Bazaar Revolution OS Free and opensource software portal Category Commons WikiProject Book Authority control BNE XX540033 BNF cb12533207m data GND 44013139 LCCN sh95008574