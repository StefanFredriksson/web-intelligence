Decomposition computer science Decomposition in computer science also known as factoring is breaking a complex problem or system into parts that are easier to conceive understand program and maintain Contents 1 Overview 2 Decomposition topics 21 Decomposition paradigm 22 Decomposition diagram 3 See also 4 References 5 External links Overview edit There are different types of decomposition defined in computer sciences In structured programming algorithmic decomposition breaks a process down into welldefined steps Structured analysis breaks down a software system from the system context level to system functions and data entities as described by Tom DeMarco 1 Objectoriented decomposition on the other hand breaks a large system down into progressively smaller classes or objects that are responsible for some part of the problem domain According to Booch algorithmic decomposition is a necessary part of objectoriented analysis and design but objectoriented systems start with and emphasize decomposition into classes 2 More generally functional decomposition in computer science is a technique for mastering the complexity of the function of a model A functional model of a system is thereby replaced by a series of functional models of subsystems 3 Decomposition topics edit Decomposition paradigm edit A decomposition paradigm in computer programming is a strategy for organizing a program as a number of parts and it usually implies a specific way to organize a program text Usually the aim of using a decomposition paradigm is to optimize some metric related to program complexity for example the modularity of the program or its maintainability Most decomposition paradigms suggest breaking down a program into parts so as to minimize the static dependencies among those parts and to maximize the cohesiveness of each part Some popular decomposition paradigms are the procedural modules abstract data type and object oriented ones The concept of decomposition paradigm is entirely independent and different from that of model of computation but the two are often confused most often in the cases of the functional model of computation being confused with procedural decomposition and of the actor model of computation being confused with object oriented decomposition Decomposition diagram edit Decomposition Structure Negative NodeNumbered Context Static Dynamic and Requirements Models for Systems Partition Functions and Use Scenarios Mapping to Requirements and Goals A decomposition diagram shows a complex process organization data subject area or other type of object broken down into lower level more detailed components For example decomposition diagrams may represent organizational structure or functional decomposition into processes Decomposition diagrams provide a logical hierarchical decomposition of a system See also edit Code refactoring Componentbased software engineering Dynamization Duplicate code Event partitioning How to Solve It Integrated Enterprise Modeling Personal information management Readability Subroutine References edit Tom DeMarco 1978 Structured Analysis and System Specification New York NY Yourdon 1978 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em ISBN 0917072073 ISBN 9780917072079 Grady Booch 1994 Objectoriented Analysis and Design 2nd ed Redwood Cita CA BenjaminCummings pp1620 Jan Dietz 2006 Enterprise Ontology Theory and Methodology SpringerVerlag Berlin Heidelberg This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Decompositioncomputer science news newspapers books scholar JSTOR November 2008 Learn how and when to remove this template message External links edit Wikimedia Commons has media related to Decomposition computer science diagrams Object Oriented Analysis and Design