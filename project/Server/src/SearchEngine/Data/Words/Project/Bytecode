Bytecode This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Bytecode news newspapers books scholar JSTOR January 2009 Learn how and when to remove this template message Portable code redirects here For other uses see software portability Bytecode also termed portable code or pcode is a form of instruction set designed for efficient execution by a software interpreter Unlike humanreadable source code bytecodes are compact numeric codes constants and references normally numeric addresses that encode the result of compiler parsing and performing semantic analysis of things like type scope and nesting depths of program objects Program execution General concepts Code Translation Compiler Compiletime Optimizing compiler Intermediate representation IR Execution Runtime system Runtime Executable Interpreter Virtual machine Types of code Source code Object code Bytecode Machine code Microcode Compilation strategies Justintime JIT Tracing justintime Aheadoftime AOT Transcompilation Recompilation Notable runtimes Android Runtime ART Common Language Runtime CLR Mono crt0 HHVM Java virtual machine JVM ObjectiveC V8 Nodejs PyPy Zend Engine Notable compilers toolchains GNU Compiler Collection GCC LLVM Clang v t e Look up bytecode in Wiktionary the free dictionary The name bytecode stems from instruction sets that have one byte opcodes followed by optional parameters Intermediate representations such as bytecode may be output by programming language implementations to ease interpretation or it may be used to reduce hardware and operating system dependence by allowing the same code to run crossplatform on different devices Bytecode may often be either directly executed on a virtual machine a pcode machine ie interpreter or it may be further compiled into machine code for better performance Since bytecode instructions are processed by software they may be arbitrarily complex but are nonetheless often akin to traditional hardware instructions virtual stack machines are the most common but virtual register machines have been built also 1 2 Different parts may often be stored in separate files similar to object modules but dynamically loaded during execution Contents 1 Execution 2 Examples 3 Notes 4 References Execution edit A bytecode program may be executed by parsing and directly executing the instructions one at a time This kind of bytecode interpreter is very portable Some systems called dynamic translators or justintime JIT compilers translate bytecode into machine code as necessary at runtime This makes the virtual machine hardwarespecific but does not lose the portability of the bytecode For example Java and Smalltalk code is typically stored in bytecode format which is typically then JIT compiled to translate the bytecode to machine code before execution This introduces a delay before a program is run when the bytecode is compiled to native machine code but improves execution speed considerably compared to interpreting source code directly normally by around an order of magnitude 10x 3 Because of its performance advantage today many language implementations execute a program in two phases first compiling the source code into bytecode and then passing the bytecode to the virtual machine There are bytecode based virtual machines of this sort for Java Raku Python PHP nb 1 Tcl mawk and Forth however Forth is seldom compiled via bytecodes in this way and its virtual machine is more generic instead The implementation of Perl and Ruby 18 instead work by walking an abstract syntax tree representation derived from the source code More recently the authors of V8 4 and Dart 5 have challenged the notion that intermediate bytecode is needed for fast and efficient VM implementation Both of these language implementations currently do direct JIT compiling from source code to machine code with no bytecode intermediary 6 Examples edit import dis dis Disassembler of Python byte code into mnemonics dis dis printHello World 1 0 LOADNAME 0 print 2 LOADCONST 0 Hello World 4 CALLFUNCTION 1 6 RETURNVALUE ActionScript executes in the ActionScript Virtual Machine AVM which is part of Flash Player and AIR ActionScript code is typically transformed into bytecode format by a compiler Examples of compilers include one built into Adobe Flash Professional and one built into Adobe Flash Builder and available in the Adobe Flex SDK Adobe Flash objects BANCStar originally bytecode for an interfacebuilding tool but used also as a language Berkeley Packet Filter Byte Code Engineering Library C to Java virtual machine compilers CLISP implementation of Common Lisp used to compile only to bytecode for many years however now it also supports compiling to native code with the help of GNU lightning CMUCL and Scieneer Common Lisp implementations of Common Lisp can compile either to native code or to bytecode which is far more compact Common Intermediate Language executed by Common Language Runtime used by NET Framework languages such as C Dalvik bytecode designed for the Android platform is executed by the Dalvik virtual machine Dis bytecode designed for the Inferno operating system is executed by the Dis virtual machine EiffelStudio for the Eiffel programming language EM the Amsterdam Compiler Kit virtual machine used as an intermediate compiling language and as a modern bytecode language Emacs is a text editor with most of its functions implemented by Emacs Lisp its builtin dialect of Lisp These features are compiled into bytecode This architecture allows users to customize the editor with a high level language which after compiling into bytecode yields reasonable performance Embeddable Common Lisp implementation of Common Lisp can compile to bytecode or C code Ericsson implementation of Erlang uses BEAM bytecodes Icon 7 and Unicon 8 programming languages Infocom used the Zmachine to make its software applications more portable Java bytecode which is executed by the Java virtual machine ASM BCEL Javassist JMangler KEYB the DOS keyboard driver with its resource file KEYBOARDSYS containing layout information and short pcode sequences executed by an interpreter inside the resident driver 9 10 LSL a scripting language used in virtual worlds compiles in bytecode running on a virtual machine Second Life has the original Mono version Inworldz developed the Phlox version Lua language uses a registerbased bytecode virtual machine mcode of the MATLAB language 11 Multiplan 12 Ocode of the BCPL programming language OCaml language optionally compiles to a compact bytecode form pcode of UCSD Pascal implementation of the Pascal language Parrot virtual machine Pick BASIC also referred to as Data BASIC or MultiValue BASIC The R environment for statistical computing offers a bytecode compiler through the compiler package now standard with R version 2130 It is possible to compile this version of R so that the base and recommended packages exploit this 13 Scheme 48 implementation of Scheme using bytecode interpreter Bytecodes of many implementations of the Smalltalk language The Spin interpreter built into the Parallax Propeller microcontroller The SQLite database engine translates SQL statements into a bespoke bytecode format 14 SWEET16 Tcl Visual FoxPro compiles to bytecode WebAssembly YARV and Rubinius for Ruby Notes edit Although PHP opcodes are generated each time the program is launched and are always interpreted and not justintime compiled References edit The Implementation of Lua 50 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em NB This involves a registerbased virtual machine Dalvik VM Archived from the original on 20130518 Retrieved 20121029 NB This VM is register based Byte Code Vs Machine Code wwwallaboutcomputingnet Retrieved 20171023 Dynamic Machine Code Generation Google Loitsch Florian Why Not a Bytecode VM Google Archived from the original on 20130512 JavaScript myth JavaScript needs a standard bytecode The Implementation of the Icon Programming Language PDF Archived from the original PDF on 20160305 Retrieved 20110909 The Implementation of Icon and Unicon a Compendium PDF Paul Matthias R 20011230 KEYBOARDSYS internal structure Newsgroup composmsdosprogrammer Archived from the original on 20170909 Retrieved 20160917 In fact the format is basically the same in MSDOS 33 80 PC DOS 33 2000 including Russian Lithuanian Chinese and Japanese issues as well as in Windows NT 2000 and XP There are minor differences and incompatibilities but the general format has not changed over the years Some of the data entries contain normal tables However most entries contain executable code interpreted by some kind of pcode interpreter at runtime including conditional branches and the like This is why the KEYB driver has such a huge memory footprint compared to tabledriven keyboard drivers which can be done in 3 4 Kb getting the same level of function except for the interpreter Mendelson Edward 20010720 How to Display the Euro in MSDOS and Windows DOS Display the euro symbol in fullscreen MSDOS including Windows 95 or Windows 98 fullscreen DOS Archived from the original on 20160917 Retrieved 20160917 Matthias R Paul warns that the IBM PC DOS version of the keyboard driver uses some internal procedures that are not recognized by the Microsoft driver so if possible you should use the IBM versions of both KEYBCOM and KEYBOARDSYS instead of mixing Microsoft and IBM versions NB What is meant by procedures here are some additional bytecodes in the IBM KEYBOARDSYS file not supported by the Microsoft version of the KEYB driver United States Patent 6973644 Microsoft C Pcode Specifications p13 Multiplan wasnt compiled to machine code but to a kind of bytecode which was run by an interpreter in order to make Multiplan portable across the widely varying hardware of the time This bytecode distinguished between the machinespecific floating point format to calculate on and an external standard format which was binary coded decimal BCD The PACK and UNPACK instructions converted between the two R Installation and Administration The SQLite Bytecode Engine Archived from the original on 20170414 Retrieved 20160829