Entityrelationship model This article needs additional citations for verification Please help improve this article by adding citations to reliable sources Unsourced material may be challenged and removed Find sources Entityrelationship model news newspapers books scholar JSTOR November 2016 Learn how and when to remove this template message An entityrelationship model or ER model describes interrelated things of interest in a specific domain of knowledge A basic ER model is composed of entity types which classify the things of interest and specifies relationships that can exist between entities instances of those entity types An entityrelationship diagram for a MMORPG using Chens notation In software engineering an ER model is commonly formed to represent things a business needs to remember in order to perform business processes Consequently the ER model becomes an abstract data model that defines a data or information structure which can be implemented in a database typically a relational database Entityrelationship modeling was developed for database and design by Peter Chen and published in a 1976 paper 1 However variants of the idea existed previously 2 Some ER models show super and subtype entities connected by generalizationspecialization relationships 3 and an ER model can be used also in the specification of domainspecific ontologies Contents 1 Introduction 2 Entityrelationship model 21 Mapping natural language 22 Relationships roles and cardinalities 23 Role naming 24 Cardinalities 25 Crows foot notation 26 Model usability issues 3 Entityrelationships and semantic modeling 31 Semantic model 32 Extension model 33 Entityrelationship origins 331 Philosophical alignment 4 Limitations 5 See also 6 References 7 Further reading 8 External links Introduction edit An ER model is usually the result of systematic analysis to define and describe what is important to processes in an area of a business It does not define the business processes it only presents a business data schema in graphical form It is usually drawn in a graphical form as boxes entities that are connected by lines relationships which express the associations and dependencies between entities An ER model can also be expressed in a verbal form for example one building may be divided into zero or more apartments but one apartment can only be located in one building Entities may be characterized not only by relationships but also by additional properties attributes which include identifiers called primary keys Diagrams created to represent attributes as well as entities and relationships may be called entityattributerelationship diagrams rather than entityrelationship models An ER model is typically implemented as a database In a simple relational database implementation each row of a table represents one instance of an entity type and each field in a table represents an attribute type In a relational database a relationship between entities is implemented by storing the primary key of one entity as a pointer or foreign key in the table of another entity There is a tradition for ERdata models to be built at two or three levels of abstraction Note that the conceptuallogicalphysical hierarchy below is used in other kinds of specification and is different from the three schema approach to software engineering Conceptual data model This is the highest level ER model in that it contains the least granular detail but establishes the overall scope of what is to be included within the model set The conceptual ER model normally defines master reference data entities that are commonly used by the organization Developing an enterprisewide conceptual ER model is useful to support documenting the data architecture for an organization A conceptual ER model may be used as the foundation for one or more logical data models see below The purpose of the conceptual ER model is then to establish structural metadata commonality for the master data entities between the set of logical ER models The conceptual data model may be used to form commonality relationships between ER models as a basis for data model integration Logical data model A logical ER model does not require a conceptual ER model especially if the scope of the logical ER model includes only the development of a distinct information system The logical ER model contains more detail than the conceptual ER model In addition to master data entities operational and transactional data entities are now defined The details of each data entity are developed and the relationships between these data entities are established The logical ER model is however developed independently of the specific database management system into which it can be implemented Physical data model One or more physical ER models may be developed from each logical ER model The physical ER model is normally developed to be instantiated as a database Therefore each physical ER model must contain enough detail to produce a database and each physical ER model is technology dependent since each database management system is somewhat different The physical model is normally instantiated in the structural metadata of a database management system as relational database objects such as database tables database indexes such as unique key indexes and database constraints such as a foreign key constraint or a commonality constraint The ER model is also normally used to design modifications to the relational database objects and to maintain the structural metadata of the database The first stage of information system design uses these models during the requirements analysis to describe information needs or the type of information that is to be stored in a database The data modeling technique can be used to describe any ontology ie an overview and classifications of used terms and their relationships for a certain area of interest In the case of the design of an information system that is based on a database the conceptual data model is at a later stage usually called logical design mapped to a logical data model such as the relational model this in turn is mapped to a physical model during physical design Note that sometimes both of these phases are referred to as physical design Entityrelationship model edit Two related entities An entity with an attribute A relationship with an attribute Primary key An entity may be defined as a thing capable of an independent existence that can be uniquely identified An entity is an abstraction from the complexities of a domain When we speak of an entity we normally speak of some aspect of the real world that can be distinguished from other aspects of the real world 4 An entity is a thing that exists either physically or logically An entity may be a physical object such as a house or a car they exist physically an event such as a house sale or a car service or a concept such as a customer transaction or order they exist logicallyas a concept Although the term entity is the one most commonly used following Chen we should really distinguish between an entity and an entitytype An entitytype is a category An entity strictly speaking is an instance of a given entitytype There are usually many instances of an entitytype Because the term entitytype is somewhat cumbersome most people tend to use the term entity as a synonym for this term Entities can be thought of as nouns Examples a computer an employee a song a mathematical theorem etc A relationship captures how entities are related to one another Relationships can be thought of as verbs linking two or more nouns Examples an owns relationship between a company and a computer a supervises relationship between an employee and a department a performs relationship between an artist and a song a proves relationship between a mathematician and a conjecture etc The models linguistic aspect described above is utilized in the declarative database query language ERROL which mimics natural language constructs ERROLs semantics and implementation are based on reshaped relational algebra RRA a relational algebra that is adapted to the entityrelationship model and captures its linguistic aspect Entities and relationships can both have attributes Examples an employee entity might have a Social Security Number SSN attribute while a proved relationship may have a date attribute Every entity unless it is a weak entity must have a minimal set of uniquely identifying attributes which is called the entitys primary key Entityrelationship diagrams dont show single entities or single instances of relations Rather they show entity sets all entities of the same entity type and relationship sets all relationships of the same relationship type Examples a particular song is an entity the collection of all songs in a database is an entity set the eaten relationship between a child and his lunch is a single relationship the set of all such childlunch relationships in a database is a relationship setIn other words a relationship set corresponds to a relation in mathematics while a relationship corresponds to a member of the relation Certain cardinality constraints on relationship sets may be indicated as well Mapping natural language edit Chen proposed the following rules of thumb for mapping natural language descriptions into ER diagrams English Chinese and ER diagrams by Peter Chen English grammar structure ER structure Common noun Entity type Proper noun Entity Transitive verb Relationship type Intransitive verb Attribute type Adjective Attribute for entity Adverb Attribute for relationship Physical view show how data is actually stored Relationships roles and cardinalities edit In Chens original paper he gives an example of a relationship and its roles He describes a relationship marriage and its two roles husband and wife A person plays the role of husband in a marriage relationship and another person plays the role of wife in the same marriage These words are nouns That is no surprise naming things requires a noun Chens terminology has also been applied to earlier ideas The lines arrows and crowsfeet of some diagrams owes more to the earlier Bachman diagrams than to Chens relationship diagrams Another common extension to Chens model is to name relationships and roles as verbs or phrases Role naming edit It has also become prevalent to name roles with phrases such as is the owner of and is owned by Correct nouns in this case are owner and possession Thus person plays the role of owner and car plays the role of possession rather than person plays the role of is the owner of etc The use of nouns has direct benefit when generating physical implementations from semantic models When a person has two relationships with car then it is possible to generate names such as ownerperson and driverperson which are immediately meaningful 5 Cardinalities edit Modifications to the original specification can be beneficial Chen described lookacross cardinalities As an aside the BarkerEllis notation used in Oracle Designer uses sameside for minimum cardinality analogous to optionality and role but lookacross for maximum cardinality the crows foot clarification needed In Merise 6 Elmasri Navathe 7 and others 8 there is a preference for sameside for roles and both minimum and maximum cardinalities Recent researchers Feinerer 9 Dullea et al 10 have shown that this is more coherent when applied to nary relationships of order greater than2 In Dullea et al one reads A look across notation such as used in the UML does not effectively represent the semantics of participation constraints imposed on relationships where the degree is higher than binary In Feinerer it says Problems arise if we operate under the lookacross semantics as used for UML associations Hartmann 11 investigates this situation and shows how and why different transformations fail Although the reduction mentioned is spurious as the two diagrams 34 and 35 are in fact the same and also As we will see on the next few pages the lookacross interpretation introduces several difficulties that prevent the extension of simple mechanisms from binary to nary associations Various methods of representing the same one to many relationship In each case the diagram shows the relationship between a person and a place of birth each person must have been born at one and only one location but each location may have had zero or more people born at it Two related entities shown using Crows Foot notation In this example an optional relationship is shown between Artist and Song the symbols closest to the song entity represents zero one or many whereas a song has one and only one Artist The former is therefore read as an Artist can performs zero one or many songs Chens notation for entityrelationship modeling uses rectangles to represent entity sets and diamonds to represent relationships appropriate for firstclass objects they can have attributes and relationships of their own If an entity set participates in a relationship set they are connected with a line Attributes are drawn as ovals and are connected with a line to exactly one entity or relationship set Cardinality constraints are expressed as follows a double line indicates a participation constraint totality or surjectivity all entities in the entity set must participate in at least one relationship in the relationship set an arrow from entity set to relationship set indicates a key constraint ie injectivity each entity of the entity set can participate in at most one relationship in the relationship set a thick line indicates both ie bijectivity each entity in the entity set is involved in exactly one relationship an underlined name of an attribute indicates that it is a key two different entities or relationships with this attribute always have different values for this attribute Attributes are often omitted as they can clutter up a diagram other diagram techniques often list entity attributes within the rectangles drawn for entity sets Related diagramming convention techniques Bachman notation Barkers notation EXPRESS IDEF1X Crows foot notation also Martin notation min maxnotation of JeanRaymond Abrial in 1974 UML class diagrams Merise Objectrole modeling Crows foot notation edit Crows foot notation the beginning of which dates back to an article by Gordon Everest 1976 12 is used in Barkers notation Structured Systems Analysis and Design Method SSADM and information technology engineering Crows foot diagrams represent entities as boxes and relationships as lines between the boxes Different shapes at the ends of these lines represent the relative cardinality of the relationship Crows foot notation was used in the consultancy practice CACI Many of the consultants at CACI including Richard Barker subsequently moved to Oracle UK where they developed the early versions of Oracles CASE tools introducing the notation to a wider audience With this notation relationships cannot have attributes Where necessary relationships are promoted to entities in their own right for example if it is necessary to capture where and when an artist performed a song a new entity performance is introduced with attributes reflecting the time and place and the relationship of an artist to a song becomes an indirect relationship via the performance artistperformsperformance performancefeaturessong Three symbols are used to represent cardinality the ring represents zero the dash represents one the crows foot represents many or infinite These symbols are used in pairs to represent the four types of cardinality that an entity may have in a relationship The inner component of the notation represents the minimum and the outer component represents the maximum ring and dash minimum zero maximum one optional dash and dash minimum one maximum one mandatory ring and crows foot minimum zero maximum many optional dash and crows foot minimum one maximum many mandatory Model usability issues edit This section needs expansion with fan trap causes You can help by adding to it February 2018 In using a modeled database users can encounter two well known issues where the returned results mean something other than the results assumed by the query author The first is the fan trap It occurs with a master table that links to multiple tables in a onetomany relationship The issue derives its name from the way the model looks when its drawn in an entityrelationship diagram the linked tables fan out from the master table This type of model looks similar to a star schema a type of model used in data warehouses When trying to calculate sums over aggregates using standard SQL over the master table unexpected and incorrect results The solution is to either adjust the model or the SQL This issue occurs mostly in databases for decision support systems and software that queries such systems sometimes includes specific methods for handling this issue The second issue is a chasm trap A chasm trap occurs when a model suggests the existence of a relationship between entity types but the pathway does not exist between certain entity occurrences For example a Building has oneormore Rooms that hold zeroormore Computers One would expect to be able to query the model to see all the Computers in the Building However Computers not currently assigned to a Room because they are under repair or somewhere else are not shown on the list Another relation between Building and Computers is needed to capture all the computers in the building This last modelling issue is the result of a failure to capture all the relationships that exist in the real world in the model See EntityRelationship Modelling 2 for details Entityrelationships and semantic modeling edit Semantic model edit A semantic model is a model of concepts it is sometimes called a platform independent model It is an intensional model At the latest since Carnap it is well known that 13 the full meaning of a concept is constituted by two aspects its intension and its extension The first part comprises the embedding of a concept in the world of concepts as a whole ie the totality of all relations to other concepts The second part establishes the referential meaning of the concept ie its counterpart in the real or in a possible world Extension model edit An extensional model is one that maps to the elements of a particular methodology or technology and is thus a platform specific model The UML specification explicitly states that associations in class models are extensional and this is in fact selfevident by considering the extensive array of additional adornments provided by the specification over and above those provided by any of the prior candidate semantic modelling languages UML as a Data Modeling Notation Part 2 Entityrelationship origins edit Peter Chen the father of ER modeling said in his seminal paper The entityrelationship model adopts the more natural view that the real world consists of entities and relationships It incorporates some of the important semantic information about the real world 1 In his original 1976 article Chen explicitly contrasts entityrelationship diagrams with record modelling techniques The data structure diagram is a representation of the organization of records and is not an exact representation of entities and relationships Several other authors also support Chens program 14 15 16 17 18 Philosophical alignment edit Chen is in accord with philosophic and theoretical traditions from the time of the Ancient Greek philosophers Socrates Plato and Aristotle 428 BC through to modern epistemology semiotics and logic of Peirce Frege and Russell Plato himself associates knowledge with the apprehension of unchanging Forms The forms according to Socrates are roughly speaking archetypes or abstract representations of the many types of things and properties and their relationships to one another Limitations edit ER assume information content that can readily be represented in a relational database They describe only a relational structure for this information They are inadequate for systems in which the information cannot readily be represented in relational form citation needed such as with semistructured data For many systems possible changes to information contained are nontrivial and important enough to warrant explicit specification Some who authors have extended ER modeling with constructs to represent change an approach supported by the original author 19 an example is Anchor Modeling An alternative is to model change separately using a process modeling technique Additional techniques can be used for other aspects of systems For instance ER models roughly correspond to just 1 of the 14 different modeling techniques offered by UML Even where it is suitable in principle ER modeling is rarely used as a separate activity One reason for this is todays abundance of tools to support diagramming and other design support directly on relational database management systems These tools can readily extract database diagrams that are very close to ER diagrams from existing databases and they provide alternative views on the information contained in such diagrams In a survey Brodie and Liu 20 could not find a single instance of entityrelationship modeling inside a sample of ten Fortune 100 companies Badia and Lemire 21 blame this lack of use on the lack of guidance but also on the lack of benefits such as lack of support for data integration The enhanced entityrelationship model EER modeling introduces several concepts not in ER modeling but are closely related to objectoriented design like isa relationships For modelling temporal databases numerous ER extensions have been considered 22 Similarly the ER model was found unsuitable for multidimensional databases used in OLAP applications no dominant conceptual model has emerged in this field yet although they generally revolve around the concept of OLAP cube also known as data cube within the field 23 See also edit Associative entity Concept map Database design Data structure diagram Enhanced entityrelationship model Enterprise architecture framework Value range structure diagrams Comparison of data modeling tools Ontology Objectrole modeling Three schema approach StructuredEntityRelationshipModel Schemaagnostic Databases References edit a b Chen Peter March 1976 The EntityRelationship Model Toward a Unified View of Data ACM Transactions on Database Systems 1 1 936 CiteSeerX 10115236679 doi 101145320434320440 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em APG Brown Modelling a RealWorld System and Designing a Schema to Represent It in Douque and Nijssen eds Data Base Description NorthHolland 1975 ISBN 0720428335 Designing a Logical Database Supertypes and Subtypes BeynonDavies Paul 2004 Database Systems Basingstoke UK Palgrave Houndmills ISBN 9781403916013 Thomas Basboell Motion and society On meaningfulness of concepts Hubert Tardieu Arnold Rochfeld and René Colletti La methode MERISE Principes et outils Paperback 1983 Elmasri Ramez B Shamkant Navathe Fundamentals of Database Systems third ed AddisonWesley Menlo Park CA USA 2000 ER 2004 23rd International Conference on Conceptual Modeling Shanghai China November 812 2004 A Formal Treatment of UML Class Diagrams as an Efficient Method for Configuration Management 2007 James Dullea IlYeol Song Ioanna Lamprou An analysis of structural validity in entityrelationship modeling 2002 Hartmann Sven Reasoning about participation constraints and Chens constraints Archived 20130510 at the Wayback Machine Proceedings of the 14th Australasian database conferenceVolume 17 Australian Computer Society Inc 2003 G Everest BASIC DATA STRUCTURE MODELS EXPLAINED WITH A COMMON EXAMPLE in Computing Systems 1976 Proceedings Fifth Texas Conference on Computing Systems AustinTX 1976 October 1819 pages 3946 Long Beach CA IEEE Computer Society Publications Office httpwenkubaiducomview8048e7bb1a37f111f1855b22html Kent in Data and Reality One thing we ought to have clear in our minds at the outset of a modelling endeavour is whether we are intent on describing a portion of reality some human enterprise or a data processing activity Abrial in Data Semantics the so called logical definition and manipulation of data are still influenced sometimes unconsciously by the physical storage and retrieval mechanisms currently available on computer systems Stamper They pretend to describe entity types but the vocabulary is from data processing fields data items values Naming rules dont reflect the conventions we use for naming people and things they reflect instead techniques for locating records in files In Jacksons words The developer begins by creating a model of the reality with which the system is concerned the reality that furnishes its the systems subject matter Elmasri Navathe The ER model concepts are designed to be closer to the users perception of data and are not meant to describe the way in which data will be stored in the computer P Chen Suggested research directions for a new frontier Active conceptual modeling ER 2006 volume 4215 of Lecture Notes in Computer Science pages 14 Springer Berlin Heidelberg 2006 The power and limits of relational technology in the age of information ecosystems Archived 20160917 at the Wayback Machine On The Move Federated Conferences 2010 A Badia and D Lemire A call to arms revisiting database design Citeseerx Gregersen Heidi Jensen Christian S 1999 Temporal EntityRelationship modelsa survey IEEE Transactions on Knowledge and Data Engineering 11 3 464497 CiteSeerX 101112497 doi 10110969774104 RICCARDO TORLONE 2003 Conceptual Multidimensional Models PDF In Maurizio Rafanelli ed Multidimensional Databases Problems and Solutions Idea Group Inc IGI ISBN 9781591400530 Further reading edit Chen Peter 2002 EntityRelationship Modeling Historical Events Future Trends and Lessons Learned PDF Software pioneers SpringerVerlag pp296310 ISBN 9783540430810 Barker Richard 1990 CASE Method Entity Relationship Modelling AddisonWesley ISBN 9780201416961 Barker Richard 1990 CASE Method Tasks and Deliverables AddisonWesley ISBN 9780201416978 Mannila Heikki Räihä KariJouko 1992 The Design of Relational Databases AddisonWesley ISBN 9780201565232 Thalheim Bernhard 2000 EntityRelationship Modeling Foundations of Database Technology Springer ISBN 9783540654704 Bagui Sikha Earp Richard 2011 Database Design Using EntityRelationship Diagrams 2nd ed CRC Press ISBN 9781439861769 External links edit Wikimedia Commons has media related to Entityrelationship models The Entity Relationship Model Toward a Unified View of Data Entity Relationship Modelling Logical Data Structures LDSs Getting started by Tony Drewry Crows Foot Notation Kinds of Data Models and How to Name Them presentation by David Hay v t e Database models Common models Flat Hierarchical Dimensional Network Relational Entityrelationship Enhanced Graph Objectoriented Entityattributevalue Other models Associative Correlational Multidimensional Array Semantic Star schema XML database Implementations Flat file Columnoriented Documentoriented Objectrelational Deductive Temporal XML data store Keyvalue store Triplestore v t e Data model Main Architecture Modeling Structure Schemas Conceptual Logical Physical Types Database Data structure diagram Entityrelationship model enhanced Geographic Generic Semantic Related models Dataflow diagram Information model Object model Objectrole modeling Unified Modeling Language See also Database design Business process modeling Core architecture data model Enterprise modelling Function model Process modeling XML schema Data Format Description Language v t e Database Main Requirements Theory Models Database management system Machine Server Application Connection datasource DSN Administrator Lock Types Tools Languages Data definition Data manipulation Query information retrieval Security Activity monitoring Audit Forensics Negative database Design Entities and relationships and Enhanced notation Normalization Schema Refactoring Cardinality Programming Abstraction layer Objectrelational mapping Management Virtualization Tuning caching Migration Preservation Integrity See also Databasecentric architecture Intelligent database Twophase locking Locks with ordered sharing Load file Publishing Halloween Problem Log shipping Book Category WikiProject v t e Software engineering Fields Computer programming Requirements engineering Software deployment Software design Software maintenance Software testing Systems analysis Formal methods Concepts Data modeling Enterprise architecture Functional specification Modeling language Orthogonality Programming paradigm Software Software archaeology Software architecture Software configuration management Software development methodology Software development process Software quality Software quality assurance Software verification and validation Structured analysis Orientations Agile Aspectoriented Object orientation Ontology Service orientation SDLC Models Developmental Agile EUP Executable UML Incremental model Iterative model Prototype model RAD UP Scrum Spiral model VModel Waterfall model XP Other SPICE CMMI Data model ER model Function model Information model Metamodeling Object model Systems model View model Languages IDEF UML USL SysML Software engineers Victor Basili Kent Beck Grady Booch Fred Brooks Barry Boehm Peter Chen Danese Cooper Ward Cunningham Tom DeMarco Edsger W Dijkstra Delores M Etter Martin Fowler Adele Goldstine Margaret Hamilton C A R Hoare Lois Haibt Mary Jean Harrold Grace Hopper Watts Humphrey Michael A Jackson Ivar Jacobson Alan Kay Nancy Leveson Stephen J Mellor Bertrand Meyer David Parnas Trygve Reenskaug Winston W Royce James Rumbaugh Mary Shaw Peri Tarr Elaine Weyuker Niklaus Wirth Edward Yourdon Related fields Computer science Computer engineering Project management Risk management Systems engineering Category Commons Authority control BNF cb167494845 data GND 42305056 LCCN sh00009200 SUDOC 177006722