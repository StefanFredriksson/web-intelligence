Knowledge engineering This article is about methods for developing expert systems For application of knowledge based technology to the domain of manufacturing and CAD see Knowledge based engineering Knowledge engineering KE refers to all technical scientific and social aspects involved in building maintaining and using knowledgebased systems Contents 1 Background 11 Expert systems 2 History 3 See also 4 References 5 External links Background edit Expert systems edit One of the first examples of an expert system was MYCIN an application to perform medical diagnosis In the MYCIN example the domain experts were medical doctors and the knowledge represented was their expertise in diagnosis Expert systems were first developed in artificial intelligence laboratories as an attempt to understand complex human decision making Based on positive results from these initial prototypes the technology was adopted by the US business community and later worldwide in the 1980s The Stanford heuristic programming projects led by Edward Feigenbaum was one of the leaders in defining and developing the first expert systems History edit In the earliest days of expert systems there was little or no formal process for the creation of the software Researchers just sat down with domain experts and started programming often developing the required tools eg inference engines at the same time as the applications themselves As expert systems moved from academic prototypes to deployed business systems it was realized that a methodology was required to bring predictability and control to the process of building the software There were essentially two approaches that were attempted Use conventional software development methodologies Develop special methodologies tuned to the requirements of building expert systems Many of the early expert systems were developed by large consulting and system integration firms such as Andersen Consulting These firms already had well tested conventional waterfall methodologies eg Method1 for Andersen that they trained all their staff in and that were virtually always used to develop software for their clients One trend in early expert systems development was to simply apply these waterfall methods to expert systems development Another issue with using conventional methods to develop expert systems was that due to the unprecedented nature of expert systems they were one of the first applications to adopt rapid application development methods that feature iteration and prototyping as well as or instead of detailed analysis and design In the 1980s few conventional software methods supported this type of approach The final issue with using conventional methods to develop expert systems was the need for knowledge acquisition Knowledge acquisition refers to the process of gathering expert knowledge and capturing it in the form of rules and ontologies Knowledge acquisition has special requirements beyond the conventional specification process used to capture most business requirements These issues led to the second approach to knowledge engineering development of custom methodologies specifically designed to build expert systems 1 One of the first and most popular of such methodologies custom designed for expert systems was the Knowledge Acquisition and Documentation Structuring KADS methodology developed in Europe KADS had great success in Europe and was also used in the United States 2 See also edit Knowledge level modeling Knowledge management Knowledge representation Knowledge retrieval Knowledge tagging Method engineering References edit Feigenbaum Edward McCorduk Pamela 1983 The Fifth Generation 1st ed Reading MA AddisonWesley ISBN 9780201115192 OCLC 9324691 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput idlockfree amwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocklimited amwparseroutput idlockregistration amwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocksubscription amwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Schreiber August Th Akkermans Hans Anjewierden Anjo Dehoog Robert Shadbolt Nigel Vandevelde Walter Wielinga Bob 2000 Knowledge engineering and management the CommonKADS methodology 1st ed Cambridge MA The MIT Press ISBN 9780262193009 External links edit Data Knowledge Engineering Elsevier Journal Knowledge Engineering Review Cambridge Journal The International Journal of Software Engineering and Knowledge Engineering World Scientific IEEE Transactions on Knowledge and Data Engineering Expert Systems The Journal of Knowledge Engineering WileyBlackwell v t e Computable knowledge Topics and concepts Alphabet of human thought Authority control Automated reasoning Commonsense knowledge Commonsense reasoning Computability Formal system Inference engine Knowledge base Knowledgebased systems Knowledge engineering Knowledge extraction Knowledge representation Knowledge retrieval Library classification Logic programming Ontology Personal knowledge base Question answering Semantic reasoner Proposals and implementations Zairja Ars Magna 1300 An Essay towards a Real Character and a Philosophical Language 1688 Calculus ratiocinator and characteristica universalis 1700 Dewey Decimal Classification 1876 Begriffsschrift 1879 Mundaneum 1910 Logical atomism 1918 Tractatus LogicoPhilosophicus 1921 Hilberts program 1920s Incompleteness theorem 1931 World Brain 1938 Memex 1945 General Problem Solver 1959 Prolog 1972 Cyc 1984 Semantic Web 2001 Evi 2007 Wolfram Alpha 2009 Watson 2011 Siri 2011 Knowledge Graph 2012 Wikidata 2012 Cortana 2014 Viv 2016 In fiction The Engine Gullivers Travels 1726 Joe A Logic Named Joe 1946 The Librarian Snow Crash 1992 Dr Know AI Artificial Intelligence 2001 Waterhouse The Baroque Cycle 2003 See also Logic machines in fiction and List of fictional computers 