ChurchTuring thesis Thesis on the nature of computability Churchs thesis redirects here For the axiom CT in constructive mathematics see Churchs thesis constructive mathematics In computability theory the ChurchTuring thesis also known as computability thesis 1 the TuringChurch thesis 2 the ChurchTuring conjecture Churchs thesis Churchs conjecture and Turings thesis is a hypothesis about the nature of computable functions It states that a function on the natural numbers can be calculated by an effective method if and only if it is computable by a Turing machine The thesis is named after American mathematician Alonzo Church and the British mathematician Alan Turing Before the precise definition of computable function mathematicians often used the informal term effectively calculable to describe functions that are computable by paperandpencil methods In the 1930s several independent attempts were made to formalize the notion of computability In 1933 Kurt Gödel with Jacques Herbrand created a formal definition of a class called general recursive functions The class of general recursive functions is the smallest class of functions possibly with more than one argument which includes all constant functions projections the successor function and which is closed under function composition recursion and minimization In 1936 Alonzo Church created a method for defining functions called the λcalculus Within λcalculus he defined an encoding of the natural numbers called the Church numerals A function on the natural numbers is called λcomputable if the corresponding function on the Church numerals can be represented by a term of the λcalculus Also in 1936 before learning of Churchs work citation needed Alan Turing created a theoretical model for machines now called Turing machines that could carry out calculations from inputs by manipulating symbols on a tape Given a suitable encoding of the natural numbers as sequences of symbols a function on the natural numbers is called Turing computable if some Turing machine computes the corresponding function on encoded natural numbers Church 3 and Turing 4 6 proved that these three formally defined classes of computable functions coincide a function is λcomputable if and only if it is Turing computable and if and only if it is general recursive This has led mathematicians and computer scientists to believe that the concept of computability is accurately characterized by these three equivalent processes Other formal attempts to characterize computability have subsequently strengthened this belief see below On the other hand the ChurchTuring thesis states that the above three formallydefined classes of computable functions coincide with the informal notion of an effectively calculable function Since as an informal notion the concept of effective calculability does not have a formal definition the thesis although it has nearuniversal acceptance cannot be formally proven Since its inception variations on the original thesis have arisen including statements about what can physically be realized by a computer in our universe physical ChurchTuring thesis and what can be efficiently computed ChurchTuring thesis complexity theory These variations are not due to Church or Turing but arise from later work in complexity theory and digital physics The thesis also has implications for the philosophy of mind see below Contents 1 Statement in Churchs and Turings words 2 History 21 Circa 19301952 22 Later developments 23 The thesis as a definition 3 Success of the thesis 4 Informal usage in proofs 5 Variations 6 Philosophical implications 7 Noncomputable functions 8 See also 9 Footnotes 10 References 11 External links Statement in Churchs and Turings words edit See also Effective method J B Rosser 1939 addresses the notion of effective computability as follows Clearly the existence of CC and RC Churchs and Rossers proofs presupposes a precise definition of effective Effective method is here used in the rather special sense of a method each step of which is precisely predetermined and which is certain to produce the answer in a finite number of steps 7 Thus the adverbadjective effective is used in a sense of 1a producing a decided decisive or desired effect and capable of producing a result 8 9 In the following the words effectively calculable will mean produced by any intuitively effective means whatsoever and effectively computable will mean produced by a Turingmachine or equivalent mechanical device Turings definitions given in a footnote in his 1938 PhD thesis Systems of Logic Based on Ordinals supervised by Church are virtually the same We shall use the expression computable function to mean a function calculable by a machine and let effectively calculable refer to the intuitive idea without particular identification with any one of these definitions 10 The thesis can be stated as Every effectively calculable function is a computable function 11 Church also stated that No computational procedure will be considered as an algorithm unless it can be represented as a Turing Machine citation needed Turing stated it this way It was stated that a function is effectively calculable if its values can be found by some purely mechanical process We may take this literally understanding that by a purely mechanical process one which could be carried out by a machine The development leads to an identification of computability with effective calculability is the footnote quoted above 10 History edit Main article History of the ChurchTuring thesis One of the important problems for logicians in the 1930s was the Entscheidungsproblem of David Hilbert and Wilhelm Ackermann 12 which asked whether there was a mechanical procedure for separating mathematical truths from mathematical falsehoods This quest required that the notion of algorithm or effective calculability be pinned down at least well enough for the quest to begin 13 But from the very outset Alonzo Church s attempts began with a debate that continues to this day 14 Was clarify the notion of effective calculability to be i an axiom or axioms in an axiomatic system ii merely a definition that identified two or more propositions iii an empirical hypothesis to be verified by observation of natural events or iv just a proposal for the sake of argument ie a thesis Circa 19301952 edit In the course of studying the problem Church and his student Stephen Kleene introduced the notion of λdefinable functions and they were able to prove that several large classes of functions frequently encountered in number theory were λdefinable 15 The debate began when Church proposed to Gödel that one should define the effectively computable functions as the λdefinable functions Gödel however was not convinced and called the proposal thoroughly unsatisfactory 16 Rather in correspondence with Church c 193435 Gödel proposed axiomatizing the notion of effective calculability indeed in a 1935 letter to Kleene Church reported that mwparseroutput templatequoteoverflowhiddenmargin1em 0padding0 40pxmwparseroutput templatequote templatequotecitelineheight15emtextalignleftpaddingleft16emmargintop0 His Gödels only idea at the time was that it might be possible in terms of effective calculability as an undefined notion to state a set of axioms which would embody the generally accepted properties of this notion and to do something on that basis 17 But Gödel offered no further guidance Eventually he would suggest his recursion modified by Herbrands suggestion that Gödel had detailed in his 1934 lectures in Princeton NJ Kleene and Rosser transcribed the notes But he did not think that the two ideas could be satisfactorily identified except heuristically 18 Next it was necessary to identify and prove the equivalence of two notions of effective calculability Equipped with the λcalculus and general recursion Stephen Kleene with help of Church and J Barkley Rosser produced proofs 1933 1935 to show that the two calculi are equivalent Church subsequently modified his methods to include use of HerbrandGödel recursion and then proved 1936 that the Entscheidungsproblem is unsolvable there is no algorithm that can determine whether a well formed formula has a normal form clarify 19 Many years later in a letter to Davis c 1965 Gödel said that he was at the time of these 1934 lectures not at all convinced that his concept of recursion comprised all possible recursions 20 By 196364 Gödel would disavow HerbrandGödel recursion and the λcalculus in favor of the Turing machine as the definition of algorithm or mechanical procedure or formal system 21 A hypothesis leading to a natural law In late 1936 Alan Turing s paper also proving that the Entscheidungsproblem is unsolvable was delivered orally but had not yet appeared in print 22 On the other hand Emil Post s 1936 paper had appeared and was certified independent of Turings work 23 Post strongly disagreed with Churchs identification of effective computability with the λcalculus and recursion stating Actually the work already done by Church and others carries this identification considerably beyond the working hypothesis stage But to mask this identification under a definition blinds us to the need of its continual verification 24 Rather he regarded the notion of effective calculability as merely a working hypothesis that might lead by inductive reasoning to a natural law rather than by a definition or an axiom 25 This idea was sharply criticized by Church 26 Thus Post in his 1936 paper was also discounting Kurt Gödel s suggestion to Church in 193435 that the thesis might be expressed as an axiom or set of axioms 17 Turing adds another definition Rosser equates all three Within just a short time Turings 193637 paper On Computable Numbers with an Application to the Entscheidungsproblem 22 appeared In it he stated another notion of effective computability with the introduction of his amachines now known as the Turing machine abstract computational model And in a proofsketch added as an Appendix to his 193637 paper Turing showed that the classes of functions defined by λcalculus and Turing machines coincided 27 Church was quick to recognise how compelling Turings analysis was In his review of Turings paper he made clear that Turings notion made the identification with effectiveness in the ordinary not explicitly defined sense evident immediately 28 In a few years 1939 Turing would propose like Church and Kleene before him that his formal definition of mechanical computing agent was the correct one 29 Thus by 1939 both Church 1934 and Turing 1939 had individually proposed that their formal systems should be definitions of effective calculability 30 neither framed their statements as theses Rosser 1939 formally identified the three notionsasdefinitions All three definitions are equivalent so it does not matter which one is used 31 Kleene proposes Churchs Thesis This left the overt expression of a thesis to Kleene In his 1943 paper Recursive Predicates and Quantifiers Kleene proposed his THESIS I This heuristic fact general recursive functions are effectively calculable led Church to state the following thesis 22 The same thesis is implicit in Turings description of computing machines 23 THESIS I Every effectively calculable function effectively decidable predicate is general 32 recursive Kleenes italics Since a precise mathematical definition of the term effectively calculable effectively decidable has been wanting we can take this thesis as a definition of it 33 22 references Church 1936 not specific enough to verify 23 references Turing 19367Kleene goes on to note that the thesis has the character of an hypothesisa point emphasized by Post and by Church 24 If we consider the thesis and its converse as definition then the hypothesis is an hypothesis about the application of the mathematical theory developed from the definition For the acceptance of the hypothesis there are as we have suggested quite compelling grounds 33 24 references Post 1936 of Post and Churchs Formal definitions in the theory of ordinal numbers Fund Math vol 28 1936 pp1121 see ref 2 Davis 1965 286 Kleenes ChurchTuring Thesis A few years later 1952 Kleene who switched from presenting his work in the mathematical terminology of the lambda calculus of his phd advisor Alonzo Church to the theory of general recursive functions of his other teacher Kurt Gödel would overtly name the ChurchTuring thesis in his correction of Turings paper The Word Problem in SemiGroups with Cancellation 34 defend and express the two theses and then identify them show equivalence by use of his Theorem XXX Heuristic evidence and other considerations led Church 1936 to propose the following thesis Thesis I Every effectively calculable function effectively decidable predicate is general recursive 35 Theorem XXX The following classes of partial functions are coextensive ie have the same members a the partial recursive functions b the computable functions 36 Turings thesis Turings thesis that every function which would naturally be regarded as computable is computable under his definition ie by one of his machines is equivalent to Churchs thesis by Theorem XXX 36 Later developments edit An attempt to understand the notion of effective computability better led Robin Gandy Turings student and friend in 1980 to analyze machine computation as opposed to humancomputation acted out by a Turing machine Gandys curiosity about and analysis of cellular automata including Conways game of life parallelism and crystalline automata led him to propose four principles or constraints which it is argued any machine must satisfy 37 His mostimportant fourth the principle of causality is based on the finite velocity of propagation of effects and signals contemporary physics rejects the possibility of instantaneous action at a distance 38 From these principles and some additional constraints1a a lower bound on the linear dimensions of any of the parts 1b an upper bound on speed of propagation the velocity of light 2 discrete progress of the machine and 3 deterministic behaviorhe produces a theorem that What can be calculated by a device satisfying principles IIV is computable 39 In the late 1990s Wilfried Sieg analyzed Turings and Gandys notions of effective calculability with the intent of sharpening the informal notion formulating its general features axiomatically and investigating the axiomatic framework 40 In his 1997 and 2002 work Sieg presents a series of constraints on the behavior of a computor a human computing agent who proceeds mechanically These constraints reduce to B1 Boundedness There is a fixed bound on the number of symbolic configurations a computor can immediately recognize B2 Boundedness There is a fixed bound on the number of internal states a computor can be in L1 Locality A computor can change only elements of an observed symbolic configuration L2 Locality A computor can shift attention from one symbolic configuration to another one but the new observed configurations must be within a bounded distance of the immediately previously observed configuration D Determinacy The immediately recognizable subconfiguration determines uniquely the next computation step and id instantaneous description stated another way A computors internal state together with the observed configuration fixes uniquely the next computation step and the next internal state 41 The matter remains in active discussion within the academic community 42 43 The thesis as a definition edit The thesis can be viewed as nothing but an ordinary mathematical definition Comments by Gödel on the subject suggest this view eg the correct definition of mechanical computability was established beyond any doubt by Turing 44 The case for viewing the thesis as nothing more than a definition is made explicitly by Robert I Soare 45 where it is also argued that Turings definition of computability is no less likely to be correct than the epsilondelta definition of a continuous function Success of the thesis edit Other formalisms besides recursion the λcalculus and the Turing machine have been proposed for describing effective calculabilitycomputability Stephen Kleene 1952 adds to the list the functions reckonable in the system S 1 of Kurt Gödel 1936 and Emil Post s 1943 1946 canonical also called normal systems 46 In the 1950s Hao Wang and Martin Davis greatly simplified the onetape Turingmachine model see PostTuring machine Marvin Minsky expanded the model to two or more tapes and greatly simplified the tapes into updown counters which Melzak and Lambek further evolved into what is now known as the counter machine model In the late 1960s and early 1970s researchers expanded the counter machine model into the register machine a close cousin to the modern notion of the computer Other models include combinatory logic and Markov algorithms Gurevich adds the pointer machine model of Kolmogorov and Uspensky 1953 1958 they just wanted to convince themselves that there is no way to extend the notion of computable function 47 All these contributions involve proofs that the models are computationally equivalent to the Turing machine such models are said to be Turing complete Because all these different attempts at formalizing the concept of effective calculabilitycomputability have yielded equivalent results it is now generally assumed that the ChurchTuring thesis is correct In fact Gödel 1936 proposed something stronger than this he observed that there was something absolute about the concept of reckonable in S 1 It may also be shown that a function which is computable reckonable in one of the systems S i or even in a system of transfinite type is already computable reckonable in S 1 Thus the concept computable reckonable is in a certain definite sense absolute while practically all other familiar metamathematical concepts eg provable definable etc depend quite essentially on the system to which they are defined 48 Informal usage in proofs edit Proofs in computability theory often invoke the ChurchTuring thesis in an informal way to establish the computability of functions while avoiding the often very long details which would be involved in a rigorous formal proof 49 To establish that a function is computable by Turing machine it is usually considered sufficient to give an informal English description of how the function can be effectively computed and then conclude by the ChurchTuring thesis that the function is Turing computable equivalently partial recursive Dirk van Dalen gives the following example for the sake of illustrating this informal use of the ChurchTuring thesis 50 EXAMPLE Each infinite RE set contains an infinite recursive set Proof Let A be infinite RE We list the elements of A effectively n 0 n 1 n 2 n 3 From this list we extract an increasing sublist put m 0 n 0 after finitely many steps we find an n k such that n k m 0 put m 1 n k We repeat this procedure to find m 2 m 1 etc this yields an effective listing of the subset Bm 0 m 1 m 2 of A with the property m i m i1 Claim B is decidable For in order to test k in B we must check if km i for some i Since the sequence of m i s is increasing we have to produce at most k1 elements of the list and compare them with k If none of them is equal to k then k not in B Since this test is effective B is decidable and by Churchs thesis recursive In order to make the above example completely rigorous one would have to carefully construct a Turing machine or λfunction or carefully invoke recursion axioms or at best cleverly invoke various theorems of computability theory But because the computability theorist believes that Turing computability correctly captures what can be computed effectively and because an effective procedure is spelled out in English for deciding the set B the computability theorist accepts this as proof that the set is indeed recursive Variations edit The success of the ChurchTuring thesis prompted variations of the thesis to be proposed For example the physical ChurchTuring thesis states All physically computable functions are Turingcomputable 51 101 The ChurchTuring thesis says nothing about the efficiency with which one model of computation can simulate another It has been proved for instance that a multitape universal Turing machine only suffers a logarithmic slowdown factor in simulating any Turing machine 52 A variation of the ChurchTuring thesis addresses whether an arbitrary but reasonable model of computation can be efficiently simulated This is called the feasibility thesis 53 also known as the classical complexitytheoretic ChurchTuring thesis or the extended ChurchTuring thesis which is not due to Church or Turing but rather was realized gradually in the development of complexity theory It states 54 A probabilistic Turing machine can efficiently simulate any realistic model of computation The word efficiently here means up to polynomialtime reductions This thesis was originally called computational complexitytheoretic ChurchTuring thesis by Ethan Bernstein and Umesh Vazirani 1997 The complexitytheoretic ChurchTuring thesis then posits that all reasonable models of computation yield the same class of problems that can be computed in polynomial time Assuming the conjecture that probabilistic polynomial time BPP equals deterministic polynomial time P the word probabilistic is optional in the complexitytheoretic ChurchTuring thesis A similar thesis called the invariance thesis was introduced by Cees F Slot and Peter van Emde Boas It states Reasonable machines can simulate each other within a polynomially bounded overhead in time and a constantfactor overhead in space 55 The thesis originally appeared in a paper at STOC 84 which was the first paper to show that polynomialtime overhead and constantspace overhead could be simultaneously achieved for a simulation of a Random Access Machine on a Turing machine 56 If BQP is shown to be a strict superset of BPP it would invalidate the complexitytheoretic ChurchTuring thesis In other words there would be efficient quantum algorithms that perform tasks that do not have efficient probabilistic algorithms This would not however invalidate the original ChurchTuring thesis since a quantum computer can always be simulated by a Turing machine but it would invalidate the classical complexitytheoretic ChurchTuring thesis for efficiency reasons Consequently the quantum complexitytheoretic ChurchTuring thesis states 54 A quantum Turing machine can efficiently simulate any realistic model of computation Eugene Eberbach and Peter Wegner claim that the ChurchTuring thesis is sometimes interpreted too broadlystating the broader assertion that algorithms precisely capture what can be computed is invalid 57 pageneeded They claim that forms of computation not captured by the thesis are relevant todayterms which they call superTuring computation Philosophical implications edit Philosophers have interpreted the ChurchTuring thesis as having implications for the philosophy of mind 58 59 B Jack Copeland states that it is an open empirical question whether there are actual deterministic physical processes that in the long run elude simulation by a Turing machine furthermore he states that it is an open empirical question whether any such processes are involved in the working of the human brain 60 There are also some important open questions which cover the relationship between the ChurchTuring thesis and physics and the possibility of hypercomputation When applied to physics the thesis has several possible meanings The universe is equivalent to a Turing machine thus computing nonrecursive functions is physically impossible This has been termed the strong ChurchTuring thesis or ChurchTuringDeutsch principle and is a foundation of digital physics The universe is not equivalent to a Turing machine ie the laws of physics are not Turingcomputable but incomputable physical events are not harnessable for the construction of a hypercomputer For example a universe in which physics involves random real numbers as opposed to computable reals would fall into this category The universe is a hypercomputer and it is possible to build physical devices to harness this property and calculate nonrecursive functions For example it is an open question whether all quantum mechanical events are Turingcomputable although it is known that rigorous models such as quantum Turing machines are equivalent to deterministic Turing machines They are not necessarily efficiently equivalent see above John Lucas and Roger Penrose have suggested that the human mind might be the result of some kind of quantummechanically enhanced nonalgorithmic computation 61 62 There are many other technical possibilities which fall outside or between these three categories but these serve to illustrate the range of the concept Philosophical aspects of the thesis regarding both physical and biological computers are also discussed in Odifreddis 1989 textbook on recursion theory 63 101123 Noncomputable functions edit This section relies largely or entirely upon a single source Relevant discussion may be found on the talk page Please help improve this article by introducing citations to additional sources Find sources ChurchTuring thesis news newspapers books scholar JSTOR November 2017 Learn how and when to remove this template message One can formally define functions that are not computable A wellknown example of such a function is the Busy Beaver function This function takes an input n and returns the largest number of symbols that a Turing machine with n states can print before halting when run with no input Finding an upper bound on the busy beaver function is equivalent to solving the halting problem a problem known to be unsolvable by Turing machines Since the busy beaver function cannot be computed by Turing machines the ChurchTuring thesis states that this function cannot be effectively computed by any method Several computational models allow for the computation of ChurchTuring noncomputable functions These are known as hypercomputers Mark Burgin argues that superrecursive algorithms such as inductive Turing machines disprove the ChurchTuring thesis 64 pageneeded His argument relies on a definition of algorithm broader than the ordinary one so that noncomputable functions obtained from some inductive Turing machines are called computable This interpretation of the ChurchTuring thesis differs from the interpretation commonly accepted in computability theory discussed above The argument that superrecursive algorithms are indeed algorithms in the sense of the ChurchTuring thesis has not found broad acceptance within the computability research community See also edit Abstract machine Churchs thesis in constructive mathematics ChurchTuringDeutsch principle which states that every physical process can be simulated by a universal computing device Computability logic Computability theory Decidability Hypercomputation Model of computation Oracle computer science Superrecursive algorithm Turing completeness Footnotes edit Robert Soare Turing Oracle Machines Online Computing and Three Displacements in Computability Theory Rabin Michael O June 2012 Turing Church Gödel Computability Complexity and Randomization A Personal View mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput idlockfree amwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocklimited amwparseroutput idlockregistration amwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocksubscription amwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Church 1936 Turing 1937a Kleene 1936 Turing 1937b Proof outline on p153 λ definable displaystyle lambda mboxdefinable t r i v displaystyle stackrel trivimplies λ K definable displaystyle lambda mboxKmboxdefinable 160 displaystyle stackrel 160implies Turing computable displaystyle mboxTuring computable 161 displaystyle stackrel 161implies μ recursive displaystyle mu mboxrecursive K l e e n e displaystyle stackrel Kleeneimplies 5 λ definable displaystyle lambda mboxdefinable Rosser 1939 in Davis 1965 225 effective Merriam Websters New Collegiate Dictionary 9th ed See also effective MerriamWebsters Online Dictionary 11th ed Retrieved July 26 2014 which also gives these definitions for effective the first producing a decided decisive or desired effect as the definition for sense 1a of the word effective and the second capable of producing a result as part of the Synonym Discussion of EFFECTIVE there in the introductory part where it summarizes the similarities between the meanings of the words effective effectual efficient and efficacious a b Turing AM 1938 Systems of Logic Based on Ordinals PDF PhD Princeton University p8 Gandy 1980 123 states it this way What is effectively calculable is computable He calls this Churchs Thesis David Hilbert and Wilhelm Ackermann Grundzüge der theoretischen Logik Berlin Germany Springer 1st ed 1928 6th ed 1972 ISBN 3540058435 English Translation David Hilbert and Wilhelm Ackermann Principles of Mathematical Logic AMS Chelsea Publishing Providence Rhode Island USA 1950 Daviss commentary before Church 1936 An Unsolvable Problem of Elementary Number Theory in Davis 196588 Church uses the words effective calculability on page 100ff In his review of Churchs Thesis after 70 Years edited by Adam Olszewski et al 2006 Peter Smiths criticism of a paper by Muraswski and Wolenski suggests 4 lines re the status of the ChurchTuring Thesis 1 empirical hypothesis 2 axiom or theorem 3 definition 4 explication But Smith opines that 4 is indistinguishable from 3 cf Smith July 11 2007 Churchs Thesis after 70 Years at httpwwwlogicmattersnetresourcespdfsCTTpdf cf footnote 3 in Church 1936a An Unsolvable Problem of Elementary Number Theory in Davis 1965 89 Dawson 199799 full citation needed a b Sieg 1997160 Sieg 1997160 quoting from the 1935 letter written by Church to Kleene cf Footnote 3 in Gödel 1934 in Davis 1965 44 cf Church 1936 in Davis 1965 105ff Daviss commentary before Gödel 1934 in Davis 1965 40 For a detailed discussion of Gödels adoption of Turings machines as models of computation see Shagrir Goedel on Turing on Computability PDF Archived from the original PDF on 20151217 Retrieved 20160208 datemissing a b Turing 1937 cf Editors footnote to Post 1936 Finite Combinatory Process Formulation I at Davis 1965 289 Post 1936 in Davis 1965 291 footnote 8 Post 1936 in Davis 1952291 Sieg 1997171 and 176177 Turing 193637 in Davis 1965 263ff Church 1937 Turing 1939 in Davis160 cf Church 1934 in Davis 1965 100 also Turing 1939 in Davis 1965 160 italics added Rosser 1939 in Davis 1965 226 An archaic usage of Kleene et al to distinguish Gödels 1931 rekursiv a few years later named primitive recursion by Rózsa Péter cf Gandy 1994 68 from HerbrandGödels recursion of 1934 ie primitive recursion equipped with the additional mu operator nowadays murecursion is called simply recursion a b Kleene 1943 in Davis 1965 274 Kleene 1952 382536 Kleene 1952 300 a b Kleene 1952 376 Gandy 1980 123ff Gandy 1980 135 Gandy 1980 126 Sieg 19989 in Sieg Somner Talcott 2002 390ff also Sieg 1997154ff In a footnote Sieg breaks Posts 1936 B into B1 and B2 and L into L1 and L2 and describes D differently With respect to his proposed Gandy machine he later adds LC1 LC2 GA1 and GA2 These are complicated see Sieg 199899 in Sieg Somner Talcott 2002 390ff A collection of papers can be found in Olszewski Woleński Janusz 2006 Also a review of this collection Smith Peter July 11 2007 Churchs Thesis after 70 Years PDF See also Hodges Andrew 2005 Did Church and Turing Have a Thesis about Machines PDF Archived from the original PDF on March 4 2016 Retrieved July 27 2014 Gödel Kurt 1995 193 Undecidable Diophantine Propositions In Feferman Solomon ed Collected Works 3 New York Oxford University Press p 168 ISBN 9780195072556 OCLC 928791907 via Google Books Soare Robert I September 1996 Computability and Recursion Bulletin of Symbolic Logic 2 3 284321 CiteSeerX 1011355803 doi 102307420992 JSTOR 420992 Kleene 1952320 Gurevich 19882 translation of Gödel 1936 by Davis in The Undecidable p 83 differing in the use of the word reckonable in the translation in Kleene 1952 p 321 Horsten in Olszewski 2006 256 Gabbay 2001 284 Piccinini Gualtiero January 2007 Computationalism the ChurchTuring Thesis and the ChurchTuring Fallacy PDF Synthese 154 1 97120 CiteSeerX 10113609796 doi 101007s112290050194z Arora Sanjeev Barak Boaz 2009 Complexity Theory A Modern Approach Cambridge University Press ISBN 9780521424264 Sections 14 Machines as strings and the universal Turing machine and 17 Proof of theorem 19 Official Problem Description PDF Archived from the original PDF on November 24 2005 a b Kaye Phillip Laflamme Raymond Mosca Michele 2007 An introduction to quantum computing Oxford University Press pp56 ISBN 9780198570493 van Emde Boas Peter 1990 Machine Models and Simulations Handbook of Theoretical Computer Science A Elsevier p5 Slot C van Emde Boas P December 1984 On tape versus core an application of space efficient perfect hash functions to the invariance of space STOC Eberbach Wegner 2003 Copeland B Jack November 10 2017 The ChurchTuring Thesis In Zalta Edward N ed Stanford Encyclopedia of Philosophy For a good place to encounter original papers see Chalmers David J ed 2002 Philosophy of Mind Classical and Contemporary Readings New York Oxford University Press ISBN 9780195145816 OCLC 610918145 Copeland B Jack 2004 Computation In Floridi Luciano ed The Blackwell guide to the philosophy of computing and information WileyBlackwell p15 ISBN 9780631229193 cf Penrose Roger 1990 Algorithms and Turing machines The Emperors New Mind Concerning Computers Minds and the Laws of Physics Oxford Oxford University Press pp4749 ISBN 9780198519737 OCLC 456785846 Also the description of the nonalgorithmic nature of mathematical insight Penrose Roger 1990 Where lies the physics of mind The Emperors New Mind Concerning Computers Minds and the Laws of Physics Oxford Oxford University Press pp416418 ISBN 9780198519737 OCLC 456785846 Piergiorgio Odifreddi 1989 Classical Recursion Theory Studies in Logic and the Foundations of Mathematics 125 Amsterdam North Holland Burgin Mark 2005 SuperRecursive Algorithms Monographs in Computer Science New York Springer ISBN 9780387955698 OCLC 990755791 References edit mwparseroutput refbeginfontsize90marginbottom05emmwparseroutput refbeginhangingindentsgtulliststyletypenonemarginleft0mwparseroutput refbeginhangingindentsgtulgtlimwparseroutput refbeginhangingindentsgtdlgtddmarginleft0paddingleft32emtextindent32emliststylenonemwparseroutput refbegin100fontsize100 Barwise Jon Keisler HJ Kunen Kenneth eds 1980 The Kleene Symposium Amsterdam NorthHolland Publishing Company ISBN 9780444853455 BenAmram AM 2005 The ChurchTuring Thesis and its LookAlikes PS SIGACT News 36 3 113116 CiteSeerX 1011747308 doi 10114510866491086651 Bernstein E Vazirani U 1997 Quantum complexity theory SIAM Journal on Computing 26 5 14111473 CiteSeerX 10116551186 doi 101137S0097539796300921 Blass Andreas Gurevich Yuri October 2003 Algorithms A Quest for Absolute Definitions PDF Bulletin of European Association for Theoretical Computer Science 81 pageneeded Burgin Mark 2005 Superrecursive algorithms Monographs in computer science Springer ISBN 9780387955698 Church Alonzo 1932 A set of Postulates for the Foundation of Logic Annals of Mathematics 33 2 346366 doi 1023071968337 JSTOR 1968337 Church Alonzo April 1936a An Unsolvable Problem of Elementary Number Theory American Journal of Mathematics 58 2 345363 doi 1023072371045 JSTOR 2371045 Church Alonzo June 1936b A Note on the Entscheidungsproblem Journal of Symbolic Logic 1 1 4041 doi 1023072269326 JSTOR 2269326 Church Alonzo March 1937 Review A M Turing On Computable Numbers with an Application to the Entscheidungsproblem Journal of Symbolic Logic 2 1 4243 doi 1023072268810 JSTOR 2268810 Church Alonzo 1941 The Calculi of LambdaConversion Princeton Princeton University Press Cooper S B Odifreddi P 2003 Incomputability in Nature In S B Cooper S S Goncharov eds Computability and Models Perspectives East and West Kluwer AcademicPlenum Publishers pp137160 Davis Martin ed 1965 The Undecidable Basic Papers on Undecidable Propositions Unsolvable Problems And Computable Functions New York Raven Press Includes original papers by Gödel Church Turing Rosser Kleene and Post mentioned in this section Eberbach E Wegner P October 2003 Beyond Turing Machines Bulletin of the European Association for Theoretical Computer Science 81 279304 Gabbay DM 2001 Handbook of Philosophical Logic 1 2nd ed Gandy Robin 1980 Churchs Thesis and the Principles for Mechanisms In HJ Barwise HJ Keisler K Kunen eds The Kleene Symposium NorthHolland Publishing Company pp123148 Gandy Robin 1994 Herken Rolf ed The universal Turing Machine A HalfCentury Survey New York Wien SpringerVerlag pp51ff ISBN 9783211826379 Gödel Kurt 1965 1934 On Undecidable Propositions of Formal Mathematical Systems In Davis Martin ed The Undecidable Kleene and Rosser lecture notetakers Institute for Advanced Study lecture sponsor New York Raven Press Gödel Kurt 1936 Über die Lāange von Beweisen On The Length of Proofs Ergenbnisse Eines Mathematishen Kolloquiums in German Heft 7 2324 Cited by Kleene 1952 Gurevich Yuri June 1988 On Kolmogorov Machines and Related Issues Bulletin of European Association for Theoretical Computer Science 35 7182 Gurevich Yuri July 2000 Sequential Abstract State Machines Capture Sequential Algorithms PDF ACM Transactions on Computational Logic 1 1 77111 CiteSeerX 10111463017 doi 101145343369343384 Herbrand Jacques 1932 Sur la noncontradiction de larithmétique Journal für die Reine und Angewandte Mathematik in French 166 18 Hofstadter Douglas R Chapter XVII Church Turing Tarski and Others Gödel Escher Bach an Eternal Golden Braid pagesneeded Kleene Stephen Cole January 1935 A Theory of Positive Integers in Formal Logic American Journal of Mathematics 57 1 153173 219244 doi 1023072372027 JSTOR 2372027 Kleene Stephen Cole 1936 LambdaDefinability and Recursiveness Duke Mathematical Journal 2 2 340353 doi 101215s0012709436002272 Kleene Stephen Cole 1943 Recursive Predicates and Quantifiers American Mathematical Society Transactions 54 1 4173 doi 1023071990131 JSTOR 1990131 Reprinted in The Undecidable p255ff Kleene refined his definition of general recursion and proceeded in his chapter 12 Algorithmic theories to posit Thesis I p274 he would later repeat this thesis in Kleene 1952 300 and name it Churchs Thesis Kleene 1952 317 ie the Church thesis Kleene Stephen Cole 1952 Introduction to Metamathematics NorthHolland OCLC 523942 Knuth Donald 1973 The Art of Computer Programming 1Fundamental Algorithms 2nd ed AddisonWesley Kugel Peter November 2005 Its time to think outside the computational box Communications of the ACM 48 11 3237 CiteSeerX 10111376939 doi 10114510960001096001 Lewis HR Papadimitriou CH 1998 Elements of the Theory of Computation Upper Saddle River NJ USA PrenticeHall Manna Zohar 2003 1974 Mathematical Theory of Computation Dover ISBN 9780486432380 Markov AA 1960 1954 The Theory of Algorithms American Mathematical Society Translations 2 15 114 Olszewski Adam Woleński Jan Janusz Robert eds 2006 Churchs Thesis After 70 Years Frankfurt Ontos ISBN 9783938793091 OCLC 909679288 PourEl MB Richards JI 1989 Computability in Analysis and Physics Springer Verlag Rosser J B 1939 An Informal Exposition of Proofs of Godels Theorem and Churchs Theorem The Journal of Symbolic Logic 4 2 5360 doi 1023072269059 JSTOR 2269059 Sieg Wilfried Sommer Richard Talcott Carolyn eds 2002 Reflections on the Foundations of Mathematics Essays in Honor of Solomon Feferman Lecture Notes in Logic 15 A K Peters Ltd ISBN 9781568811697 Syropoulos Apostolos 2008 Hypercomputation Computing Beyond the ChurchTuring Barrier Springer ISBN 9780387308869 Turing A M 1937 Delivered to the Society November 1936 On Computable Numbers with an Application to the Entscheidungsproblem PDF Proceedings of the London Mathematical Society 2 42 pp23065 doi 101112plmss2421230 and Turing AM 1938 On Computable Numbers with an Application to the Entscheidungsproblem A correction Proceedings of the London Mathematical Society 2 43 published 1937 pp5446 doi 101112plmss2436544 See also Davis 1965 115ff Alan Mathison Turing Dec 1937 Computability and λDefinability Journal of Symbolic Logic 2 4 153163 doi 1023072268280 JSTOR 2268280 External links edit The ChurchTuring Thesis entry by B Jack Copeland in the Stanford Encyclopedia of Philosophy Computation in Physical Systems entry by Gualtiero Piccinini in the Stanford Encyclopedia of Philosophy a comprehensive philosophical treatment of relevant issues Kaznatcheev Artem September 11 2014 Transcendental idealism and Posts variant of the ChurchTuring thesis Journal of Symbolic Logic 1 3 103105 A special issue Vol28 No4 1987 of the Notre Dame Journal of Formal Logic was devoted to the ChurchTuring thesis v t e Mathematical logic General Formal language Formation rule Formal proof Formal semantics Wellformed formula Set Element Class Classical logic Axiom Rule of inference Relation Theorem Logical consequence Type theory Symbol Syntax Theory Systems Formal system Deductive system Axiomatic system Hilbert style systems Natural deduction Sequent calculus Traditional logic Proposition Inference Argument Validity Cogency Syllogism Square of opposition Venn diagram Propositional calculus and Boolean logic Boolean functions Propositional calculus Propositional formula Logical connectives Truth tables Manyvalued logic Predicate logic Firstorder Quantifiers Predicate Secondorder Monadic predicate calculus Naive set theory Set Empty set Element Enumeration Extensionality Finite set Infinite set Subset Power set Countable set Uncountable set Recursive set Domain Codomain Image Map Function Relation Ordered pair Set theory Foundations of mathematics ZermeloFraenkel set theory Axiom of choice General set theory KripkePlatek set theory Von NeumannBernaysGödel set theory MorseKelley set theory TarskiGrothendieck set theory Model theory Model Interpretation Nonstandard model Finite model theory Truth value Validity Proof theory Formal proof Deductive system Formal system Theorem Logical consequence Rule of inference Syntax Computability theory Recursion Recursive set Recursively enumerable set Decision problem ChurchTuring thesis Computable function Primitive recursive function v t e Metalogic Metamathematics Cantors theorem Entscheidungsproblem ChurchTuring thesis Consistency Effective method Foundations of mathematics of geometry Gödels completeness theorem Gödels incompleteness theorems Soundness Completeness Decidability Interpretation LöwenheimSkolem theorem Metatheorem Satisfiability Independence Typetoken distinction Usemention distinction 