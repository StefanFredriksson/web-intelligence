Build automation Software development Core activities Processes Requirements Design Engineering Construction Testing Debugging Deployment Maintenance Paradigms and models Agile Cleanroom Incremental Prototyping Spiral V model Waterfall Methodologies and frameworks ASD DevOps DAD DSDM FDD IID Kanban Lean SD LeSS MDD MSF PSP RAD RUP SAFe Scrum SEMAT TSP OpenUP UP XP Supporting disciplines Configuration management Documentation Software quality assurance SQA Project management User experience Practices ATDD BDD CCO CI CD DDD PP SBE Standup TDD Tools Compiler Debugger Profiler GUI designer Modeling IDE Build automation Release automation Infrastructure as code Testing Standards and Bodies of Knowledge BABOK CMMI IEEE standards ISO 9001 ISOIEC standards PMBOK SWEBOK ITIL Glossaries Artificial intelligence Computer science Electrical and electronics engineering v t e Build automation is the process of automating the creation of a software build and the associated processes including compiling computer source code into binary code packaging binary code and running automated tests Contents 1 Overview 2 Buildautomation utilities 3 Buildautomation servers 4 Distributed build automation 5 Relationship to Continuous Delivery and Continuous Integration 6 Advantages 7 See also 8 References Overview edit Historically build automation was accomplished through makefiles Today there are two general categories of tools 1 Buildautomation utility This includes utilities like Make Rake Cake MSBuild Ant Maven or Gradle Java etc Their primary purpose is to generate build artifacts through activities like compiling and linking source code Buildautomation servers These are general web based tools that execute buildautomation utilities on a scheduled or triggered basis a continuous integration server is a type of buildautomation server Depending on the level of automation the following classification is possible Makefile level Makebased tools NonMakebased tools Build script or Makefile generation tools Continuousintegration tools Configurationmanagement tools Metabuild tools or package managers Other A software list for each can be found in list of build automation software Buildautomation utilities edit Buildautomation utilities allow the automation of simple repeatable tasks When using the tool it will calculate how to reach the goal by executing tasks in the correct specific order and running each task The two ways build tools differ are taskoriented vs productoriented Taskoriented tools describe the dependency of networks in terms of a specific set task and productoriented tools describe things in terms of the products they generate 2 Buildautomation servers edit Although build servers existed long before continuousintegration servers they are generally synonymous with continuousintegration servers however a build server may also be incorporated into an ARA tool or ALM tool Server types Ondemand automation such as a user running a script at the command line Scheduled automation such as a continuous integration server running a nightly build Triggered automation such as a continuous integration server running a build on every commit to a versioncontrol system Distributed build automation edit Automation is achieved through the use of a compile farm for either distributed compilation or the execution of the utility step 3 The distributed build process must have machine intelligence to understand the sourcecode dependencies to execute the distributed build Relationship to Continuous Delivery and Continuous Integration edit Build automation is considered the first step in moving toward implementing a culture of Continuous Delivery and DevOps Build automation combined with Continuous Integration deployment applicationrelease automation and many other processes help move an organization forward in establishing softwaredelivery best practices 4 how Advantages edit The advantages of build automation to software development projects include A necessary precondition for continuous integration and continuous testing Improve product quality Accelerate the compile and link processing Eliminate redundant tasks Minimize bad builds Eliminate dependencies on key personnel Have history of builds and releases in order to investigate issues Save time and money because of the reasons listed above 5 See also edit Applicationrelease automation ARA Continuous configuration automation CCA Continuous integration CI Continuous delivery CD Continuous testing DevOps List of build automation software Product family engineering Release engineering RE Software configuration management SCM Unit testing References edit Ceruzzi Paul E 2003 A history of Modern computing The MIT Press ISBN 9780262532037 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Clark Mike 2004 Pragmatic Project Automation How to Build Deploy and Monitor Java Apps The Pragmatic Programmers ISBN 9780974514031 Enos Joe 2013 Automated Builds The Key to Consistency InfoQ C4Media Inc Retrieved September 16 2015 Bashan Shmuel Bellagio David E 2011 Work Item Management with IBM Rational ClearQuest and Jazz A customization Guide IBM Press ISBN 9780137001798 Archived copy PDF Archived from the original PDF on 20081123 Retrieved 20080919 CS1 maint archived copy as title link