Automated reasoning Automated reasoning is an area of cognitive science involves knowledge representation and reasoning and metalogic dedicated to understanding different aspects of reasoning The study of automated reasoning helps produce computer programs that allow computers to reason completely or nearly completely automatically Although automated reasoning is considered a subfield of artificial intelligence it also has connections with theoretical computer science and even philosophy The most developed subareas of automated reasoning are automated theorem proving and the less automated but more pragmatic subfield of interactive theorem proving and automated proof checking viewed as guaranteed correct reasoning under fixed assumptions citation needed Extensive work has also been done in reasoning by analogy using induction and abduction 1 Other important topics include reasoning under uncertainty and nonmonotonic reasoning An important part of the uncertainty field is that of argumentation where further constraints of minimality and consistency are applied on top of the more standard automated deduction John Pollocks OSCAR system 2 is an example of an automated argumentation system that is more specific than being just an automated theorem prover Tools and techniques of automated reasoning include the classical logics and calculi fuzzy logic Bayesian inference reasoning with maximal entropy and many less formal ad hoc techniques Contents 1 Early years 2 Significant contributions 3 Proof systems 4 Applications 5 See also 51 Conferences and workshops 52 Journals 53 Communities 6 References 7 External links Early years edit The development of formal logic played a big role in the field of automated reasoning which itself led to the development of artificial intelligence A formal proof is a proof in which every logical inference has been checked back to the fundamental axioms of mathematics All the intermediate logical steps are supplied without exception No appeal is made to intuition even if the translation from intuition to logic is routine Thus a formal proof is less intuitive and less susceptible to logical errors 3 Some consider the Cornell Summer meeting of 1957 which brought together many logicians and computer scientists as the origin of automated reasoning or automated deduction 4 Others say that it began before that with the 1955 Logic Theorist program of Newell Shaw and Simon or with Martin Davis 1954 implementation of Presburgers decision procedure which proved that the sum of two even numbers is even 5 Automated reasoning although a significant and popular area of research went through an AI winter in the eighties and early nineties The field subsequently revived however For example in 2005 Microsoft started using verification technology in many of their internal projects and is planning to include a logical specification and checking language in their 2012 version of Visual C 4 Significant contributions edit Principia Mathematica was a milestone work in formal logic written by Alfred North Whitehead and Bertrand Russell Principia Mathematica also meaning Principles of Mathematics was written with a purpose to derive all or some of the mathematical expressions in terms of symbolic logic Principia Mathematica was initially published in three volumes in 1910 1912 and 1913 6 Logic Theorist LT was the first ever program developed in 1956 by Allen Newell Cliff Shaw and Herbert A Simon to mimic human reasoning in proving theorems and was demonstrated on fiftytwo theorems from chapter two of Principia Mathematica proving thirtyeight of them 7 In addition to proving the theorems the program found a proof for one of the theorems that was more elegant than the one provided by Whitehead and Russell After an unsuccessful attempt at publishing their results Newell Shaw and Herbert reported in their publication in 1958 The Next Advance in Operation Research There are now in the world machines that think that learn and that create Moreover their ability to do these things is going to increase rapidly until in a visible future the range of problems they can handle will be co extensive with the range to which the human mind has been applied 8 Examples of Formal Proofs Year Theorem Proof System Formalizer Traditional Proof 1986 First Incompleteness BoyerMoore Shankar 9 Gödel 1990 Quadratic Reciprocity BoyerMoore Russinoff 10 Eisenstein 1996 Fundamental of Calculus HOL Light Harrison Henstock 2000 Fundamental of Algebra Mizar Milewski Brynski 2000 Fundamental of Algebra Coq Geuvers et al Kneser 2004 Four Color Coq Gonthier Robertson et al 2004 Prime Number Isabelle Avigad et al Selberg Erdős 2005 Jordan Curve HOL Light Hales Thomassen 2005 Brouwer Fixed Point HOL Light Harrison Kuhn 2006 Flyspeck 1 Isabelle Bauer Nipkow Hales 2007 Cauchy Residue HOL Light Harrison Classical 2008 Prime Number HOL Light Harrison Analytic proof 2012 FeitThompson Coq Gonthier et al 11 Bender Glauberman and Peterfalvi 2016 Boolean Pythagorean triples problem Formalized as SAT Heule et al 12 None Proof systems edit BoyerMoore Theorem Prover NQTHM The design of NQTHM was influenced by John McCarthy and Woody Bledsoe Started in 1971 at Edinburgh Scotland this was a fully automatic theorem prover built using Pure Lisp The main aspects of NQTHM were the use of Lisp as a working logic the reliance on a principle of definition for total recursive functions the extensive use of rewriting and symbolic evaluation an induction heuristic based the failure of symbolic evaluation 13 HOL Light Written in OCaml HOL Light is designed to have a simple and clean logical foundation and an uncluttered implementation It is essentially another proof assistant for classical higher order logic 14 Coq Developed in France Coq is another automated proof assistant which can automatically extract executable programs from specifications as either Objective CAML or Haskell source code Properties programs and proofs are formalized in the same language called the Calculus of Inductive Constructions CIC 15 Applications edit Automated reasoning has been most commonly used to build automated theorem provers Oftentimes however theorem provers require some human guidance to be effective and so more generally qualify as proof assistants In some cases such provers have come up with new approaches to proving a theorem Logic Theorist is a good example of this The program came up with a proof for one of the theorems in Principia Mathematica that was more efficient requiring fewer steps than the proof provided by Whitehead and Russell Automated reasoning programs are being applied to solve a growing number of problems in formal logic mathematics and computer science logic programming software and hardware verification circuit design and many others The TPTP Sutcliffe and Suttner 1998 is a library of such problems that is updated on a regular basis There is also a competition among automated theorem provers held regularly at the CADE conference Pelletier Sutcliffe and Suttner 2002 the problems for the competition are selected from the TPTP library 16 See also edit Automated machine learning AutoML Automated theorem proving Reasoning system Semantic reasoner Program analysis computer science Applications of artificial intelligence Outline of artificial intelligence Casuistry Casebased reasoning Abductive reasoning Inference engine Commonsense reasoning Conferences and workshops edit International Joint Conference on Automated Reasoning IJCAR Conference on Automated Deduction CADE International Conference on Automated Reasoning with Analytic Tableaux and Related Methods Journals edit Journal of Automated Reasoning Communities edit Association for Automated Reasoning AAR References edit Defourneaux Gilles and Nicolas Peltier Analogy and abduction in automated deduction IJCAI 1 1997 John L Pollock C Hales Thomas Formal Proof University of Pittsburgh Retrieved on 20101019 a b Automated Deduction AD The Nature of PRL Project Retrieved on 20101019 Martin Davis The Prehistory and Early History of Automated Deduction in Automation of Reasoning eds Siekmann and Wrightson vol 1 128 at p 15 Principia Mathematica at Stanford University Retrieved 20101019 The Logic Theorist and its Children Retrieved 20101018 Shankar Natarajan Little Engines of Proof Computer Science Laboratory SRI International Retrieved 20101019 Shankar N 1994 Metamathematics Machines and Gödels Proof Cambridge UK Cambridge University Press ISBN 9780521585330 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput idlockfree amwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocklimited amwparseroutput idlockregistration amwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput idlocksubscription amwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Russinoff David M 1992 A Mechanical Proof of Quadratic Reciprocity J Autom Reason 8 1 321 doi 101007BF00263446 Gonthier G et al 2013 A MachineChecked Proof of the Odd Order Theorem in Blazy S PaulinMohring C Pichardie D eds Interactive Theorem Proving PDF Lecture Notes in Computer Science 7998 pp163179 doi 101007978364239634214 ISBN 9783642396335 Heule Marijn J H Kullmann Oliver Marek Victor W 2016 Solving and Verifying the Boolean Pythagorean Triples Problem via CubeandConquer Theory and Applications of Satisfiability Testing SAT 2016 Lecture Notes in Computer Science 9710 pp228245 arXiv 160500723 doi 101007978331940970215 ISBN 9783319409696 The Boyer Moore Theorem Prover Retrieved on 20101023 Harrison John HOL Light an overview Retrieved 20101023 Introduction to Coq Retrieved 20101023 Automated Reasoning Stanford Encyclopedia Retrieved 20101010 External links edit International Workshop on the Implementation of Logics Workshop Series on Empirically Successful Topics in Automated Reasoning v t e Computer science Note This template roughly follows the 2012 ACM Computing Classification System Hardware Printed circuit board Peripheral Integrated circuit Very Large Scale Integration Systems on Chip SoCs Energy consumption Green computing Electronic design automation Hardware acceleration Computer systems organization Computer architecture Embedded system Realtime computing Dependability Networks Network architecture Network protocol Network components Network scheduler Network performance evaluation Network service Software organization Interpreter Middleware Virtual machine Operating system Software quality Software notations and tools Programming paradigm Programming language Compiler Domainspecific language Modeling language Software framework Integrated development environment Software configuration management Software library Software repository Software development Software development process Requirements analysis Software design Software construction Software deployment Software maintenance Programming team Opensource model Theory of computation Model of computation Formal language Automata theory Computability theory Computational complexity theory Logic Semantics Algorithms Algorithm design Analysis of algorithms Algorithmic efficiency Randomized algorithm Computational geometry Mathematics of computing Discrete mathematics Probability Statistics Mathematical software Information theory Mathematical analysis Numerical analysis Information systems Database management system Information storage systems Enterprise information system Social information systems Geographic information system Decision support system Process control system Multimedia information system Data mining Digital library Computing platform Digital marketing World Wide Web Information retrieval Security Cryptography Formal methods Security services Intrusion detection system Hardware security Network security Information security Application security Humancomputer interaction Interaction design Social computing Ubiquitous computing Visualization Accessibility Concurrency Concurrent computing Parallel computing Distributed computing Multithreading Multiprocessing Artificial intelligence Natural language processing Knowledge representation and reasoning Computer vision Automated planning and scheduling Search methodology Control method Philosophy of artificial intelligence Distributed artificial intelligence Machine learning Supervised learning Unsupervised learning Reinforcement learning Multitask learning Crossvalidation Graphics Animation Rendering Image manipulation Graphics processing unit Mixed reality Virtual reality Image compression Solid modeling Applied computing Ecommerce Enterprise software Computational mathematics Computational physics Computational chemistry Computational biology Computational social science Computational engineering Computational healthcare Digital art Electronic publishing Cyberwarfare Electronic voting Video games Word processing Operations research Educational technology Document management Book Category Outline WikiProject Commons v t e Computable knowledge Topics and concepts Alphabet of human thought Authority control Automated reasoning Commonsense knowledge Commonsense reasoning Computability Formal system Inference engine Knowledge base Knowledgebased systems Knowledge engineering Knowledge extraction Knowledge representation Knowledge retrieval Library classification Logic programming Ontology Personal knowledge base Question answering Semantic reasoner Proposals and implementations Zairja Ars Magna 1300 An Essay towards a Real Character and a Philosophical Language 1688 Calculus ratiocinator and characteristica universalis 1700 Dewey Decimal Classification 1876 Begriffsschrift 1879 Mundaneum 1910 Logical atomism 1918 Tractatus LogicoPhilosophicus 1921 Hilberts program 1920s Incompleteness theorem 1931 World Brain 1938 Memex 1945 General Problem Solver 1959 Prolog 1972 Cyc 1984 Semantic Web 2001 Evi 2007 Wolfram Alpha 2009 Watson 2011 Siri 2011 Knowledge Graph 2012 Wikidata 2012 Cortana 2014 Viv 2016 In fiction The Engine Gullivers Travels 1726 Joe A Logic Named Joe 1946 The Librarian Snow Crash 1992 Dr Know AI Artificial Intelligence 2001 Waterhouse The Baroque Cycle 2003 See also Logic machines in fiction and List of fictional computers 