Computer program Instructions to be executed by a computer For the TV program see The Computer Programme hello world computer program by Brian Kernighan 1978 A computer program is a collection of instructions 1 that performs a specific task when executed by a computer Most computer devices require programs to function properly A computer program is usually written by a computer programmer in a programming language From the program in its humanreadable form of source code a compiler or assembler can derive machine code a form consisting of instructions that the computer can directly execute Alternatively a computer program may be executed with the aid of an interpreter A collection of computer programs libraries and related data are referred to as software Computer programs may be categorized along functional lines such as application software and system software The underlying method used for some calculation or manipulation is known as an algorithm Contents 1 History 11 Early programmable machines 12 Analytical Engine 13 Universal Turing machine 14 Early programmable computers 15 Later computers 2 Computer programming 21 Programming languages 211 Imperative languages 212 Declarative languages 22 Compilation and interpretation 3 Storage and execution 31 Simultaneous execution 32 Selfmodifying programs 4 Functional categories 41 Application software 42 Utility programs 43 Operating system 44 Boot program 45 Embedded programs 46 Microcode programs 5 See also 6 References 7 Further reading History edit See also History of computing History of programming languages and History of software Codebreaking algorithms have existed for centuries In the 9th century the Arab mathematician AlKindi described a cryptographic algorithm for deciphering encrypted code in A Manuscript On Deciphering Cryptographic Messages He gave the first description of cryptanalysis by frequency analysis the earliest codebreaking algorithm 2 Early programmable machines edit The earliest programmable machines preceded the invention of the digital computer As early as the 9th century a programmable music sequencer was invented by the Persian Banu Musa brothers who described an automated mechanical flute player in the Book of Ingenious Devices 3 4 In 1206 the Arab engineer AlJazari invented a programmable drum machine where musical mechanical automata could be made to play different rhythms and drum patterns 5 In 1801 JosephMarie Jacquard devised a loom that would weave a pattern by following a series of perforated cards Patterns could be woven and repeated by arranging the cards 6 Analytical Engine edit Lovelaces diagram from Note G the first published computer algorithm In 1837 Charles Babbage was inspired by Jacquards loom to attempt to build the Analytical Engine 6 The names of the components of the calculating device were borrowed from the textile industry In the textile industry yarn was brought from the store to be milled The device would have had a storememory to hold 1000 numbers of 40 decimal digits each Numbers from the store would then have then been transferred to the mill analogous to the CPU of a modern machine for processing And a thread being the execution of programmed instructions by the device It was programmed using two sets of perforated cardsone to direct the operation and the other for the input variables 6 7 However after more than 17000 pounds of the British governments money the thousands of cogged wheels and gears never fully worked together 8 During a ninemonth period in 184243 Ada Lovelace translated the memoir of Italian mathematician Luigi Menabrea The memoir covered the Analytical Engine The translation contained Note G which completely detailed a method for calculating Bernoulli numbers using the Analytical Engine This note is recognized by some historians as the worlds first written computer program 9 Universal Turing machine edit In 1936 Alan Turing introduced the Universal Turing machine a theoretical device that can model every computation that can be performed on a Turing complete computing machine 10 It is a finitestate machine that has an infinitely long readwrite tape The machine can move the tape back and forth changing its contents as it performs an algorithm The machine starts in the initial state goes through a sequence of steps and halts when it encounters the halt state 11 This machine is considered by some to be the origin of the storedprogram computer used by John von Neumann 1946 for the Electronic Computing Instrument that now bears the von Neumann architecture name 12 Early programmable computers edit The Z3 computer invented by Konrad Zuse 1941 in Germany was a digital and programmable computer 13 A digital computer uses electricity as the calculating component The Z3 contained 2400 relays to create the circuits The circuits provided a binary floatingpoint nineinstruction computer Programming the Z3 was through a specially designed keyboard and punched tape The Electronic Numerical Integrator And Computer Fall 1945 was a Turing complete generalpurpose computer that used 17468 vacuum tubes to create the circuits At its core it was a series of Pascalines wired together 14 Its 40 units weighed 30 tons occupied 1800 square feet 167m 2 and consumed 650 per hour in 1940s currency in electricity when idle 14 It had 20 base10 accumulators Programming the ENIAC took up to two months 14 Three function tables were on wheels and needed to be rolled to fixed function panels Function tables were connected to function panels using heavy black cables Each function table had 728 rotating knobs Programming the ENIAC also involved setting some of the 3000 switches Debugging a program took a week 14 The programmers of the ENIAC were women who were known collectively as the ENIAC girls 15 The ENIAC featured parallel operations Different sets of accumulators could simultaneously work on different algorithms It used punched card machines for input and output and it was controlled with a clock signal It ran for eight years calculating hydrogen bomb parameters predicting weather patterns and producing firing tables to aim artillery guns The Manchester Baby June 1948 was a storedprogram computer 16 Programming transitioned away from moving cables and setting dials instead a computer program was stored in memory as numbers Only three bits of memory were available to store each instruction so it was limited to eight instructions 32 switches were available for programming Later computers edit Switches for manual input on a Data General Nova 3 manufactured in the mid1970s Computers manufactured until the 1970s had frontpanel switches for programming The computer program was written on paper for reference An instruction was represented by a configuration of onoff settings After setting the configuration an execute button was pressed This process was then repeated Computer programs also were manually input via paper tape or punched cards After the medium was loaded the starting address was set via switches and the execute button pressed 17 In 1961 the Burroughs B5000 was built specifically to be programmed in the ALGOL 60 language The hardware featured circuits to ease the compile phase 18 In 1964 the IBM System360 was a line of six computers each having the same instruction set architecture The Model 30 was the smallest and least expensive Customers could upgrade and retain the same application software 19 Each System360 model featured multiprogramming With operating system support multiple programs could be in memory at once When one was waiting for inputoutput another could compute Each model also could emulate other computers Customers could upgrade to the System360 and retain their IBM 7094 or IBM 1401 application software 19 Computer programming edit Main article Computer programming Computer programming is the process of writing or editing source code Editing source code involves testing analyzing refining and sometimes coordinating with other programmers on a jointly developed program A person who practices this skill is referred to as a computer programmer software developer and sometimes coder The sometimes lengthy process of computer programming is usually referred to as software development The term software engineering is becoming popular as the process is seen as an engineering discipline Programming languages edit Main article Programming language A computer program written in the imperative programming style Computer programs can be categorized by the programming language paradigm used to produce them Two of the main paradigms are imperative and declarative Imperative languages edit Imperative programming languages specify a sequential algorithm using declarations expressions and statements 20 A declaration couples a variable name to a datatype for example var x integer An expression yields a value for example 2 2 yields 4 A statement might assign an expression to a variable or use the value of a variable to alter the programs control flow for example x 2 2 if x 4 then dosomething One criticism of imperative languages is the side effect of an assignment statement on a class of variables called nonlocal variables 21 Declarative languages edit Declarative programming languages describe what computation should be performed and not how to compute it Declarative programs omit the control flow and are considered sets of instructions Two broad categories of declarative languages are functional languages and logical languages The principle behind functional languages like Haskell is to not allow side effects which makes it easier to reason about programs like mathematical functions 21 The principle behind logical languages like Prolog is to define the problem to be solved the goal and leave the detailed solution to the Prolog system itself 22 The goal is defined by providing a list of subgoals Then each subgoal is defined by further providing a list of its subgoals etc If a path of subgoals fails to find a solution then that subgoal is backtracked and another path is systematically attempted Compilation and interpretation edit A computer program in the form of a humanreadable computer programming language is called source code Source code may be converted into an executable image by a compiler or assembler or executed immediately with the aid of an interpreter Compilers are used to translate source code from a programming language into either object code or machine code 23 Object code needs further processing to become machine code and machine code consists of the central processing units native instructions ready for execution Compiled computer programs are commonly referred to as executables binary images or simply as binaries a reference to the binary file format used to store the executable code Some compiled and assembled object programs need to be combined as modules with a linker utility in order to produce an executable program Interpreters are used to execute source code from a programming language linebyline The interpreter decodes each statement and performs its behavior One advantage of interpreters is that they can easily be extended to an interactive session The programmer is presented with a prompt and individual lines of code are typed in and performed immediately The main disadvantage of interpreters is computer programs run slower than when compiled Interpreting code is slower because the interpreter must decode each statement and then perform it However software development may be faster using an interpreter because testing is immediate when the compiling step is omitted Another disadvantage of interpreters is an interpreter must be present on the executing computer By contrast compiled computer programs need no compiler present during execution Just in time compilers precompile computer programs just before execution For example the Java virtual machine Hotspot contains a Just In Time Compiler which selectively compiles Java bytecode into machine code but only code which Hotspot predicts is likely to be used many times Either compiled or interpreted programs might be executed in a batch process without human interaction Scripting languages are often used to create batch processes One common scripting language is Unix shell and its executing environment is called the commandline interface No properties of a programming language require it to be exclusively compiled or exclusively interpreted The categorization usually reflects the most popular method of language execution For example Java is thought of as an interpreted language and C a compiled language despite the existence of Java compilers and C interpreters Storage and execution edit In the 1950s computer programs were stored on perforated paper tape Typically computer programs are stored in nonvolatile memory until requested either directly or indirectly to be executed by the computer user Upon such a request the program is loaded into randomaccess memory by a computer program called an operating system where it can be accessed directly by the central processor The central processor then executes runs the program instruction by instruction until termination A program in execution is called a process 24 Termination is either by normal selftermination by user intervention or by error software or hardware error Simultaneous execution edit See also Process computing and Multiprocessing Many operating systems support multitasking which enables many computer programs to appear to run simultaneously on one computer Operating systems may run multiple programs through process scheduling a software mechanism to switch the CPU among processes often so users can interact with each program while it runs 25 Within hardware modern day multiprocessor computers or computers with multicore processors may run multiple programs 26 Selfmodifying programs edit Main article Selfmodifying code A computer program in execution is normally treated as being different from the data the program operates on However in some cases this distinction is blurred when a computer program modifies itself The modified computer program is subsequently executed as part of the same program Selfmodifying code is possible for programs written in machine code assembly language Lisp C COBOL PL1 and Prolog Functional categories edit Computer programs may be categorized along functional lines The main functional categories are application software and system software System software includes the operating system which couples computer hardware with application software 27 The purpose of the operating system is to provide an environment in which application software executes in a convenient and efficient manner 27 In addition to the operating system system software includes embedded programs boot programs and micro programs Application software designed for end users have a user interface Application software not designed for the end user includes middleware which couples one application with another Application software also includes utility programs The distinction between system software and application software is under debate Application software edit Main article Application software Example of an app GCalctool a software calculator There are many types of application software The word app came to being in 21st century It is a clipping of the word application They have been designed for many platforms but the word was first used for smaller mobile apps Desktop apps are traditional computer programs that run on desktop computers Mobile apps run on mobile devices Web apps run inside a web browser Both mobile and desktop apps may be downloaded from the developers website or purchased from app stores such as Microsoft Store Apple App Store Mac App Store Google Play or Intel AppUp An application suite consists of multiple applications bundled together Examples include Microsoft Office LibreOffice and iWork They bundle a word processor spreadsheet and other applications Enterprise applications bundle accounting personnel customer and vendor applications Examples include enterprise resource planning customer relationship management and supply chain management software Enterprise infrastructure software supports the enterprises software systems Examples include databases email servers and network servers Information worker software are designed for workers at the departmental level Examples include time management resource management analytical collaborative and documentation tools Word processors spreadsheets email and blog clients personal information system and individual media editors may aid in multiple information worker tasks Media development software generates print and electronic media for others to consume most often in a commercial or educational setting These produce graphics publications animations and videos Product engineering software is used to help develop large machines and other application software Examples includes computeraided design CAD computeraided engineering CAE and integrated development environments Entertainment Software can refer to video games movie recorders and players and music recorders and players Utility programs edit Utility programs are application programs designed to aid system administrators and computer programmers Operating system edit See also Operating system An operating system is a computer program that acts as an intermediary between a user of a computer and the computer hardware 27 In the 1950s the programmer who was also the operator would write a program and run it After the program finished executing the output may have been printed or it may have been punched onto paper tape or cards for later processing 17 More often than not the program did not workThe programmer then looked at the console lights and fiddled with the console switches If less fortunate a memory printout was made for further studyIn the 1960s programmers reduced the amount of wasted time by automating the operators job A program called an operating system was kept in the computer at all times 28 Originally operating systems were programmed in assembly however modern operating systems are typically written in C Boot program edit A storedprogram computer requires an initial computer program stored in its readonly memory to boot The boot process is to identify and initialize all aspects of the system from processor registers to device controllers to memory contents 29 Following the initialization process this initial computer program loads the operating system and sets the program counter to begin normal operations Embedded programs edit The microcontroller on the right of this USB flash drive is controlled with embedded firmware Independent of the host computer a hardware device might have embedded firmware to control its operation Firmware is used when the computer program is rarely or never expected to change or when the program must not be lost when the power is off 28 Microcode programs edit Main article Microcode Microcode programs control some central processing units and some other hardware This code moves data between the registers buses arithmetic logic units and other functional units in the CPU Unlike conventional programs microcode is not usually written by or even visible to the end users of systems and is usually provided by the manufacturer and is considered internal to the device See also edit Artificial intelligence Automatic programming Computer virus Firmware Killer application Software Software bug References edit Rochkind Marc J 2004 Advanced Unix Programming Second Edition AddisonWesley p112 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Dooley John F 2013 A Brief History of Cryptology and Cryptographic Algorithms Springer Science Business Media pp123 ISBN 9783319016283 Koetsier Teun 2001 On the prehistory of programmable machines musical automata looms calculators Mechanism and Machine Theory Elsevier 36 5 589603 doi 101016S0094114X01000052 Kapur Ajay Carnegie Dale Murphy Jim Long Jason 2017 Loudspeakers Optional A history of nonloudspeakerbased electroacoustic music Organised Sound Cambridge University Press 22 2 195205 doi 101017S1355771817000103 ISSN 13557718 Noel Sharkey 2007 A 13th Century Programmable Robot University of Sheffield a b c McCartney Scott 1999 ENIAC The Triumphs and Tragedies of the Worlds First Computer Walker and Company p 16 ISBN 9780802713483 Bromley Allan G 1998 Charles Babbages Analytical Engine 1838 PDF IEEE Annals of the History of Computing 20 4 Tanenbaum Andrew S 1990 Structured Computer Organization Third Edition Prentice Hall p 15 ISBN 9780138546625 J Fuegi J Francis OctoberDecember 2003 Lovelace Babbage and the creation of the 1843 notes Annals of the History of Computing 25 4 16 19 25 doi 101109MAHC20031253887 Rosen Kenneth H 1991 Discrete Mathematics and Its Applications McGrawHill Inc p 654 ISBN 9780070537446 Linz Peter 1990 An Introduction to Formal Languages and Automata D C Heath and Company p234 ISBN 9780669173420 Davis Martin 2000 Engines of Logic Mathematicians and the origin of the Computer 1st ed New York NY W W Norton Company ISBN 9780393322293 pb History of Computing a b c d McCartney Scott 1999 ENIAC The Triumphs and Tragedies of the Worlds First Computer Walker and Company p 102 ISBN 9780802713483 Frink Brenda D 1 June 2011 Researcher reveals how Computer Geeks replaced Computer Girls Gender News Stanford University Archived from the original on 12 March 2015 Retrieved 22 October 2018 Enticknap Nicholas Summer 1998 Computings Golden Jubilee Resurrection 20 ISSN 09587403 archived from the original on 9 January 2012 retrieved 19 April 2008 a b Silberschatz Abraham 1994 Operating System Concepts Fourth Edition AddisonWesley p6 ISBN 9780201504804 Tanenbaum Andrew S 1990 Structured Computer Organization Third Edition Prentice Hall p 20 ISBN 9780138546625 a b Tanenbaum Andrew S 1990 Structured Computer Organization Third Edition Prentice Hall p 21 ISBN 9780138546625 Wilson Leslie B 1993 Comparative Programming Languages Second Edition AddisonWesley p75 ISBN 9780201568851 a b Wilson Leslie B 1993 Comparative Programming Languages Second Edition AddisonWesley p213 ISBN 9780201568851 Wilson Leslie B 1993 Comparative Programming Languages Second Edition AddisonWesley p244 ISBN 9780201568851 What is a Compiler Retrieved 20120110 Silberschatz Abraham 1994 Operating System Concepts Fourth Edition AddisonWesley p97 ISBN 9780201504804 Silberschatz Abraham 1994 Operating System Concepts Fourth Edition AddisonWesley p100 ISBN 9780201504804 Akhter Shameem 2006 MultiCore Programming Richard Bowles Intel Press pp1113 ISBN 9780976483243 a b c Silberschatz Abraham 1994 Operating System Concepts Fourth Edition AddisonWesley p1 ISBN 9780201504804 a b Tanenbaum Andrew S 1990 Structured Computer Organization Third Edition Prentice Hall p 11 ISBN 9780138546625 Silberschatz Abraham 1994 Operating System Concepts Fourth Edition AddisonWesley p30 ISBN 9780201504804 Further reading edit Knuth Donald E 1997 The Art of Computer Programming Volume 1 3rd Edition Boston AddisonWesley ISBN 9780201896831 Knuth Donald E 1997 The Art of Computer Programming Volume 2 3rd Edition Boston AddisonWesley ISBN 9780201896848 Knuth Donald E 1997 The Art of Computer Programming Volume 3 3rd Edition Boston AddisonWesley ISBN 9780201896855 Authority control BNE XX526558 GND 40473946 LCCN sh85029524 NARA 10675392