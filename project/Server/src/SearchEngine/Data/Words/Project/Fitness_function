Fitness function This article includes a list of references related reading or external links but its sources remain unclear because it lacks inline citations Please help to improve this article by introducing more precise citations May 2015 Learn how and when to remove this template message A fitness function is a particular type of objective function that is used to summarise as a single figure of merit how close a given design solution is to achieving the set aims Fitness functions are used in genetic programming and genetic algorithms to guide simulations towards optimal design solutions Contents 1 Genetic programming and algorithms 2 See also 3 References 4 External links Genetic programming and algorithms edit In particular in the fields of genetic programming and genetic algorithms each design solution is commonly represented as a string of numbers referred to as a chromosome After each round of testing or simulation the idea is to delete the n worst design solutions and to breed n new ones from the best design solutions Each design solution therefore needs to be awarded a figure of merit to indicate how close it came to meeting the overall specification and this is generated by applying the fitness function to the test or simulation results obtained from that solution The reason that genetic algorithms cannot be considered to be a lazy way of performing design work is precisely because of the effort involved in designing a workable fitness function Even though it is no longer the human designer but the computer which comes up with the final design it is still the human designer who has to design the fitness function If this is designed badly the algorithm will either converge on an inappropriate solution or will have difficulty converging at all The fitness function must not only correlate closely with the designers goal it must also be computed quickly Speed of execution is very important as a typical genetic algorithm must be iterated many times in order to produce a usable result for a nontrivial problem Fitness approximation may be appropriate especially in the following cases Fitness computation time of a single solution is extremely high Precise model for fitness computation is missing The fitness function is uncertain or noisy Two main classes of fitness functions exist one where the fitness function does not change as in optimizing a fixed function or testing with a fixed set of test cases and one where the fitness function is mutable as in niche differentiation or coevolving the set of test cases Another way of looking at fitness functions is in terms of a fitness landscape which shows the fitness for each possible chromosome Definition of the fitness function is not straightforward in many cases and often is performed iteratively if the fittest solutions produced by genetic algorithms are not what is desired Interactive genetic algorithms address this difficulty by outsourcing evaluation to external agents normally humans See also edit Evolutionary computation Inferential programming Test functions for optimization References edit External links edit A Nice Introduction to Adaptive Fuzzy Fitness Granulation AFFG PDF A promising approach to accelerate the convergence rate of EAs The cyber shack of Adaptive Fuzzy Fitness Granulation AFFG That is designed to accelerate the convergence rate of EAs Fitness functions in evolutionary robotics A survey and analysis AFFG PDF A review of fitness functions used in evolutionary robotics 