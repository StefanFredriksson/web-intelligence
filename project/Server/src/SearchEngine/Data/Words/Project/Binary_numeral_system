Binary number Numeral systems HinduArabic numeral system Western Arabic Eastern Arabic Bengali Devanagari Gurmukhi Sinhala Tamil Balinese Burmese Dzongkha Gujarati Javanese Khmer Lao Mongolian Thai East Asian Chinese Suzhou Hokkien Japanese Korean Vietnamese Tangut Counting rods Alphabetic Abjad Armenian Āryabhaṭa Cyrillic Geez Georgian Greek Hebrew Roman Former Aegean Attic Babylonian Brahmi Chuvash Egyptian Etruscan Glagolitic Inuit Kharosthi Mayan Muisca Quipu Prehistoric Positional systems by base 2 3 4 5 6 8 10 12 16 20 60 Nonstandard positional numeral systems Bijective numeration 1 Signeddigit representation Balanced ternary factorial negative Complexbase system 2 i Noninteger representation φ mixed Asymmetric numeral systems List of numeral systems v t e In mathematics and digital electronics a binary number is a number expressed in the base2 numeral system or binary numeral system which uses only two symbols typically 0 zero and 1 one The base2 numeral system is a positional notation with a radix of 2 Each digit is referred to as a bit Because of its straightforward implementation in digital electronic circuitry using logic gates the binary system is used by almost all modern computers and computerbased devices Contents 1 History 11 Egypt 12 China 13 India 14 Other cultures 15 Western predecessors to Leibniz 16 Leibniz and the I Ching 17 Later developments 2 Representation 3 Counting in binary 31 Decimal counting 32 Binary counting 4 Fractions 5 Binary arithmetic 51 Addition 511 Long carry method 512 Addition table 52 Subtraction 53 Multiplication 531 Multiplication table 54 Division 55 Square root 6 Bitwise operations 7 Conversion to and from other numeral systems 71 Decimal 72 Hexadecimal 73 Octal 8 Representing real numbers 9 See also 10 References 11 Further reading 12 External links History edit The modern binary number system was studied in Europe in the 16th and 17th centuries by Thomas Harriot Juan Caramuel y Lobkowitz and Gottfried Leibniz However systems related to binary numbers have appeared earlier in multiple cultures including ancient Egypt China and India Leibniz was specifically inspired by the Chinese I Ching Egypt edit See also Ancient Egyptian mathematics Arithmetic values thought to have been represented by parts of the Eye of Horus The scribes of ancient Egypt used two different systems for their fractions Egyptian fractions not related to the binary number system and HorusEye fractions so called because many historians of mathematics believe that the symbols used for this system could be arranged to form the eye of Horus although this has been disputed 1 HorusEye fractions are a binary numbering system for fractional quantities of grain liquids or other measures in which a fraction of a hekat is expressed as a sum of the binary fractions 12 14 18 116 132 and 164 Early forms of this system can be found in documents from the Fifth Dynasty of Egypt approximately 2400 BC and its fully developed hieroglyphic form dates to the Nineteenth Dynasty of Egypt approximately 1200 BC 2 The method used for ancient Egyptian multiplication is also closely related to binary numbers In this method multiplying one number by a second is performed by a sequence of steps in which a value initially the first of the two numbers is either doubled or has the first number added back into it the order in which these steps are to be performed is given by the binary representation of the second number This method can be seen in use for instance in the Rhind Mathematical Papyrus which dates to around 1650 BC 3 China edit Daoist Bagua The I Ching dates from the 9th century BC in China 4 The binary notation in the I Ching is used to interpret its quaternary divination technique 5 It is based on taoistic duality of yin and yang 6 eight trigrams Bagua and a set of 64 hexagrams sixtyfour gua analogous to the threebit and sixbit binary numerals were in use at least as early as the Zhou Dynasty of ancient China 4 The Song Dynasty scholar Shao Yong 10111077 rearranged the hexagrams in a format that resembles modern binary numbers although he did not intend his arrangement to be used mathematically 5 Viewing the least significant bit on top of single hexagrams in Shao Yongs square and reading along rows either from bottom right to top left with solid lines as 0 and broken lines as 1 or from top left to bottom right with solid lines as 1 and broken lines as 0 hexagrams can be interpreted as sequence from 0 to 63 7 India edit The Indian scholar Pingala c 2nd century BC developed a binary system for describing prosody 8 9 He used binary numbers in the form of short and long syllables the latter equal in length to two short syllables making it similar to Morse code 10 11 They were known as laghu light and guru heavy syllables Pingalas Hindu classic titled Chandaḥśāstra 823 describes the formation of a matrix in order to give a unique value to each meter Chandaḥśāstra literaly translates to science of meters in Sanskrit The binary representations in Pingalas system increases towards the right and not to the left like in the binary numbers of the modern positional notation 10 12 In Pingalas system the numbers start from number one and not zero Four short syllables 0000 is the first pattern and corresponds to the value one The numerical value is obtained by adding one to the sum of place values 13 Other cultures edit The residents of the island of Mangareva in French Polynesia were using a hybrid binary decimal system before 1450 14 Slit drums with binary tones are used to encode messages across Africa and Asia 6 Sets of binary combinations similar to the I Ching have also been used in traditional African divination systems such as Ifá as well as in medieval Western geomancy Western predecessors to Leibniz edit In the late 13th century Ramon Llull had the ambition to account for all wisdom in every branch of human knowledge of the time For that purpose he developed a general method or Ars generalis based on binary combinations of a number of simple basic principles or categories for which he has been considered a predecessor of computing science and artificial intelligence 15 In 1605 Francis Bacon discussed a system whereby letters of the alphabet could be reduced to sequences of binary digits which could then be encoded as scarcely visible variations in the font in any random text 16 Importantly for the general theory of binary encoding he added that this method could be used with any objects at all provided those objects be capable of a twofold difference only as by Bells by Trumpets by Lights and Torches by the report of Muskets and any instruments of like nature 16 See Bacons cipher John Napier in 1617 described a system he called location arithmetic for doing binary calculations using a nonpositional representation by letters Thomas Harriot investigated several positional numbering systems including binary but did not publish his results they were found later among his papers 17 Possibly the first publication of the system in Europe was by Juan Caramuel y Lobkowitz in 1700 18 Leibniz and the I Ching edit Gottfried Leibniz Leibniz studied binary numbering in 1679 his work appears in his article Explication de lArithmétique Binaire published in 1703The full title of Leibnizs article is translated into English as the Explanation of Binary Arithmetic which uses only the characters 1 and 0 with some remarks on its usefulness and on the light it throws on the ancient Chinese figures of Fu Xi 19 1703 Leibnizs system uses 0 and 1 like the modern binary numeral system An example of Leibnizs binary numeral system is as follows 19 0 0 0 1 numerical value 2 0 0 0 1 0 numerical value 2 1 0 1 0 0 numerical value 2 2 1 0 0 0 numerical value 2 3 Leibniz interpreted the hexagrams of the I Ching as evidence of binary calculus 20 As a Sinophile Leibniz was aware of the I Ching noted with fascination how its hexagrams correspond to the binary numbers from 0 to 111111 and concluded that this mapping was evidence of major Chinese accomplishments in the sort of philosophical mathematics he admired 21 Leibniz was first introduced to the I Ching through his contact with the French Jesuit Joachim Bouvet who visited China in 1685 as a missionary Leibniz saw the I Ching hexagrams as an affirmation of the universality of his own religious beliefs as a Christian 20 Binary numerals were central to Leibnizs theology He believed that binary numbers were symbolic of the Christian idea of creatio ex nihilo or creation out of nothing 22 mwparseroutput templatequoteoverflowhiddenmargin1em 0padding0 40pxmwparseroutput templatequote templatequotecitelineheight15emtextalignleftpaddingleft16emmargintop0 A concept that is not easy to impart to the pagans is the creation ex nihilo through Gods almighty power Now one can say that nothing in the world can better present and demonstrate this power than the origin of numbers as it is presented here through the simple and unadorned presentation of One and Zero or Nothing Leibnizs letter to the Duke of Brunswick attached with the I Ching hexagrams 20 Later developments edit George Boole In 1854 British mathematician George Boole published a landmark paper detailing an algebraic system of logic that would become known as Boolean algebra His logical calculus was to become instrumental in the design of digital electronic circuitry 23 In 1937 Claude Shannon produced his masters thesis at MIT that implemented Boolean algebra and binary arithmetic using electronic relays and switches for the first time in history Entitled A Symbolic Analysis of Relay and Switching Circuits Shannons thesis essentially founded practical digital circuit design 24 In November 1937 George Stibitz then working at Bell Labs completed a relaybased computer he dubbed the Model K for K itchen where he had assembled it which calculated using binary addition 25 Bell Labs authorized a full research program in late 1938 with Stibitz at the helm Their Complex Number Computer completed 8 January 1940 was able to calculate complex numbers In a demonstration to the American Mathematical Society conference at Dartmouth College on 11 September 1940 Stibitz was able to send the Complex Number Calculator remote commands over telephone lines by a teletype It was the first computing machine ever used remotely over a phone line Some participants of the conference who witnessed the demonstration were John von Neumann John Mauchly and Norbert Wiener who wrote about it in his memoirs 26 27 28 The Z1 computer which was designed and built by Konrad Zuse between 1935 and 1938 used Boolean logic and binary floating point numbers 29 Representation edit Any number can be represented by a sequence of bits binary digits which in turn may be represented by any mechanism capable of being in two mutually exclusive states Any of the following rows of symbols can be interpreted as the binary numeric value of 667 1 0 1 0 0 1 1 0 1 1 y n y n n y y n y y A binary clock might use LEDs to express binary values In this clock each column of LEDs shows a binarycoded decimal numeral of the traditional sexagesimal time The numeric value represented in each case is dependent upon the value assigned to each symbol In the earlier days of computing switches punched holes and punched paper tapes were used to represent binary values 30 In a modern computer the numeric values may be represented by two different voltages on a magnetic disk magnetic polarities may be used A positive yes or on state is not necessarily equivalent to the numerical value of one it depends on the architecture in use In keeping with customary representation of numerals using Arabic numerals binary numbers are commonly written using the symbols 0 and 1 When written binary numerals are often subscripted prefixed or suffixed in order to indicate their base or radix The following notations are equivalent 100101 binary explicit statement of format 100101b a suffix indicating binary format also known as Intel convention 31 32 100101B a suffix indicating binary format bin 100101 a prefix indicating binary format 100101 2 a subscript indicating base2 binary notation 100101 a prefix indicating binary format also known as Motorola convention 31 32 0b100101 a prefix indicating binary format common in programming languages 6b100101 a prefix indicating number of bits in binary format common in programming languages When spoken binary numerals are usually read digitbydigit in order to distinguish them from decimal numerals For example the binary numeral 100 is pronounced one zero zero rather than one hundred to make its binary nature explicit and for purposes of correctness Since the binary numeral 100 represents the value four it would be confusing to refer to the numeral as one hundred a word that represents a completely different value or amount Alternatively the binary numeral 100 can be read out as four the correct value but this does not make its binary nature explicit Counting in binary edit Decimal number Binary number 0 0 1 1 2 10 3 11 4 100 5 101 6 110 7 111 8 1000 9 1001 10 1010 11 1011 12 1100 13 1101 14 1110 15 1111 Counting in binary is similar to counting in any other number system Beginning with a single digit counting proceeds through each symbol in increasing order Before examining binary counting it is useful to briefly discuss the more familiar decimal counting system as a frame of reference Decimal counting edit Decimal counting uses the ten symbols 0 through 9 Counting begins with the incremental substitution of the least significant digit rightmost digit which is often called the first digit When the available symbols for this position are exhausted the least significant digit is reset to 0 and the next digit of higher significance one position to the left is incremented overflow and incremental substitution of the loworder digit resumes This method of reset and overflow is repeated for each digit of significance Counting progresses as follows 000 001 002 007 008 009 rightmost digit is reset to zero and the digit to its left is incremented 0 1 0 011 012 090 091 092 097 098 099 rightmost two digits are reset to zeroes and next digit is incremented 1 00 101 102 Binary counting edit This counter shows how to count in binary from numbers zero through thirtyone Binary counting follows the same procedure except that only the two symbols 0 and 1 are available Thus after a digit reaches 1 in binary an increment resets it to 0 but also causes an increment of the next digit to the left 0000 000 1 rightmost digit starts over and next digit is incremented 00 1 0 0011 rightmost two digits start over and next digit is incremented 0 1 00 0101 0110 0111 rightmost three digits start over and the next digit is incremented 1 000 1001 1010 1011 1100 1101 1110 1111 In the binary system each digit represents an increasing power of 2 with the rightmost digit representing 2 0 the next representing 2 1 then 2 2 and so on The value of a binary number is the sum of the powers of 2 represented by each 1digit For example the binary number 100101 is converted to decimal form as follows 100101 2 1 2 5 0 2 4 0 2 3 1 2 2 0 2 1 1 2 0 100101 2 1 32 0 16 0 8 1 4 0 2 1 1 100101 2 37 10 Fractions edit Fractions in binary arithmetic terminate only if 2 is the only prime factor in the denominator As a result 110 does not have a finite binary representation 10 has prime factors 2 and 5 This causes 10 01 not to precisely equal 1 in floatingpoint arithmetic As an example to interpret the binary expression for 13 010101 this means 13 0 2 1 1 2 2 0 2 3 1 2 4 03125 An exact value cannot be found with a sum of a finite number of inverse powers of two the zeros and ones in the binary representation of 13 alternate forever Fraction Decimal Binary Fractional approximation 11 1 or 0999 1 or 0111 12 14 18 12 05 or 04999 01 or 00111 14 18 116 13 0333 0010101 14 116 164 14 025 or 024999 001 or 000111 18 116 132 15 02 or 01999 000110011 18 116 1128 16 01666 00010101 18 132 1128 17 0142857142857 0001001 18 164 1512 18 0125 or 0124999 0001 or 0000111 116 132 164 19 0111 0000111000111 116 132 164 110 01 or 00999 0000110011 116 132 1256 111 0090909 000010111010001011101 116 164 1128 112 008333 000010101 116 164 1256 113 0076923076923 0000100111011000100111011 116 1128 1256 114 00714285714285 00001001001 116 1128 11024 115 00666 000010001 116 1256 116 00625 or 00624999 00001 or 00000111 132 164 1128 Binary arithmetic edit Arithmetic in binary is much like arithmetic in other numeral systems Addition subtraction multiplication and division can be performed on binary numerals Addition edit Main article Adder electronics The circuit diagram for a binary half adder which adds two bits together producing sum and carry bits The simplest arithmetic operation in binary is addition Adding two singledigit binary numbers is relatively simple using a form of carrying 0 0 0 0 1 1 1 0 1 1 1 0 carry 1 since 1 1 2 0 1 2 1 Adding two 1 digits produces a digit 0 while 1 will have to be added to the next column This is similar to what happens in decimal when certain singledigit numbers are added together if the result equals or exceeds the value of the radix 10 the digit to the left is incremented 5 5 0 carry 1 since 5 5 10 0 1 10 1 7 9 6 carry 1 since 7 9 16 6 1 10 1 This is known as carrying When the result of an addition exceeds the value of a digit the procedure is to carry the excess amount divided by the radix that is 1010 to the left adding it to the next positional value This is correct since the next position has a weight that is higher by a factor equal to the radix Carrying works the same way in binary 1 1 1 1 1 carried digits 0 1 1 0 1 1 0 1 1 1 1 0 0 1 0 0 36 In this example two numerals are being added together 01101 2 13 10 and 10111 2 23 10 The top row shows the carry bits used Starting in the rightmost column 1 1 10 2 The 1 is carried to the left and the 0 is written at the bottom of the rightmost column The second column from the right is added 1 0 1 10 2 again the 1 is carried and 0 is written at the bottom The third column 1 1 1 11 2 This time a 1 is carried and a 1 is written in the bottom row Proceeding like this gives the final answer 100100 2 36 decimal When computers must add two numbers the rule thatx xor y x y mod 2for any two bits x and y allows for very fast calculation as well Long carry method edit A simplification for many binary addition problems is the Long Carry Method or Brookhouse Method of Binary Addition This method is generally useful in any binary addition in which one of the numbers contains a long string of ones It is based on the simple premise that under the binary system when given a string of digits composed entirely of n ones where n is any integer length adding 1 will result in the number 1 followed by a string of n zeros That concept follows logically just as in the decimal system where adding 1 to a string of n 9s will result in the number 1 followed by a string of n 0s Binary Decimal 1 1 1 1 1 likewise 9 9 9 9 9 1 1 1 0 0 0 0 0 1 0 0 0 0 0 Such long strings are quite common in the binary system From that one finds that large binary numbers can be added using two simple steps without excessive carry operations In the following example two numerals are being added together 1 1 1 0 1 1 1 1 1 0 2 958 10 and 1 0 1 0 1 1 0 0 1 1 2 691 10 using the traditional carry method on the left and the long carry method on the right Traditional Carry Method Long Carry Method vs 1 1 1 1 1 1 1 1 carried digits 1 1 carry the 1 until it is one digit past the string below 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 0 cross out the string 1 0 1 0 1 1 0 0 1 1 1 0 1 0 1 1 0 0 1 1 and cross out the digit that was added to it 1 1 0 0 1 1 1 0 0 0 1 1 1 0 0 1 1 1 0 0 0 1 The top row shows the carry bits used Instead of the standard carry from one column to the next the lowestordered 1 with a 1 in the corresponding place value beneath it may be added and a 1 may be carried to one digit past the end of the series The used numbers must be crossed off since they are already added Other long strings may likewise be cancelled using the same technique Then simply add together any remaining digits normally Proceeding in this manner gives the final answer of 1 1 0 0 1 1 1 0 0 0 1 2 1649 10 In our simple example using small numbers the traditional carry method required eight carry operations yet the long carry method required only two representing a substantial reduction of effort Addition table edit 0 1 0 0 1 1 1 10 The binary addition table is similar but not the same as the truth table of the logical disjunction operation displaystyle lor The difference is that 1 displaystyle 1 displaystyle lor 1 1 displaystyle 11 while 1 1 10 displaystyle 1110 Subtraction edit Further information signed number representations and twos complement Subtraction works in much the same way 0 0 0 0 1 1 borrow 1 1 0 1 1 1 0 Subtracting a 1 digit from a 0 digit produces the digit 1 while 1 will have to be subtracted from the next column This is known as borrowing The principle is the same as for carrying When the result of a subtraction is less than 0 the least possible value of a digit the procedure is to borrow the deficit divided by the radix that is 1010 from the left subtracting it from the next positional value starred columns are borrowed from 1 1 0 1 1 1 0 1 0 1 1 1 1 0 1 0 1 1 1 starred columns are borrowed from 1 0 1 1 1 1 1 1 0 1 0 1 1 0 1 1 0 1 0 0 Subtracting a positive number is equivalent to adding a negative number of equal absolute value Computers use signed number representations to handle negative numbersmost commonly the twos complement notation Such representations eliminate the need for a separate subtract operation Using twos complement notation subtraction can be summarized by the following formula A B A not B 1 Multiplication edit Multiplication in binary is similar to its decimal counterpart Two numbers A and B can be multiplied by partial products for each digit in B the product of that digit in A is calculated and written on a new line shifted leftward so that its rightmost digit lines up with the digit in B that was used The sum of all these partial products gives the final result Since there are only two digits in binary there are only two possible outcomes of each partial multiplication If the digit in B is 0 the partial product is also 0 If the digit in B is 1 the partial product is equal to A For example the binary numbers 1011 and 1010 are multiplied as follows 1 0 1 1 A 1 0 1 0 B 0 0 0 0 Corresponds to the rightmost zero in B 1 0 1 1 Corresponds to the next one in B 0 0 0 0 1 0 1 1 1 1 0 1 1 1 0 Binary numbers can also be multiplied with bits after a binary point 1 0 1 1 0 1 A 5625 in decimal 1 1 0 0 1 B 625 in decimal 1 0 1 1 0 1 Corresponds to a one in B 0 0 0 0 0 0 Corresponds to a zero in B 0 0 0 0 0 0 1 0 1 1 0 1 1 0 1 1 0 1 1 0 0 0 1 1 0 0 1 0 1 3515625 in decimal See also Booths multiplication algorithm Multiplication table edit 0 1 0 0 0 1 0 1 The binary multiplication table is the same as the truth table of the logical conjunction operation displaystyle land Division edit Main article Long division Binary division See also Division algorithm Integer division unsigned with remainder Long division in binary is again similar to its decimal counterpart In the example below the divisor is 101 2 or 5 in decimal while the dividend is 11011 2 or 27 in decimal The procedure is the same as that of decimal long division here the divisor 101 2 goes into the first three digits 110 2 of the dividend one time so a 1 is written on the top line This result is multiplied by the divisor and subtracted from the first three digits of the dividend the next digit a 1 is included to obtain a new threedigit sequence 1 1 0 1 1 1 0 1 1 1 0 1 0 0 1 The procedure is then repeated with the new sequence continuing until the digits in the dividend have been exhausted 1 0 1 1 0 1 1 1 0 1 1 1 0 1 1 1 1 1 0 1 1 0 Thus the quotient of 11011 2 divided by 101 2 is 101 2 as shown on the top line while the remainder shown on the bottom line is 10 2 In decimal this corresponds to the fact that 27 divided by 5 is 5 with a remainder of 2 Aside from long division one can also devise the procedure so as to allow for oversubtracting from the partial remainder at each iteration thereby leading to alternative methods which are less systematic but more flexible as a result 33 Square root edit The process of taking a binary square root digit by digit is the same as for a decimal square root and is explained here An example is 1 0 0 1 1010001 1 101 01 0 1001 100 0 10001 10001 10001 0 Bitwise operations edit Main article bitwise operation Though not directly related to the numerical interpretation of binary symbols sequences of bits may be manipulated using Boolean logical operators When a string of binary symbols is manipulated in this way it is called a bitwise operation the logical operators AND OR and XOR may be performed on corresponding bits in two binary numerals provided as input The logical NOT operation may be performed on individual bits in a single binary numeral provided as input Sometimes such operations may be used as arithmetic shortcuts and may have other computational benefits as well For example an arithmetic shift left of a binary number is the equivalent of multiplication by a positive integral power of 2 Conversion to and from other numeral systems edit Decimal edit Conversion of 357 10 to binary notation results in 101100101 To convert from a base10 integer to its base2 binary equivalent the number is divided by two The remainder is the leastsignificant bit The quotient is again divided by two its remainder becomes the next least significant bit This process repeats until a quotient of one is reached The sequence of remainders including the final quotient of one forms the binary value as each remainder must be either zero or one when dividing by two For example 357 10 is expressed as 101100101 2 34 Conversion from base2 to base10 simply inverts the preceding algorithm The bits of the binary number are used one by one starting with the most significant leftmost bit Beginning with the value 0 the prior value is doubled and the next bit is then added to produce the next value This can be organized in a multicolumn table For example to convert 10010101101 2 to decimal Prior value 2 Next bit Next value 0 2 1 1 1 2 0 2 2 2 0 4 4 2 1 9 9 2 0 18 18 2 1 37 37 2 0 74 74 2 1 149 149 2 1 299 299 2 0 598 598 2 1 1197 The result is 1197 10 The first Prior Value of 0 is simply an initial decimal value This method is an application of the Horner scheme Binary 1 0 0 1 0 1 0 1 1 0 1 Decimal 12 10 02 9 02 8 12 7 02 6 12 5 02 4 12 3 12 2 02 1 12 0 1197 The fractional parts of a number are converted with similar methods They are again based on the equivalence of shifting with doubling or halving In a fractional binary number such as 011010110101 2 the first digit is 1 2 displaystyle beginmatrixfrac 12endmatrix the second 1 2 2 1 4 displaystyle beginmatrixfrac 122frac 14endmatrix etc So if there is a 1 in the first place after the decimal then the number is at least 1 2 displaystyle beginmatrixfrac 12endmatrix and vice versa Double that number is at least 1 This suggests the algorithm Repeatedly double the number to be converted record if the result is at least 1 and then throw away the integer part For example 1 3 displaystyle beginmatrixfrac 13endmatrix 10 in binary is Converting Result 1 3 displaystyle beginmatrixfrac 13endmatrix 0 1 3 2 2 3 1 displaystyle beginmatrixfrac 13times 2frac 231endmatrix 00 2 3 2 1 1 3 1 displaystyle beginmatrixfrac 23times 21frac 13geq 1endmatrix 001 1 3 2 2 3 1 displaystyle beginmatrixfrac 13times 2frac 231endmatrix 0010 2 3 2 1 1 3 1 displaystyle beginmatrixfrac 23times 21frac 13geq 1endmatrix 00101 Thus the repeating decimal fraction 0 3 is equivalent to the repeating binary fraction 0 01 Or for example 01 10 in binary is Converting Result 01 0 01 2 02 1 00 02 2 04 1 000 04 2 08 1 0000 08 2 16 1 00001 06 2 12 1 000011 02 2 04 1 0000110 04 2 08 1 00001100 08 2 16 1 000011001 06 2 12 1 0000110011 02 2 04 1 00001100110 This is also a repeating binary fraction 00 0011 It may come as a surprise that terminating decimal fractions can have repeating expansions in binary It is for this reason that many are surprised to discover that 01 01 10 additions differs from 1 in floating point arithmetic In fact the only binary fractions with terminating expansions are of the form of an integer divided by a power of 2 which 110 is not The final conversion is from binary to decimal fractions The only difficulty arises with repeating fractions but otherwise the method is to shift the fraction to an integer convert it as above and then divide by the appropriate power of two in the decimal base For example x 1100 1 01110 x 2 6 1100101110 01110 x 2 11001 01110 x 2 6 2 1100010101 x 1100010101 111110 x 789 62 10 displaystyle beginalignedx11001overline 01110ldots xtimes 261100101110overline 01110ldots xtimes 211001overline 01110ldots xtimes 2621100010101x1100010101111110x7896210endaligned Another way of converting from binary to decimal often quicker for a person familiar with hexadecimal is to do so indirectlyfirst converting x displaystyle x in binary into x displaystyle x in hexadecimal and then converting x displaystyle x in hexadecimal into x displaystyle x in decimal For very large numbers these simple methods are inefficient because they perform a large number of multiplications or divisions where one operand is very large A simple divideandconquer algorithm is more effective asymptotically given a binary number it is divided by 10 k where k is chosen so that the quotient roughly equals the remainder then each of these pieces is converted to decimal and the two are concatenated Given a decimal number it can be split into two pieces of about the same size each of which is converted to binary whereupon the first converted piece is multiplied by 10 k and added to the second converted piece where k is the number of decimal digits in the second leastsignificant piece before conversion Hexadecimal edit Main article Hexadecimal 0 hex 0 dec 0 oct 0 0 0 0 1 hex 1 dec 1 oct 0 0 0 1 2 hex 2 dec 2 oct 0 0 1 0 3 hex 3 dec 3 oct 0 0 1 1 4 hex 4 dec 4 oct 0 1 0 0 5 hex 5 dec 5 oct 0 1 0 1 6 hex 6 dec 6 oct 0 1 1 0 7 hex 7 dec 7 oct 0 1 1 1 8 hex 8 dec 10 oct 1 0 0 0 9 hex 9 dec 11 oct 1 0 0 1 A hex 10 dec 12 oct 1 0 1 0 B hex 11 dec 13 oct 1 0 1 1 C hex 12 dec 14 oct 1 1 0 0 D hex 13 dec 15 oct 1 1 0 1 E hex 14 dec 16 oct 1 1 1 0 F hex 15 dec 17 oct 1 1 1 1 Binary may be converted to and from hexadecimal more easily This is because the radix of the hexadecimal system 16 is a power of the radix of the binary system 2 More specifically 16 2 4 so it takes four digits of binary to represent one digit of hexadecimal as shown in the adjacent table To convert a hexadecimal number into its binary equivalent simply substitute the corresponding binary digits 3A 16 0011 1010 2 E7 16 1110 0111 2 To convert a binary number into its hexadecimal equivalent divide it into groups of four bits If the number of bits isnt a multiple of four simply insert extra 0 bits at the left called padding For example 1010010 2 0101 0010 grouped with padding 52 16 11011101 2 1101 1101 grouped DD 16 To convert a hexadecimal number into its decimal equivalent multiply the decimal equivalent of each hexadecimal digit by the corresponding power of 16 and add the resulting values C0E7 16 12 16 3 0 16 2 14 16 1 7 16 0 12 4096 0 256 14 16 7 1 49383 10 Octal edit Main article Octal Binary is also easily converted to the octal numeral system since octal uses a radix of 8 which is a power of two namely 2 3 so it takes exactly three binary digits to represent an octal digit The correspondence between octal and binary numerals is the same as for the first eight digits of hexadecimal in the table above Binary 000 is equivalent to the octal digit 0 binary 111 is equivalent to octal 7 and so forth Octal Binary 0 000 1 001 2 010 3 011 4 100 5 101 6 110 7 111 Converting from octal to binary proceeds in the same fashion as it does for hexadecimal 65 8 110 101 2 17 8 001 111 2 And from binary to octal 101100 2 101 100 2 grouped 54 8 10011 2 010 011 2 grouped with padding 23 8 And from octal to decimal 65 8 6 8 1 5 8 0 6 8 5 1 53 10 127 8 1 8 2 2 8 1 7 8 0 1 64 2 8 7 1 87 10 Representing real numbers edit Nonintegers can be represented by using negative powers which are set off from the other digits by means of a radix point called a decimal point in the decimal system For example the binary number 1101 2 means 1 2 1 1 2 2 plus 1 2 0 1 1 1 plus 0 2 1 0 1 2 0 plus 1 2 2 1 1 4 025 For a total of 325 decimal All dyadic rational numbers p 2 a displaystyle frac p2a have a terminating binary numeralthe binary representation has a finite number of terms after the radix point Other rational numbers have binary representation but instead of terminating they recur with a finite sequence of digits repeating indefinitely For instance 1 10 3 10 1 2 11 2 001010101 01 2 displaystyle frac 110310frac 12112001010101overline 01ldots 2 12 10 17 10 1100 2 10001 2 01011010010110100 10110100 2 displaystyle frac 12101710frac 1100210001201011010010110100overline 10110100ldots 2 The phenomenon that the binary representation of any rational is either terminating or recurring also occurs in other radixbased numeral systems See for instance the explanation in decimal Another similarity is the existence of alternative representations for any terminating representation relying on the fact that 0111111 is the sum of the geometric series 2 1 2 2 2 3 which is 1 Binary numerals which neither terminate nor recur represent irrational numbers For instance 010100100010000100000100 does have a pattern but it is not a fixedlength recurring pattern so the number is irrational 10110101000001001111001100110011111110 is the binary representation of 2 displaystyle sqrt 2 the square root of 2 another irrational It has no discernible pattern See also edit Mathematics portal Binarycoded decimal Finger binary IEEE 754 Binary code Linear feedback shift register Offset binary Gray code Reduction of summands Redundant binary representation Quibinary Repeating decimal Twos complement References edit Robson Eleanor Stedall Jacqueline eds 2009 Myth No 2 the Horus eye fractions The Oxford Handbook of the History of Mathematics Oxford University Press p790 ISBN 9780199213122 mwparseroutput citecitationfontstyleinheritmwparseroutput citation qquotesmwparseroutput citation cs1lockfree abackgroundurluploadwikimediaorgwikipediacommonsthumb665Lockgreensvg9pxLockgreensvgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locklimited amwparseroutput citation cs1lockregistration abackgroundurluploadwikimediaorgwikipediacommonsthumbdd6Lockgrayalt2svg9pxLockgrayalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput citation cs1locksubscription abackgroundurluploadwikimediaorgwikipediacommonsthumbaaaLockredalt2svg9pxLockredalt2svgpngnorepeatbackgroundpositionright 1em centermwparseroutput cs1subscriptionmwparseroutput cs1registrationcolor555mwparseroutput cs1subscription spanmwparseroutput cs1registration spanborderbottom1px dottedcursorhelpmwparseroutput cs1wsicon abackgroundurluploadwikimediaorgwikipediacommonsthumb44cWikisourcelogosvg12pxWikisourcelogosvgpngnorepeatbackgroundpositionright 1em centermwparseroutput codecs1codecolorinheritbackgroundinheritborderinheritpaddinginheritmwparseroutput cs1hiddenerrordisplaynonefontsize100mwparseroutput cs1visibleerrorfontsize100mwparseroutput cs1maintdisplaynonecolor33aa33marginleft03emmwparseroutput cs1subscriptionmwparseroutput cs1registrationmwparseroutput cs1formatfontsize95mwparseroutput cs1kernleftmwparseroutput cs1kernwlleftpaddingleft02emmwparseroutput cs1kernrightmwparseroutput cs1kernwlrightpaddingright02em Chrisomalis Stephen 2010 Numerical Notation A Comparative History Cambridge University Press pp4243 ISBN 9780521878180 Rudman Peter Strom 2007 How Mathematics Happened The First 50000 Years Prometheus Books pp135136 ISBN 9781615921768 a b Edward Hacker Steve Moore Lorraine Patsco 2002 I Ching An Annotated Bibliography Routledge p13 ISBN 9780415939690 a b Redmond Hon 2014 p227 a b Jonathan Shectman 2003 Groundbreaking Scientific Experiments Inventions and Discoveries of the 18th Century Greenwood Publishing p29 ISBN 9780313320156 Zhonglian Shi Wenzhao Li Poser Hans 2000 Leibniz Binary System and Shao Yongs Xiantian Tu in Das Neueste über China GW Leibnizens Novissima Sinica von 1697 Internationales Symposium Berlin 4 bis 7 Oktober 1997 Stuttgart Franz Steiner Verlag pp165170 ISBN 3515074481 Sanchez Julio Canton Maria P 2007 Microcontroller programming the microchip PIC Boca Raton Florida CRC Press p37 ISBN 0849371899 W S Anglin and J Lambek The Heritage of Thales Springer 1995 ISBN 038794544X a b Binary Numbers in Ancient India Math for Poets and Drummers pdf 145KB Stakhov Alexey Olsen Scott Anthony 2009 The mathematics of harmony from Euclid to contemporary mathematics and computer science ISBN 9789812775825 B van Nooten Binary Numbers in Indian Antiquity Journal of Indian Studies Volume 21 1993 pp 3150 Bender Andrea Beller Sieghard 16 December 2013 Mangarevan invention of binary steps for easier calculation Proceedings of the National Academy of Sciences 111 13221327 doi 101073pnas1309160110 PMC 3910603 PMID 24344278 see Bonner 2007 1 Fidora et al 2011 2 a b Bacon Francis 1605 The Advancement of Learning London ppChapter 1 Shirley John W 1951 Binary numeration before Leibniz American Journal of Physics 19 8 452454 doi 10111911933042 Ineichen R 2008 Leibniz Caramuel Harriot und das Dualsystem PDF Mitteilungen der deutschen MathematikerVereinigung in German 16 1 1215 a b Leibniz G Explication de lArithmétique Binaire Die Mathematische Schriften ed C Gerhardt Berlin 1879 vol7 p223 Engl transl 3 a b c JEH Smith 2008 Leibniz What Kind of Rationalist What Kind of Rationalist Springer p415 ISBN 9781402086687 Aiton Eric J 1985 Leibniz A Biography Taylor Francis pp2458 ISBN 0852744706 YuenTing Lai 1998 Leibniz Mysticism and Religion Springer pp149150 ISBN 9780792352235 Boole George 2009 1854 An Investigation of the Laws of Thought on Which are Founded the Mathematical Theories of Logic and Probabilities Macmillan Dover Publications reprinted with corrections 1958 ed New York Cambridge University Press ISBN 9781108001533 Shannon Claude Elwood 1940 A symbolic analysis of relay and switching circuits Cambridge Massachusetts Institute of Technology National Inventors Hall of Fame George R Stibitz 20 August 2008 Archived from the original on 9 July 2010 Retrieved 5 July 2010 George Stibitz Bio Math Computer Science Department Denison University 30 April 2004 Retrieved 5 July 2010 Pioneers The people and ideas that made a difference George Stibitz 19041995 Kerry Redshaw 20 February 2006 Retrieved 5 July 2010 George Robert Stibitz Obituary Computer History Association of California 6 February 1995 Retrieved 5 July 2010 Konrad Zuses Legacy The Architecture of the Z1 and Z3 PDF IEEE Annals of the History of Computing 19 2 515 1997 doi 10110985586067 Introducing binary Revision 1 GCSE Computer Science BBC Retrieved 26 June 2019 a b Küveler Gerd Schwoch Dietrich 2013 1996 Arbeitsbuch Informatik eine praxisorientierte Einführung in die Datenverarbeitung mit Projektaufgabe in German ViewegVerlag reprint SpringerVerlag doi 1010079783322929075 ISBN 9783528049522 9783322929075 Retrieved 5 August 2015 a b Küveler Gerd Schwoch Dietrich 4 October 2007 Informatik für Ingenieure und Naturwissenschaftler PC und Mikrocomputertechnik Rechnernetze in German 2 5 ed Vieweg reprint SpringerVerlag ISBN 3834891916 9783834891914 Retrieved 5 August 2015 The Definitive Higher Math Guide to Long Division and Its Variants for Integers Math Vault 24 February 2019 Retrieved 26 June 2019 Base System Retrieved 31 August 2016 Further reading edit Sanchez Julio Canton Maria P 2007 Microcontroller programming the microchip PIC Boca Raton FL CRC Press p37 ISBN 0849371899 Redmond Geoffrey Hon TzeKi 2014 Teaching the I Ching Oxford University Press ISBN 0199766819 External links edit Wikimedia Commons has media related to Binary numeral system Wikibooks has a book on the topic of FractalsMathematicsbinary Binary System at cuttheknot Conversion of Fractions at cuttheknot Sir Francis Bacons BiLiteral Cypher system predates binary number system Authority control GND 41508051 NDL 00568548